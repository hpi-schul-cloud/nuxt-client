@use "sass:map";
@use "@/styles/settings.scss" as *;

* {
	tab-size: 2;
}

body {
	font-family: var(--font-primary);
	font-size: var(--text-base-size);
}

/* heading size */
@for $i from 1 through 6 {
	h#{$i},
	.h#{$i} {
		margin-top: 32px;
		margin-bottom: 12px;
		font-family: var(--font-accent);
		font-size: var(--heading-#{$i});
		font-weight: var(--font-weight-normal);
	}
}

h1,
.h1 {
	&:first-of-type {
		margin-top: 16px;
		margin-bottom: 32px;
	}
}

h5,
h6,
.h5,
.h6 {
	font-weight: var(--font-weight-bold);
}

/* text size */
.text-xs {
	font-size: var(--text-xs);
}

.text-sm {
	font-size: var(--text-sm);
}

.text-md {
	font-size: var(--text-md);
}

.text-lg {
	font-size: var(--text-lg);
}

p {
	margin-bottom: 16px;
}

b,
strong {
	font-weight: var(--font-weight-bold);
}

input,
select,
textarea,
button {
	font-family: inherit;
	font-size: var(--text-md);
}

/* utility classes */

.truncate {
	// truncate text if it exceeds parent
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@media #{map.get($display-breakpoints, 'sm-and-up')} {
	:root {
		--text-base-size: calc(1rem * var(--text-device-scale-ratio));
	}
}

@media #{map.get($display-breakpoints, 'md-and-up')} {
	:root {
		--text-base-size: calc(
			1rem * var(--text-device-scale-ratio) * var(--text-device-scale-ratio)
		);
	}
}
