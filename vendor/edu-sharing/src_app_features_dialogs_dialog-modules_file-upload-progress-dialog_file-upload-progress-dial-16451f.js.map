{"version":3,"file":"src_app_features_dialogs_dialog-modules_file-upload-progress-dialog_file-upload-progress-dial-16451f.js","mappings":"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","sources":["./src/app/features/dialogs/dialog-modules/file-upload-progress-dialog/file-upload-progress-dialog-data.ts","./src/app/features/dialogs/dialog-modules/file-upload-progress-dialog/file-upload-progress-dialog.component.ts","./src/app/features/dialogs/dialog-modules/file-upload-progress-dialog/file-upload-progress-dialog.component.html","./src/app/features/dialogs/dialog-modules/file-upload-progress-dialog/file-upload-progress-dialog.module.ts","./src/app/features/dialogs/dialog-modules/file-upload-progress-dialog/time.pipe.ts"],"sourcesContent":["import { Node } from '../../../../core-module/core.module';\n\nexport class FileUploadProgressDialogData {\n    parent: Node;\n    files: FileList;\n}\n\nexport type FileUploadProgressDialogResult = Node[] | null;\n","import { Component, Inject, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormatSizePipe } from 'ngx-edu-sharing-ui';\nimport {\n    DialogButton,\n    NodeWrapper,\n    RestConstants,\n    RestHelper,\n    RestNodeService,\n} from '../../../../core-module/core.module';\nimport { UploadProgress } from '../../../../core-module/rest/services/rest-connector.service';\nimport { CARD_DIALOG_DATA, Closable } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport {\n    FileUploadProgressDialogData,\n    FileUploadProgressDialogResult,\n} from './file-upload-progress-dialog-data';\nimport { map, switchMap } from 'rxjs/operators';\nimport { DialogsService } from '../../dialogs.service';\nimport { from, of } from 'rxjs';\nimport { NodeService, Node } from 'ngx-edu-sharing-api';\n\n/**\n * A dialog that handles uploading a given list of files and shows a progress bar per file to the\n * user.\n */\n@Component({\n    selector: 'es-file-upload-progress-dialog',\n    templateUrl: './file-upload-progress-dialog.component.html',\n    styleUrls: ['./file-upload-progress-dialog.component.scss'],\n})\nexport class FileUploadProgressDialogComponent implements OnInit {\n    progress: {\n        name: string;\n        progress: UploadProgress;\n        error?: { key: string; variables?: any };\n    }[] = [];\n    private resultList: Node[] = [];\n    private error = false;\n    private existingNodes: Node[];\n    processed = 0;\n    keep = true;\n    @ViewChild('existingFiles') existingFilesRef: TemplateRef<undefined>;\n\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: FileUploadProgressDialogData,\n        private dialogRef: CardDialogRef<\n            FileUploadProgressDialogData,\n            FileUploadProgressDialogResult\n        >,\n        private nodeService: RestNodeService,\n        private nodeApi: NodeService,\n        private dialogs: DialogsService,\n        private translate: TranslateService,\n    ) {}\n\n    ngOnInit(): void {\n        this.dialogRef.patchConfig({\n            buttons: [new DialogButton('CANCEL', { color: 'standard' }, () => this._cancel())],\n        });\n        for (const file of this.data.files) {\n            this.progress.push({ name: file.name, progress: { progress: 0 } });\n        }\n        // check for existing child nodes with the same file name\n        this._existingNodes()\n            .pipe(\n                switchMap((existingNodes: Node[]) => {\n                    // open the dialog only if this dialog is still open...\n                    if (this.dialogRef.getLifecycleState() !== 'open') return of(false);\n                    // if some files are already present as nodes then inform the user and ask whether\n                    // to keep or overwrite the files\n                    this.existingNodes = existingNodes;\n                    if (existingNodes.length > 0) {\n                        return from(this._openExistingDialog(existingNodes));\n                    }\n                    // if there are no existing nodes of the same name just proceed and upload\n                    return of(true);\n                }),\n            )\n            .subscribe((doUpload) => {\n                if (doUpload) {\n                    this._updateSubtitle();\n                    this._upload(0);\n                } else {\n                    this._cancel();\n                }\n            });\n    }\n\n    private async _openExistingDialog(existingNodes: Node[]) {\n        const multiple = existingNodes.length > 1;\n        let fileName, message, messageParameters;\n        if (multiple) {\n            fileName = null;\n            message = 'WORKSPACE.UPLOAD_EXISTS.MULTIPLE';\n            messageParameters = null;\n        } else {\n            fileName = existingNodes[0].name;\n            message = 'WORKSPACE.UPLOAD_EXISTS.SINGLE';\n            messageParameters = { fileName: fileName };\n        }\n        const dialogRef = await this.dialogs.openGenericDialog({\n            title: 'WORKSPACE.UPLOAD_EXISTS.TITLE',\n            message,\n            messageParameters,\n            contentTemplate: this.existingFilesRef,\n            context: { $implicit: multiple },\n            buttons: [\n                { label: 'CANCEL', config: { color: 'standard' } },\n                { label: 'WORKSPACE.UPLOAD_EXISTS.UPLOAD', config: { color: 'primary' } },\n            ],\n        });\n        const result = await dialogRef.afterClosed().toPromise();\n        return result !== 'CANCEL';\n    }\n\n    private _cancel() {\n        // first check whether the dialog has already been closed\n        if (this.dialogRef.getLifecycleState() !== 'open') return;\n        if (this.resultList.length > 0) {\n            // Close with nodes uploaded until now. Could also delete these nodes.\n            this.dialogRef.close(this.resultList);\n        } else {\n            this.dialogRef.close(null);\n        }\n    }\n\n    /**\n     * Returns all child nodes of the parent which match the file name of a\n     * file to be uploaded.\n     * @private\n     */\n    private _existingNodes() {\n        // get all children to compare against them\n        return this.nodeService\n            .getChildren(this._getParent(), [RestConstants.FILTER_FILES], {\n                propertyFilter: [],\n            })\n            .pipe(\n                map((children) => {\n                    let existing = [];\n                    const fileNames = Array.from(this.data.files).map((file) => file.name);\n                    const childNodes = children.nodes;\n                    for (let i = 0; i < childNodes.length; i++) {\n                        const childNode = childNodes[i];\n                        const childFileName = childNode.name;\n                        if (fileNames.some((fName) => fName == childFileName)) {\n                            existing.push(childNode);\n                        }\n                    }\n                    return existing;\n                }),\n            );\n    }\n\n    private _getParent(): string {\n        return this.data.parent ? this.data.parent.ref.id : RestConstants.INBOX;\n    }\n\n    private _upload(number: number) {\n        if (number >= this.data.files.length) {\n            if (this.error) {\n                this.dialogRef.patchConfig({ closable: Closable.Casual });\n            } else {\n                this._cancel();\n            }\n            return;\n        }\n        const file = this.data.files.item(number);\n        if (!file.type && !file.size) {\n            setTimeout(() => {\n                this.progress[number].progress.progress = -1;\n                this.progress[number].error = { key: 'FORMAT' };\n                this.error = true;\n                this._upload(number + 1);\n            }, 50);\n            return;\n        }\n        const nextUpload = (node: Node) => () => {\n            this.resultList.push(node);\n            this.progress[number].progress.progress = 100;\n            this.processed++;\n            this._updateSubtitle();\n            this._upload(number + 1);\n        };\n        const nextError = (node: Node) => (error: any) => {\n            this.error = true;\n            this.progress[number].error = this._mapError(error, node);\n            this.progress[number].progress.progress = -1;\n            this._upload(number + 1);\n        };\n        // check whether the file is already existing and if so\n        // if the user also chose to overwrite the old one only create a new version\n        const existingNode = this.existingNodes.find((node) => node.name == file.name);\n        if (existingNode && !this.keep) {\n            this.nodeApi\n                .changeContent(\n                    existingNode.ref.repo,\n                    existingNode.ref.id,\n                    'auto',\n                    RestConstants.COMMENT_CONTENT_UPDATE,\n                    { file },\n                )\n                .subscribe(nextUpload(existingNode), nextError(existingNode));\n        } else {\n            this.nodeService\n                .createNode(\n                    this._getParent(),\n                    RestConstants.CCM_TYPE_IO,\n                    [],\n                    RestHelper.createNameProperty(file.name),\n                    this.keep,\n                )\n                .subscribe((data: NodeWrapper) => {\n                    this.nodeService\n                        .uploadNodeContent(\n                            data.node.ref.id,\n                            file,\n                            RestConstants.COMMENT_MAIN_FILE_UPLOAD,\n                            'auto',\n                            (progress) => {\n                                progress.progress = Math.round(progress.progress * 100);\n                                this.progress[number].progress = progress;\n                            },\n                        )\n                        .subscribe(nextUpload(data.node), nextError(data.node));\n                }, nextError(null));\n        }\n    }\n\n    private _updateSubtitle(): void {\n        this.translate\n            .get('WORKSPACE.UPLOAD_SUBTITLE', {\n                progress: this.processed,\n                total: this.progress.length,\n            })\n            .subscribe((subtitle) => this.dialogRef.patchConfig({ subtitle }));\n    }\n\n    private _mapError(error: any, node: Node = null) {\n        // delete the now orphan node since it's empty\n        if (node) {\n            this.nodeService.deleteNode(node.ref.id, false).subscribe(() => {});\n        }\n        let i18nName: string;\n        let variables: any;\n        if (RestHelper.errorMatchesAny(error, RestConstants.CONTENT_VIRUS_SCAN_FAILED_EXCEPTION)) {\n            i18nName = 'VIRUS_SCAN_FAILED';\n        } else if (RestHelper.errorMatchesAny(error, RestConstants.CONTENT_VIRUS_EXCEPTION)) {\n            i18nName = 'VIRUS';\n        } else if (\n            RestHelper.errorMatchesAny(error, RestConstants.CONTENT_MIMETYPE_VERIFICATION_EXCEPTION)\n        ) {\n            i18nName = 'MIMETYPE_VERIFICATION';\n        } else if (\n            RestHelper.errorMatchesAny(\n                error,\n                RestConstants.CONTENT_NODE_FILE_SIZE_EXCEEDED_EXCEPTION,\n            )\n        ) {\n            i18nName = 'FILE_SIZE_EXCEEDED';\n            try {\n                const errorData = JSON.parse(error.response);\n                variables = {\n                    actualSize: new FormatSizePipe(this.translate).transform(\n                        errorData.details.actualSize,\n                    ),\n                    maxSize: new FormatSizePipe(this.translate).transform(\n                        errorData.details.maxSize,\n                    ),\n                };\n            } catch (e) {\n                console.warn(e);\n            }\n        } else if (\n            RestHelper.errorMatchesAny(\n                error,\n                RestConstants.CONTENT_FILE_EXTENSION_VERIFICATION_EXCEPTION,\n            )\n        ) {\n            i18nName = 'FILETYPE_VERIFICATION';\n        } else if (RestHelper.errorMatchesAny(error, RestConstants.CONTENT_QUOTA_EXCEPTION)) {\n            i18nName = 'QUOTA';\n        } else {\n            i18nName = 'UNKNOWN';\n        }\n        return { key: i18nName, variables };\n    }\n}\n","<div *ngFor=\"let item of progress\" class=\"group\">\n  <div class=\"icon\">\n    <i class=\"material-icons\">file_upload</i>\n  </div>\n  <div class=\"center\">\n    <div class=\"fileName\">{{ item.name }}</div>\n    <div class=\"loading\" *ngIf=\"item.progress.progress >= 0 && item.progress.progress < 100\"></div>\n    <div class=\"progress\" *ngIf=\"item\">\n      <div\n        class=\"determinate\"\n        [class.determinate-finished]=\"item.progress.progress >= 100\"\n        [style.width]=\"item.progress.progress + '%'\"\n      ></div>\n    </div>\n    <div class=\"info\" [style.visibility]=\"item.progress.loaded || item.error ? '' : 'hidden'\">\n      <span class=\"info-error\" *ngIf=\"item.error\">{{\n        'WORKSPACE.UPLOAD_ERROR.' + item.error.key | translate : item.error.variables\n      }}</span>\n      <div *ngIf=\"item.progress.loaded\">\n        <span *ngIf=\"item.progress.remaining > 1\">{{\n          'WORKSPACE.UPLOAD_REMAINING' | translate : { time: item.progress.remaining | formatTime }\n        }}</span>\n        <span *ngIf=\"item.progress.remaining <= 1\">{{\n          'WORKSPACE.UPLOAD_FINISHING' | translate\n        }}</span>\n        <span class=\"size\"\n          >({{ item.progress.loaded | formatSize }} / {{ item.progress.total | formatSize }})</span\n        >\n      </div>\n    </div>\n  </div>\n  <div class=\"right\">\n    <div class=\"done success\" *ngIf=\"!item.progress.loaded && item.progress.progress >= 100\">\n      <i class=\"material-icons\">done</i>\n    </div>\n    <div class=\"done failed\" *ngIf=\"!item.progress.loaded && item.progress.progress < 0\">\n      <i class=\"material-icons\">close</i>\n    </div>\n  </div>\n</div>\n\n<ng-template #existingFiles let-multiple>\n  <mat-radio-group class=\"existing-radio-group\" [(ngModel)]=\"keep\">\n    <mat-radio-button class=\"existing-radio-button\" [value]=\"false\">\n      {{\n        'WORKSPACE.UPLOAD_EXISTS.' + (multiple ? 'MULTIPLE' : 'SINGLE') + '_OVERWRITE' | translate\n      }}\n    </mat-radio-button>\n    <mat-radio-button class=\"existing-radio-button\" [value]=\"true\">\n      {{ 'WORKSPACE.UPLOAD_EXISTS.' + (multiple ? 'MULTIPLE' : 'SINGLE') + '_KEEP' | translate }}\n    </mat-radio-button>\n  </mat-radio-group>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { FileUploadProgressDialogComponent } from './file-upload-progress-dialog.component';\nimport { TimePipe } from './time.pipe';\n\nexport { FileUploadProgressDialogComponent };\n\n@NgModule({\n    declarations: [FileUploadProgressDialogComponent, TimePipe],\n    imports: [SharedModule],\n})\nexport class FileUploadProgressDialogModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { isNumeric } from 'ngx-edu-sharing-ui';\n\n/**\n * Format a given value of time in seconds to a readable time span\n * e.g. 2m 5s\n */\n@Pipe({ name: 'formatTime' })\nexport class TimePipe implements PipeTransform {\n    transform(value: number): string {\n        if (!isNumeric(value)) return 'invalid value';\n\n        let hours = Math.floor(value / 3600);\n        let minutes = Math.floor((value / 60) % 60);\n        let seconds = Math.floor(value % 60);\n        let str = '';\n        if (hours > 0) {\n            str += hours + ' ' + this.translate.instant('HOUR' + (hours != 1 ? 'S' : '')) + ' ';\n        }\n        if (minutes > 0) {\n            str +=\n                minutes + ' ' + this.translate.instant('MINUTE' + (minutes != 1 ? 'S' : '')) + ' ';\n        }\n        if (seconds > 0) {\n            str +=\n                seconds + ' ' + this.translate.instant('SECOND' + (seconds != 1 ? 'S' : '')) + ' ';\n        }\n        return str.trim();\n    }\n    constructor(private translate: TranslateService) {}\n}\n"],"names":["FileUploadProgressDialogData","FormatSizePipe","DialogButton","RestConstants","RestHelper","CARD_DIALOG_DATA","Closable","map","switchMap","from","of","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵstyleProp","item_r3","progress","ɵɵclassProp","ɵɵtext","ɵɵtextInterpolate","ɵɵpipeBind2","error","key","variables","ɵɵpureFunction1","_c1","ɵɵpipeBind1","remaining","ɵɵtemplate","FileUploadProgressDialogComponent_div_0_div_11_span_1_Template","FileUploadProgressDialogComponent_div_0_div_11_span_2_Template","ɵɵproperty","ɵɵtextInterpolate2","loaded","total","FileUploadProgressDialogComponent_div_0_div_7_Template","FileUploadProgressDialogComponent_div_0_div_8_Template","FileUploadProgressDialogComponent_div_0_span_10_Template","FileUploadProgressDialogComponent_div_0_div_11_Template","FileUploadProgressDialogComponent_div_0_div_13_Template","FileUploadProgressDialogComponent_div_0_div_14_Template","name","ɵɵlistener","FileUploadProgressDialogComponent_ng_template_1_Template_mat_radio_group_ngModelChange_0_listener","$event","ɵɵrestoreView","_r18","ctx_r17","ɵɵnextContext","ɵɵresetView","keep","ctx_r2","ɵɵtextInterpolate1","multiple_r16","FileUploadProgressDialogComponent","constructor","data","dialogRef","nodeService","nodeApi","dialogs","translate","resultList","processed","ngOnInit","patchConfig","buttons","color","_cancel","file","files","push","_existingNodes","pipe","existingNodes","getLifecycleState","length","_openExistingDialog","subscribe","doUpload","_updateSubtitle","_upload","_this","_asyncToGenerator","multiple","fileName","message","messageParameters","openGenericDialog","title","contentTemplate","existingFilesRef","context","$implicit","label","config","result","afterClosed","toPromise","close","getChildren","_getParent","FILTER_FILES","propertyFilter","children","existing","fileNames","Array","childNodes","nodes","i","childNode","childFileName","some","fName","parent","ref","id","INBOX","number","closable","Casual","item","type","size","setTimeout","nextUpload","node","nextError","_mapError","existingNode","find","changeContent","repo","COMMENT_CONTENT_UPDATE","createNode","CCM_TYPE_IO","createNameProperty","uploadNodeContent","COMMENT_MAIN_FILE_UPLOAD","Math","round","get","subtitle","deleteNode","i18nName","errorMatchesAny","CONTENT_VIRUS_SCAN_FAILED_EXCEPTION","CONTENT_VIRUS_EXCEPTION","CONTENT_MIMETYPE_VERIFICATION_EXCEPTION","CONTENT_NODE_FILE_SIZE_EXCEEDED_EXCEPTION","errorData","JSON","parse","response","actualSize","transform","details","maxSize","e","console","warn","CONTENT_FILE_EXTENSION_VERIFICATION_EXCEPTION","CONTENT_QUOTA_EXCEPTION","_","ɵɵdirectiveInject","i1","CardDialogRef","i2","RestNodeService","i3","NodeService","i4","DialogsService","i5","TranslateService","_2","selectors","viewQuery","FileUploadProgressDialogComponent_Query","rf","ctx","FileUploadProgressDialogComponent_div_0_Template","FileUploadProgressDialogComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","SharedModule","TimePipe","FileUploadProgressDialogModule","_3","declarations","imports","isNumeric","value","hours","floor","minutes","seconds","str","instant","trim","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}