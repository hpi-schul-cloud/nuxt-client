{"version":3,"file":"default-src_app_pages_workspace-page_explorer_explorer_component_ts.js","mappings":"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","sources":["./src/app/pages/workspace-page/explorer/explorer.component.ts","./src/app/pages/workspace-page/explorer/explorer.component.html","./src/app/pages/workspace-page/workspace-utils.ts"],"sourcesContent":["import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ConfigurationService,\n    Node,\n    NodeList,\n    RestConnectorService,\n    RestConstants,\n    RestNodeService,\n    RestSearchService,\n    SessionStorageService,\n    UIService,\n} from '../../../core-module/core.module';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Toast } from '../../../services/toast';\nimport { Helper } from '../../../core-module/rest/helper';\nimport {\n    ActionbarComponent,\n    CustomOptions,\n    DropSource,\n    DropTarget,\n    FetchEvent,\n    InteractionType,\n    ListItem,\n    ListSortConfig,\n    LocalEventsService,\n    NodeClickEvent,\n    NodeDataSource,\n    NodeEntriesDataType,\n    NodeEntriesDisplayType,\n    NodeEntriesWrapperComponent,\n    NodeRoot,\n    Scope,\n    TemporaryStorageService,\n} from 'ngx-edu-sharing-ui';\nimport { canDropOnNode } from '../workspace-utils';\nimport { BehaviorSubject, combineLatest, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'es-workspace-explorer',\n    templateUrl: 'explorer.component.html',\n    styleUrls: ['explorer.component.scss'],\n})\nexport class WorkspaceExplorerComponent implements OnDestroy, OnChanges, AfterViewInit {\n    public readonly SCOPES = Scope;\n    readonly InteractionType = InteractionType;\n    readonly NodeEntriesDisplayType = NodeEntriesDisplayType;\n\n    public static getColumns(\n        connector: RestConnectorService,\n        customColumns: ListItem[] = [],\n        configColumns: string[] = [],\n    ) {\n        let defaultColumns: ListItem[] = [];\n        defaultColumns.push(new ListItem('NODE', RestConstants.CM_NAME));\n        defaultColumns.push(new ListItem('NODE', RestConstants.CM_CREATOR));\n        defaultColumns.push(new ListItem('NODE', RestConstants.CM_MODIFIED_DATE));\n        if (connector.getCurrentLogin() ? connector.getCurrentLogin().isAdmin : false) {\n            defaultColumns.push(new ListItem('NODE', RestConstants.NODE_ID));\n\n            const repsource = new ListItem('NODE', RestConstants.CCM_PROP_REPLICATIONSOURCEID);\n            repsource.visible = false;\n            defaultColumns.push(repsource);\n        }\n        const title = new ListItem('NODE', RestConstants.LOM_PROP_TITLE);\n        title.visible = false;\n        const size = new ListItem('NODE', RestConstants.SIZE);\n        size.visible = false;\n        const created = new ListItem('NODE', RestConstants.CM_PROP_C_CREATED);\n        created.visible = false;\n        const mediatype = new ListItem('NODE', RestConstants.MEDIATYPE);\n        mediatype.visible = false;\n        const keywords = new ListItem('NODE', RestConstants.LOM_PROP_GENERAL_KEYWORD);\n        keywords.visible = false;\n        const dimensions = new ListItem('NODE', RestConstants.DIMENSIONS);\n        dimensions.visible = false;\n        const version = new ListItem('NODE', RestConstants.LOM_PROP_LIFECYCLE_VERSION);\n        version.visible = false;\n        const usage = new ListItem('NODE', RestConstants.VIRTUAL_PROP_USAGECOUNT);\n        usage.visible = false;\n        const license = new ListItem('NODE', RestConstants.CCM_PROP_LICENSE);\n        license.visible = false;\n        const wfStatus = new ListItem('NODE', RestConstants.CCM_PROP_WF_STATUS);\n        wfStatus.visible = false;\n        defaultColumns.push(title);\n        defaultColumns.push(size);\n        defaultColumns.push(created);\n        defaultColumns.push(mediatype);\n        defaultColumns.push(keywords);\n        defaultColumns.push(dimensions);\n        defaultColumns.push(version);\n        defaultColumns.push(usage);\n        defaultColumns.push(license);\n        defaultColumns.push(wfStatus);\n\n        if (Array.isArray(configColumns)) {\n            const configList: ListItem[] = [];\n            for (const col of defaultColumns) {\n                if (configColumns.indexOf(col.name) != -1) {\n                    col.visible = true;\n                    configList.push(col);\n                }\n            }\n            for (const col of defaultColumns) {\n                if (configColumns.indexOf(col.name) == -1) {\n                    col.visible = false;\n                    configList.push(col);\n                }\n            }\n            // sort as defined inside config\n            configList.sort((a, b) => {\n                let pos1 = configColumns.indexOf(a.name);\n                let pos2 = configColumns.indexOf(b.name);\n                if (pos1 === -1) pos1 = configColumns.length;\n                if (pos2 === -1) pos2 = configColumns.length;\n                return pos1 - pos2;\n            });\n            defaultColumns = configList;\n        }\n        if (Array.isArray(customColumns)) {\n            for (const column of defaultColumns) {\n                let add = true;\n                for (const column2 of customColumns) {\n                    if (column.name === column2.name) {\n                        add = false;\n                        break;\n                    }\n                }\n                if (add) {\n                    customColumns.push(column);\n                }\n            }\n            return customColumns;\n        }\n        return defaultColumns;\n    }\n\n    @ViewChild(NodeEntriesWrapperComponent) nodeEntries: NodeEntriesWrapperComponent<Node>;\n    @Input() customOptions: CustomOptions;\n    @Input() dataSource: NodeDataSource<Node>;\n    @Output() nodesChange = new EventEmitter<Node[]>();\n    sort: ListSortConfig = {\n        allowed: true,\n        active: RestConstants.CM_NAME,\n        direction: 'asc',\n        columns: [],\n    };\n\n    public columns: ListItem[] = [];\n    @Input() displayType = NodeEntriesDisplayType.Table;\n    @Output() refreshTree = new EventEmitter<void>();\n    @Output() displayTypeChange = new EventEmitter<NodeEntriesDisplayType>();\n    @Input() reorderDialog = false;\n    @Output() reorderDialogChange = new EventEmitter<boolean>();\n    @Input() preventKeyevents: boolean;\n    @Input() actionbar: ActionbarComponent;\n\n    totalCount: number;\n\n    public searchQuery$ = new BehaviorSubject<string>(null);\n    node$ = new BehaviorSubject<Node>(null);\n    load$ = new ReplaySubject<{ nodes: Observable<NodeList>; reset: boolean }>();\n    private lastRequestSearch: boolean;\n\n    _root: NodeRoot;\n    @Input() set root(root: NodeRoot) {\n        this._root = root;\n        this.storage\n            .get(SessionStorageService.KEY_WORKSPACE_SORT + root, null)\n            .subscribe((data) => {\n                if (data?.active != null) {\n                    this.sort.active = data.active;\n                    this.sort.direction = data.direction;\n                } else {\n                    this.sort.active = RestConstants.CM_NAME;\n                    this.sort.direction = 'asc';\n                }\n            });\n    }\n    @Input() set current(current: Node) {\n        this.setNode(current);\n    }\n    @Input() set searchQuery(query: any) {\n        this.setSearchQuery(query);\n    }\n    @Output() onOpenNode = new EventEmitter<NodeEntriesDataType>();\n    @Output() onViewNode = new EventEmitter();\n    @Output() onSelectionChanged = new EventEmitter();\n    @Output() onSelectNode = new EventEmitter<NodeEntriesDataType>();\n    @Output() onSearchGlobal = new EventEmitter();\n    @Output() onDrop = new EventEmitter<{ target: DropTarget; source: DropSource<Node> }>();\n    @Output() onReset = new EventEmitter();\n    private path: Node[];\n    private destroyed = new Subject<void>();\n    searchGlobal() {\n        this.onSearchGlobal.emit(this.searchQuery$.value);\n    }\n    public load(event: FetchEvent = null) {\n        if (this.node$.value == null && !this.searchQuery$.value) return;\n        if (this.dataSource.isLoading) {\n            // return;\n        }\n        if (this.searchQuery$.value) {\n            this.sort.columns = RestConstants.POSSIBLE_SORT_BY_FIELDS_SOLR;\n        } else {\n            this.sort.columns = RestConstants.POSSIBLE_SORT_BY_FIELDS;\n        }\n        if (!this.sort.columns.some((s) => s.name === this.sort.active)) {\n            this.sort.active = RestConstants.CM_NAME;\n            this.sort.direction = 'asc';\n            // set sorting will reinit everything\n            this.setSorting(this.sort);\n            return;\n        }\n        if (event?.reset) {\n            this.dataSource.reset();\n            this.nodeEntries.getSelection().clear();\n            this.onReset.emit();\n            if (event.offset === 0) {\n                this.nodeEntries.resetPagination();\n            }\n        } else if (this.dataSource.isFullyLoaded()) {\n            return;\n        }\n        this.dataSource.isLoading = true;\n        // ignore virtual (new) added/uploaded elements\n        const offset = event.offset || this.getRealNodeCount();\n        const request: any = {\n            offset,\n            propertyFilter: [\n                RestConstants.ALL,\n                /*RestConstants.CM_MODIFIED_DATE,\n              RestConstants.CM_CREATOR,\n              RestConstants.CM_PROP_C_CREATED,\n              RestConstants.CCM_PROP_LICENSE,\n              RestConstants.LOM_PROP_LIFECYCLE_VERSION,\n              RestConstants.CCM_PROP_WF_STATUS,\n              RestConstants.CCM_PROP_CCRESSOURCETYPE,\n              RestConstants.CCM_PROP_CCRESSOURCESUBTYPE,\n              RestConstants.CCM_PROP_CCRESSOURCEVERSION,\n              RestConstants.CCM_PROP_WIDTH,\n              RestConstants.CCM_PROP_HEIGHT,\n              RestConstants.VIRTUAL_PROP_USAGECOUNT,*/\n            ],\n            sortBy: [this.sort.active],\n            sortAscending: this.sort.direction === 'asc',\n            count: event?.amount,\n        };\n        if (this.searchQuery$.value) {\n            const query = this.searchQuery$.value;\n            this.lastRequestSearch = true;\n            /*this.search.searchByProperties([RestConstants.NODE_ID,RestConstants.CM_PROP_TITLE,RestConstants.CM_NAME,RestConstants.LOM_PROP_DESCRIPTION,RestConstants.LOM_PROP_GENERAL_KEYWORD],\n              [query,query,query,query,query],[],RestConstants.COMBINE_MODE_OR,RestConstants.CONTENT_TYPE_FILES_AND_FOLDERS, request).subscribe((data : NodeList) => this.addNodes(data,true));*/\n            const criterias: any = [];\n            criterias.push({ property: RestConstants.PRIMARY_SEARCH_CRITERIA, values: [query] });\n            if (this.node$.value) {\n                criterias.push({\n                    property: 'parent',\n                    values: [this.node$.value ? this.node$.value.ref.id : ''],\n                });\n            }\n            this.load$.next({\n                reset: event?.reset,\n                nodes: this.search.search(\n                    criterias,\n                    [],\n                    request,\n                    this.connector.getCurrentLogin() && this.connector.getCurrentLogin().isAdmin\n                        ? RestConstants.CONTENT_TYPE_ALL\n                        : RestConstants.CONTENT_TYPE_FILES_AND_FOLDERS,\n                    RestConstants.HOME_REPOSITORY,\n                    RestConstants.DEFAULT,\n                    [],\n                    'workspace',\n                ),\n            });\n            // this.nodeApi.searchNodes(query,[],request).subscribe((data : NodeList) => this.addNodes(data,true));\n        } else {\n            this.lastRequestSearch = false;\n            this.load$.next({\n                reset: event?.reset,\n                nodes: this.nodeApi.getChildren(this.node$.value.ref.id, [], request),\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n        this.temporaryStorage.set(\n            TemporaryStorageService.NODE_RENDER_PARAMETER_DATA_SOURCE,\n            this.dataSource,\n        );\n    }\n\n    async ngOnChanges(changes: SimpleChanges) {\n        if (changes.displayType) {\n            await this.initOptions();\n        }\n    }\n\n    private handleError(error: any) {\n        if (error.status == 404)\n            this.toast.error(null, 'WORKSPACE.TOAST.NOT_FOUND', { id: this.node$.value.ref.id });\n        else this.toast.error(error);\n\n        this.dataSource.isLoading = false;\n    }\n    private addNodes(data: NodeList) {\n        this.dataSource.isLoading = false;\n        if (data && data.nodes) {\n            this.dataSource.appendData(data.nodes);\n            this.dataSource.setPagination(data.pagination);\n        }\n    }\n    constructor(\n        private connector: RestConnectorService,\n        private translate: TranslateService,\n        private storage: SessionStorageService,\n        private temporaryStorage: TemporaryStorageService,\n        private config: ConfigurationService,\n        private search: RestSearchService,\n        private toast: Toast,\n        public ui: UIService,\n        private nodeApi: RestNodeService,\n        private localEvents: LocalEventsService,\n    ) {\n        // super(temporaryStorage,['_node','_nodes','sortBy','sortAscending','columns','totalCount','hasMoreToLoad']);\n        this.initColumns();\n        this.registerNodesDeleted();\n        combineLatest([this.node$, this.searchQuery$])\n            .pipe(\n                distinctUntilChanged((a, b) => {\n                    return Helper.objectEquals(a[0], b[0]) && a[1] === b[1];\n                }),\n                debounceTime(10),\n            )\n            .subscribe(async (value) => {\n                // FIXME: This goes back to the first page when reloading. `NodeEntriesWrapper`\n                // would restore the page via the `page` query parameter otherwise.\n                await this.load({\n                    offset: 0,\n                    reset: true,\n                });\n            });\n        this.load$\n            .pipe(\n                // map((o) => o.toPromise()),\n                // switchMap(result => result.toPromise())\n                tap(({ reset }) => {\n                    if (reset) {\n                        this.dataSource.reset();\n                    }\n                    this.dataSource.isLoading = true;\n                }),\n                switchMap(\n                    async ({ nodes }) =>\n                        await nodes\n                            .pipe(\n                                catchError((err) => {\n                                    this.handleError(err);\n                                    return of(null);\n                                }),\n                            )\n                            .toPromise(),\n                ),\n            )\n            .subscribe(async (data) => {\n                if (data) {\n                    this.addNodes(data);\n                }\n            });\n    }\n\n    async ngAfterViewInit() {\n        await this.initOptions();\n    }\n    public async setSorting(config: ListSortConfig) {\n        this.sort = config;\n        await this.storage.set(SessionStorageService.KEY_WORKSPACE_SORT + this._root, {\n            active: config.active,\n            direction: config.direction,\n        });\n        await this.load({ reset: true, offset: 0 });\n    }\n    public onSelection(event: Node[]) {\n        this.onSelectionChanged.emit(event);\n    }\n    /*\n    private addParentToPath(node : Node,path : string[]) {\n\n      path.splice(1,0,node.ref.id);\n      if (node.parent.id==path[0] || node.parent.id==null) {\n        this.onOpenNode.emit(node);\n        return;\n      }\n      this.nodeApi.getNodeMetadata(node.parent.id).subscribe((data: NodeWrapper)=> {\n        this.addParentToPath(data.node, path);\n      });\n\n    }\n     */\n    public doubleClick(node: Node) {\n        this.onOpenNode.emit(node);\n    }\n\n    private setNode(current: Node) {\n        this.searchQuery$.next(null);\n        if (!current) {\n            this.node$.next(null);\n            return;\n        }\n\n        if (this.dataSource?.isLoading) {\n            setTimeout(() => this.setNode(current), 10);\n            return;\n        }\n        if (Helper.objectEquals(this.node$.value, current)) return;\n        this.node$.next(current);\n        this.initOptions();\n    }\n\n    private setSearchQuery(query: any) {\n        setTimeout(() => {\n            if (query && query.query) {\n                this.searchQuery$.next(query.query);\n                this.node$.next(query.node);\n            } else {\n                this.searchQuery$.next(null);\n            }\n        });\n    }\n    canDrop = canDropOnNode;\n    drop = (target: DropTarget, source: DropSource<Node>) => {\n        this.onDrop.emit({\n            target,\n            source,\n        });\n    };\n\n    private getRealNodeCount() {\n        return this.dataSource?.getData().filter((n) => !n.virtual).length;\n    }\n\n    initColumns() {\n        this.config.get('workspaceColumns').subscribe((data: string[]) => {\n            this.storage.get('workspaceColumns').subscribe((columns: any[]) => {\n                this.columns = WorkspaceExplorerComponent.getColumns(this.connector, columns, data);\n            });\n        });\n    }\n\n    select(event: NodeClickEvent<NodeEntriesDataType>) {\n        if (\n            !(\n                this.nodeEntries.getSelection().selected.length === 1 &&\n                this.nodeEntries.getSelection().selected[0] === event.element\n            )\n        ) {\n            this.nodeEntries.getSelection().clear();\n        }\n        this.nodeEntries.getSelection().toggle(event.element as Node);\n    }\n\n    private async initOptions() {\n        await this.nodeEntries?.initOptionsGenerator({\n            actionbar: this.actionbar,\n            customOptions: this.customOptions,\n            parent: this.node$.value,\n        });\n    }\n\n    private registerNodesDeleted(): void {\n        this.localEvents.nodesDeleted.pipe(takeUntil(this.destroyed)).subscribe((nodes) => {\n            this.dataSource.removeData(nodes);\n            this.nodeEntries?.getSelection().clear();\n        });\n    }\n\n    saveColumns(columns: ListItem[]) {\n        this.storage.set('workspaceColumns', columns);\n    }\n\n    clickItem(event: NodeClickEvent<NodeEntriesDataType>) {\n        if (this.ui.isMobile()) {\n            this.onOpenNode.emit(event.element);\n        } else {\n            this.select(event);\n        }\n    }\n\n    syncTreeViewOnAdd(nodes: Node[]) {\n        if (nodes.filter((n) => n.virtual && n.isDirectory).length) {\n            this.refreshTree.emit();\n        }\n    }\n}\n","<es-node-entries-wrapper\n  [dataSource]=\"dataSource\"\n  [scope]=\"SCOPES.WorkspaceList\"\n  [columns]=\"columns\"\n  [configureColumns]=\"true\"\n  (columnsChange)=\"saveColumns($event)\"\n  [displayType]=\"displayType\"\n  [class.grid]=\"displayType !== NodeEntriesDisplayType.Table\"\n  (displayTypeChange)=\"displayTypeChange.emit($event)\"\n  [elementInteractionType]=\"InteractionType.Emitter\"\n  (fetchData)=\"load($event)\"\n  [sort]=\"sort\"\n  [dragDrop]=\"{\n    dragAllowed: true,\n    dropAllowed: canDrop,\n    dropped: drop\n  }\"\n  [primaryInstance]=\"true\"\n  [singleClickHint]=\"'static'\"\n  (sortChange)=\"setSorting($event)\"\n  (clickItem)=\"clickItem($event)\"\n  (dblClickItem)=\"onOpenNode.emit($event.element)\"\n  (virtualNodesAdded)=\"syncTreeViewOnAdd($event)\"\n>\n  <ng-template #empty>\n    <h5 class=\"noElementsInfo\" *ngIf=\"searchQuery$.value == null || searchQuery$.value === ''\">\n      {{ 'WORKSPACE.NO_NODES_IN_FOLDER' | translate }}\n    </h5>\n    <h5 class=\"noElementsInfo\" *ngIf=\"!(searchQuery$.value == null || searchQuery$.value === '')\">\n      <div *ngIf=\"node$.value\">\n        {{ 'WORKSPACE.NO_MATCHING_ITEMS_FOLDER' | translate : { name: node$.value.name } }}\n      </div>\n      <div *ngIf=\"node$.value\" class=\"clickable\" (click)=\"searchGlobal()\">\n        {{ 'WORKSPACE.SEARCH_GLOBAL' | translate }}\n      </div>\n      <div *ngIf=\"!node$.value\">{{ 'WORKSPACE.NO_MATCHING_ITEMS' | translate }}</div>\n    </h5>\n  </ng-template>\n</es-node-entries-wrapper>\n","import { Node, RestConstants } from '../../core-module/core.module';\nimport { CanDrop, DragData } from 'ngx-edu-sharing-ui';\n\nexport function canDropOnNode(dragData: DragData<Node>): CanDrop {\n    if (dragData.draggedNodes.includes(dragData.target)) {\n        // When the target is the exact same object as one of the dragged nodes, the user is\n        // hovering over a placeholder of a dragged node. They likely want to cancel the drag\n        // operation, so we don't print an error message.\n        return { accept: false, denyExplicit: false };\n    } else if (!dragData.target.isDirectory) {\n        return { accept: false, denyExplicit: false, denyReason: 'WORKSPACE.TARGET_NO_DIRECTORY' };\n    } else if (dragData.draggedNodes.some((node) => node.ref.id === dragData.target.ref.id)) {\n        return {\n            accept: false,\n            denyExplicit: false,\n            denyReason: 'WORKSPACE.SOURCE_TARGET_IDENTICAL',\n        };\n    } else if (dragData.draggedNodes.some((node) => node.parent?.id === dragData.target.ref.id)) {\n        return {\n            accept: false,\n            denyExplicit: false,\n            denyReason: 'WORKSPACE.SOURCE_TARGET_IDENTICAL',\n        };\n    } else if (!dragData.target.access.includes(RestConstants.ACCESS_WRITE)) {\n        return {\n            accept: false,\n            denyExplicit: true,\n            denyReason: 'WORKSPACE.TARGET_NO_WRITE_PERMISSIONS',\n        };\n    } else {\n        return canDragDrop(dragData);\n    }\n}\n\nexport function canDragDrop(dragData: DragData): CanDrop {\n    if (\n        dragData.action === 'move' &&\n        dragData.draggedNodes.some((node) => !node.access.includes(RestConstants.ACCESS_WRITE))\n    ) {\n        return {\n            accept: false,\n            denyExplicit: true,\n            denyReason: 'WORKSPACE.SOURCE_NO_WRITE_PERMISSIONS',\n        };\n    } else if (dragData.action === 'link') {\n        return {\n            accept: false,\n            denyExplicit: true,\n            denyReason: 'WORKSPACE.FEATURE_NOT_IMPLEMENTED',\n        };\n    } else {\n        return { accept: true };\n    }\n}\n"],"names":["EventEmitter","RestConstants","SessionStorageService","Helper","InteractionType","ListItem","NodeEntriesDisplayType","NodeEntriesWrapperComponent","Scope","TemporaryStorageService","canDropOnNode","BehaviorSubject","combineLatest","of","ReplaySubject","Subject","catchError","debounceTime","distinctUntilChanged","switchMap","takeUntil","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵpipeBind2","ɵɵpureFunction1","_c0","ctx_r4","node$","value","name","ɵɵlistener","WorkspaceExplorerComponent_ng_template_1_h5_1_div_2_Template_div_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","searchGlobal","ɵɵtextInterpolate","ɵɵtemplate","WorkspaceExplorerComponent_ng_template_1_h5_1_div_1_Template","WorkspaceExplorerComponent_ng_template_1_h5_1_div_2_Template","WorkspaceExplorerComponent_ng_template_1_h5_1_div_3_Template","ɵɵproperty","ctx_r3","WorkspaceExplorerComponent_ng_template_1_h5_0_Template","WorkspaceExplorerComponent_ng_template_1_h5_1_Template","ctx_r1","searchQuery$","WorkspaceExplorerComponent","getColumns","connector","customColumns","configColumns","defaultColumns","push","CM_NAME","CM_CREATOR","CM_MODIFIED_DATE","getCurrentLogin","isAdmin","NODE_ID","repsource","CCM_PROP_REPLICATIONSOURCEID","visible","title","LOM_PROP_TITLE","size","SIZE","created","CM_PROP_C_CREATED","mediatype","MEDIATYPE","keywords","LOM_PROP_GENERAL_KEYWORD","dimensions","DIMENSIONS","version","LOM_PROP_LIFECYCLE_VERSION","usage","VIRTUAL_PROP_USAGECOUNT","license","CCM_PROP_LICENSE","wfStatus","CCM_PROP_WF_STATUS","Array","isArray","configList","col","indexOf","sort","a","b","pos1","pos2","length","column","add","column2","root","_root","storage","get","KEY_WORKSPACE_SORT","subscribe","data","active","direction","current","setNode","searchQuery","query","setSearchQuery","onSearchGlobal","emit","load","event","dataSource","isLoading","columns","POSSIBLE_SORT_BY_FIELDS_SOLR","POSSIBLE_SORT_BY_FIELDS","some","s","setSorting","reset","nodeEntries","getSelection","clear","onReset","offset","resetPagination","isFullyLoaded","getRealNodeCount","request","propertyFilter","ALL","sortBy","sortAscending","count","amount","lastRequestSearch","criterias","property","PRIMARY_SEARCH_CRITERIA","values","ref","id","load$","next","nodes","search","CONTENT_TYPE_ALL","CONTENT_TYPE_FILES_AND_FOLDERS","HOME_REPOSITORY","DEFAULT","nodeApi","getChildren","ngOnDestroy","destroyed","complete","temporaryStorage","set","NODE_RENDER_PARAMETER_DATA_SOURCE","ngOnChanges","changes","_this","_asyncToGenerator","displayType","initOptions","handleError","error","status","toast","addNodes","appendData","setPagination","pagination","constructor","translate","config","ui","localEvents","_this2","SCOPES","nodesChange","allowed","Table","refreshTree","displayTypeChange","reorderDialog","reorderDialogChange","onOpenNode","onViewNode","onSelectionChanged","onSelectNode","onDrop","canDrop","drop","target","source","initColumns","registerNodesDeleted","pipe","objectEquals","_ref","_x","apply","arguments","_ref2","err","toPromise","_x2","_ref3","_x3","ngAfterViewInit","_this3","_this4","onSelection","doubleClick","node","setTimeout","getData","filter","n","virtual","select","selected","element","toggle","_this5","initOptionsGenerator","actionbar","customOptions","parent","nodesDeleted","removeData","saveColumns","clickItem","isMobile","syncTreeViewOnAdd","isDirectory","_","ɵɵdirectiveInject","i1","RestConnectorService","i2","TranslateService","i3","ConfigurationService","RestSearchService","i4","Toast","UIService","RestNodeService","LocalEventsService","_2","selectors","viewQuery","WorkspaceExplorerComponent_Query","rf","ctx","WorkspaceExplorerComponent_Template_es_node_entries_wrapper_columnsChange_0_listener","$event","WorkspaceExplorerComponent_Template_es_node_entries_wrapper_displayTypeChange_0_listener","WorkspaceExplorerComponent_Template_es_node_entries_wrapper_fetchData_0_listener","WorkspaceExplorerComponent_Template_es_node_entries_wrapper_sortChange_0_listener","WorkspaceExplorerComponent_Template_es_node_entries_wrapper_clickItem_0_listener","WorkspaceExplorerComponent_Template_es_node_entries_wrapper_dblClickItem_0_listener","WorkspaceExplorerComponent_Template_es_node_entries_wrapper_virtualNodesAdded_0_listener","WorkspaceExplorerComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","ɵɵclassProp","WorkspaceList","Emitter","ɵɵpureFunction2","_c1","dragData","draggedNodes","includes","accept","denyExplicit","denyReason","access","ACCESS_WRITE","canDragDrop","action"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}