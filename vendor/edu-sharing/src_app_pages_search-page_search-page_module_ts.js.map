{"version":3,"file":"src_app_pages_search-page_search-page_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuC;;AAUvC;;;AAMM,MAAOC,uBAAuB;EAChCC,YAAoBC,QAAyC;IAAzC,KAAAA,QAAQ,GAARA,QAAQ;EAAoC;EAEhE;;;EAGAC,kBAAkBA,CAACC,eAA0C;IACzD,IAAI,CAACF,QAAQ,CAACE,eAAe,CAACC,IAAI,CAACD,eAAe,CAAC;EACvD;EAAC,QAAAE,CAAA;qBARQN,uBAAuB,EAAAO,sDAAA,CAAAE,+BAAA;EAAA;EAAA,QAAAC,EAAA;WAAvBV,uBAAuB;IAAAW,OAAA,EAAvBX,uBAAuB,CAAAY,IAAA;IAAAC,UAAA,EAFpB;EAAM;;AAatB;;;;AAOM,MAAOJ,+BAA+B;EAH5CR,YAAA;IAIa,KAAAG,eAAe,GAAG,IAAIL,iDAAe,CAA4B,EAAE,CAAC;;EAChF,QAAAO,CAAA;qBAFYG,+BAA+B;EAAA;EAAA,QAAAC,EAAA;WAA/BD,+BAA+B;IAAAE,OAAA,EAA/BF,+BAA+B,CAAAG,IAAA;IAAAC,UAAA,EAF5B;EAAM;;;;;;;;;;;;;;;;;;;AC1BhB,MAAOC,kBAAkB;EAC3Bb,YAAoBc,UAA6B;IAA7B,KAAAA,UAAU,GAAVA,UAAU;EAAsB;EAEpDC,SAASA,CAACC,KAAiB;IACvB,OAAO,IAAI,CAACF,UAAU,CAACG,qBAAqB,CAACD,KAAK,CAAC;EACvD;EAAC,QAAAX,CAAA;qBALQQ,kBAAkB,EAAAP,+DAAA,CAAAa,4EAAA;EAAA;EAAA,QAAAV,EAAA;;UAAlBI,kBAAkB;IAAAQ,IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNqB;AAGvB;AACE;AACgE;AACjC;AAE4D;AAE7E;;;;;;;;;;;;;;;;;;;ICX7Cf,4DAAA,gBAOC;IADCA,wDAAA,mBAAAgC,uEAAA;MAAAhC,2DAAA,CAAAkC,GAAA;MAAA,MAAAC,MAAA,GAAAnC,2DAAA;MAAA,OAASA,yDAAA,CAAAmC,MAAA,CAAAG,uBAAA,EAAyB;IAAA,EAAC;;IAEnCtC,uDAAA,WAAiC;IACjCA,oDAAA,GACF;;IAAAA,0DAAA,EAAS;;;IALPA,wDAAA,eAAAA,yDAAA,sCAAwD;IAIxDA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,4CACF;;;;;IAKIA,4DAAA,oBAA+E;IAC7EA,oDAAA,GACF;IAAAA,0DAAA,EAAa;;;;IAFiDA,wDAAA,UAAA8C,MAAA,CAAAC,EAAA,CAAgB;IAC5E/C,uDAAA,GACF;IADEA,gEAAA,MAAA8C,MAAA,CAAAE,IAAA,MACF;;;;;IALJhD,4DAAA,wBAAsF;IACzEA,oDAAA,GAAsC;;IAAAA,0DAAA,EAAY;IAC7DA,4DAAA,oBAA0C;IACxCA,wDAAA,IAAAkD,mEAAA,wBAEa;;IACflD,0DAAA,EAAa;;;;IALFA,uDAAA,GAAsC;IAAtCA,+DAAA,CAAAA,yDAAA,6BAAsC;IACrCA,uDAAA,GAA6B;IAA7BA,wDAAA,gBAAAoD,MAAA,CAAAC,aAAA,CAA6B;IACXrD,uDAAA,GAAgC;IAAhCA,wDAAA,YAAAA,yDAAA,OAAAoD,MAAA,CAAAE,qBAAA,EAAgC;;;;;IAMhEtD,uDAAA,gCAWwB;;;;IAPtBA,wDAAA,eAAAuD,MAAA,CAAAC,SAAA,CAAAC,UAAA,CAAmC,UAAAF,MAAA,CAAAC,SAAA,CAAAE,KAAA,qCAAAH,MAAA,CAAAI,kBAAA,qBAAAJ,MAAA,CAAAK,kBAAA;;;;;IASrC5D,gEAAA,GAAuF;;;ADdjF,MAAO8D,4BAA4B;EAqBrCpE,YACYqE,cAAqC,EACrCC,OAAuB,EACvBC,wBAAyD,EACzDC,MAAc,EACdC,UAA6B,EAC7BC,aAA4B,EAC5BC,SAA2B;IAN3B,KAAAN,cAAc,GAAdA,cAAc;IACd,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,wBAAwB,GAAxBA,wBAAwB;IACxB,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,SAAS,GAATA,SAAS;IAzBZ,KAAAC,gBAAgB,GAAG,IAAI,CAACH,UAAU,CAACG,gBAAgB;IACnD,KAAAhB,qBAAqB,GAAG,IAAI,CAACa,UAAU,CAACb,qBAAqB;IAC7D,KAAAiB,iBAAiB,GAAG,IAAI,CAACJ,UAAU,CAACI,iBAAiB;IACrD,KAAAlB,aAAa,GAAG,IAAIrC,8DAAkB,CAAC,IAAI,CAACuD,iBAAiB,CAACC,QAAQ,EAAE,CAAC;IACzE,KAAAC,aAAa,GAAG,IAAI,CAACN,UAAU,CAACM,aAAa;IAC7C,KAAAC,KAAK,GAAG,IAAI,CAACP,UAAU,CAACO,KAAK;IAC7B,KAAA7E,eAAe,GAAG,IAAI,CAACoE,wBAAwB,CAACpE,eAAe;IAGxE,KAAA2D,SAAS,GAA0C,IAAI;IACvD,KAAAmB,4BAA4B,GAAG,KAAK;IAG5B,KAAAC,cAAc,GAAG,KAAK;IAEtB,KAAAC,iBAAiB,GAAG,KAAK;IACzB,KAAAC,SAAS,GAAG,IAAI5D,yCAAO,EAAQ;EAUpC;EAEH6D,QAAQA,CAAA;IACJ,IAAI,CAACC,4BAA4B,EAAE;IACnC,IAAI,CAACT,iBAAiB,CAACU,mBAAmB,CAAC,IAAI,CAAC5B,aAAa,CAAC;IAC9D,IAAI,CAAC6B,iBAAiB,EAAE;IACxB,IAAI,CAACT,aAAa,CACbU,gBAAgB,EAAE,CAClBC,IAAI,CAAC3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,CAAC,CAC/BO,SAAS,CAAEC,MAAM,IAAI;MAClB,IAAI,CAAC3B,kBAAkB,GAAG4B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,MAAM,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC,CAAC;IACN,IAAI,CAACI,qBAAqB,EAAE;EAChC;EAEAC,WAAWA,CAAA;IACP,IAAI,CAACb,SAAS,CAAChF,IAAI,EAAE;IACrB,IAAI,CAACgF,SAAS,CAACc,QAAQ,EAAE;EAC7B;EAEMtD,uBAAuBA,CAAA;IAAA,IAAAuD,KAAA;IAAA,OAAAC,wLAAA;MACzB,MAAMC,SAAS,SAASF,KAAI,CAAC7B,OAAO,CAAC1B,uBAAuB,CAAC;QACzD0D,cAAc,EAAE;UACZhD,IAAI,QAAQ6C,KAAI,CAACI,yBAAyB,EAAE;UAC5CC,YAAY,EAAEL,KAAI,CAAC1B,UAAU,CAAC+B,YAAY,CAAC1B,QAAQ;SACtD;QACDE,KAAK,EAAEmB,KAAI,CAACnB,KAAK,CAAChE,KAAK,IAAI;OAC9B,CAAC;MACFqF,SAAS,CAACI,WAAW,EAAE,CAACd,SAAS,CAAEe,mBAAmB,IAAI;QACtD,IAAIA,mBAAmB,EAAE;UACrBP,KAAI,CAACQ,gBAAgB,CAACD,mBAAmB,CAAC;;MAElD,CAAC,CAAC;IAAC;EACP;EAEQC,gBAAgBA,CAACC,WAAwB;IAC7C,IAAI,CAACnC,UAAU,CAACG,gBAAgB,CAACiC,YAAY,CAACD,WAAW,CAAC7C,UAAU,CAAC;IACrE,IAAI,CAACU,UAAU,CAACI,iBAAiB,CAACgC,YAAY,CAACD,WAAW,CAACE,WAAW,CAAC;IACvE,IAAI,CAACrC,UAAU,CAAC+B,YAAY,CAACK,YAAY,CAACD,WAAW,CAACJ,YAAY,CAAC;IACnE,IAAI,CAAC/B,UAAU,CAACM,aAAa,CAAC8B,YAAY,CAACD,WAAW,CAACG,OAAO,CAAC;EACnE;EAEcR,yBAAyBA,CAAA;IAAA,IAAAS,MAAA;IAAA,OAAAZ,wLAAA;MACnC,IAAIa,UAAU,GAAa,EAAE;MAC7B,IAAID,MAAI,CAACpC,gBAAgB,CAACsC,YAAY,EAAE,EAAE;QACtC,MAAMC,IAAI,GAAGH,MAAI,CAACvC,UAAU,CAAC2C,qBAAqB,CAACpG,KAAK,CAACqG,IAAI,CACzD,CAAC;UAAEhE;QAAE,CAAE,KAAKA,EAAE,KAAK2D,MAAI,CAACpC,gBAAgB,CAACsC,YAAY,EAAE,CAC1D;QACD,IAAIC,IAAI,EAAE;UACNF,UAAU,CAACK,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC;;;MAGnC,IAAIP,MAAI,CAACvC,UAAU,CAAC+B,YAAY,CAAC1B,QAAQ,EAAE,EAAE;QACzCmC,UAAU,CAACK,IAAI,CAAC,IAAIN,MAAI,CAACvC,UAAU,CAAC+B,YAAY,CAAC1B,QAAQ,EAAE,GAAG,CAAC;;MAEnE,MAAMiC,OAAO,SAASC,MAAI,CAACtC,aAAa,CAAC8C,UAAU,EAAE,CAACC,SAAS,EAAE;MACjE,MAAMC,YAAY,GAAGC,MAAM,CAAC/B,MAAM,CAACmB,OAAO,CAAC,CACtCa,IAAI,EAAE,CACN/F,GAAG,CAAC,CAAC;QAAEgG;MAAK,CAAE,KAAKA,KAAK,CAAC;MAC9BZ,UAAU,GAAG,CAAC,GAAGA,UAAU,EAAE,GAAGS,YAAY,CAAC;MAC7C,IAAIT,UAAU,CAACa,MAAM,GAAG,CAAC,EAAE;QACvB,OAAOb,UAAU,CAACc,IAAI,CAAC,KAAK,CAAC;OAChC,MAAM;QACH,OAAOf,MAAI,CAACrC,SAAS,CAACqD,GAAG,CAAC,8BAA8B,CAAC,CAACP,SAAS,EAAE;;IACxE;EACL;EAEA;;;;;;;;;;EAUQnC,4BAA4BA,CAAA;IAChC/D,wCAAU,CAAC,IAAI,CAACqD,gBAAgB,CAACsD,YAAY,EAAE,EAAE,IAAI,CAACrD,iBAAiB,CAACqD,YAAY,EAAE,CAAC,CAClFxC,IAAI,CAAC3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,CAAC,CAC/BO,SAAS,CAAC,MAAK;MACZ,IAAI,CAACZ,aAAa,CAACoD,gBAAgB,CAAC,IAAI,CAAC;IAC7C,CAAC,CAAC;EACV;EAEQ3C,iBAAiBA,CAAA;IACrBjE,2CAAa,CAAC,CACV,IAAI,CAACqD,gBAAgB,CAACsD,YAAY,EAAE,CAACxC,IAAI,CAAC9D,sDAAK,CAACO,wDAAO,CAAC,CAAC,EACzD,IAAI,CAAC0C,iBAAiB,CAACqD,YAAY,EAAE,CAACxC,IAAI,CAAC9D,sDAAK,CAACO,wDAAO,CAAC,CAAC,CAC7D,CAAC,CACGuD,IAAI,CACD1D,oDAAG,CAAC,CAAC,CAAC+B,UAAU,EAAEC,KAAK,CAAC,KAAM,IAAI,CAACF,SAAS,GAAG;MAAEC,UAAU;MAAEC;IAAK,CAAG,CAAC,EACtEtC,sDAAK,CAAC,CAAC,CAAC,EACRK,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,CAC5B,CACAO,SAAS,CAAC,MAAM,IAAI,CAAC0C,aAAa,EAAE,CAAC;IAC1C,IAAI,CAAC5D,UAAU,CAAC+B,YAAY,CACvB0B,YAAY,EAAE,CACdxC,IAAI,CAAC3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,CAAC,CAC/BO,SAAS,CAAEa,YAAY,IAAI;MACxB,IAAIA,YAAY,EAAE;QACd,IAAI,CAACtC,kBAAkB,GAAG;UACtB,CAACjC,mEAAa,CAACqG,uBAAuB,GAAG,CAAC9B,YAAY;SACzD;OACJ,MAAM;QACH,IAAI,CAACtC,kBAAkB,GAAG,IAAI;;IAEtC,CAAC,CAAC;EACV;EAEQ8B,qBAAqBA,CAAA;IACzB,IAAI,CAAC3B,cAAc,CACdkE,gBAAgB,EAAE,CAClB7C,IAAI,CACD3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,EACzBvD,oDAAG,CAAE2G,SAAS,IAAKA,SAAS,IAAI,CAACA,SAAS,CAACC,OAAO,CAAC,CACtD,CACA9C,SAAS,CAAE3E,KAAK,IAAM,IAAI,CAACiE,4BAA4B,GAAGjE,KAAM,CAAC;EAC1E;EAEQqH,aAAaA,CAAA;IACjB,IAAI,CAACK,SAAS,CAACC,iBAAiB,CAAC/C,MAAM,CAClCF,IAAI,CAAC3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,CAAC,CAC/BO,SAAS,CAAEC,MAAM,IAAK,IAAI,CAACgD,iBAAiB,CAAChD,MAAM,CAAC,CAAC;IAC1D,IAAI,CAAC8C,SAAS,CACTG,kBAAkB,EAAE,CACpBC,OAAO,CAACpD,IAAI,CAAC3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,CAAC,CACvCO,SAAS,CAAEoD,UAAU,IAAK,IAAI,CAACtE,UAAU,CAACuE,iBAAiB,CAAC5I,IAAI,CAAC2I,UAAU,CAAC,CAAC;IAClFxH,wCAAU,CACN,IAAI,CAACsD,iBAAiB,CAACqD,YAAY,EAAE,CAACxC,IAAI,CACtC/D,uDAAM,CAACQ,wDAAO,CAAC,EACfL,qDAAI,CAAC,CAAC,CAAC,CAEV,EACD,IAAI,CAAC8C,gBAAgB,CAACsD,YAAY,EAAE,CAACxC,IAAI,CACrC/D,uDAAM,CAACQ,wDAAO,CAAC,EACfL,qDAAI,CAAC,CAAC,CAAC,CAEV,EACD,IAAI,CAACiD,aAAa,CAACmD,YAAY,EAAE,CAACxC,IAAI,CAClC/D,uDAAM,CAACQ,wDAAO,CAAC,EACfL,qDAAI,CAAC,CAAC,CAAC,EACPH,uDAAM,CAAC,MAAM,CAAC,IAAI,CAACwD,iBAAiB,CAAC,CAExC,CACJ,CACIO,IAAI,CACD3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,EACzB3D,6DAAY,CAAC,CAAC,CAAC,EACfE,uDAAM,CAAC,MAAMQ,4DAAO,CAAC,IAAI,CAAC0C,iBAAiB,CAACC,QAAQ,EAAE,CAAC,CAAC,CAC3D,CACAa,SAAS,CAAC,MAAM,IAAI,CAACsD,QAAQ,EAAE,CAAC;IACrC,IAAI,CAACP,SAAS,CAACC,iBAAiB,CAC3BO,eAAe,EAAE,CACjBxD,IAAI,CAAC3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,CAAC,CAC/BO,SAAS,CAAEwD,YAAY,IAAK,IAAI,CAAC1E,UAAU,CAAC2E,aAAa,CAAChJ,IAAI,CAAC+I,YAAY,CAAC,CAAC;EACtF;EAEA;EACQP,iBAAiBA,CAAChD,MAAc;IACpCA,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,MAAM,CAAC,CAAC;IAC3C,IAAI,CAACT,iBAAiB,GAAG,IAAI;IAC7B,IAAI,IAAI,CAACD,cAAc,EAAE;MACrB,MAAMmE,UAAU,GAAGC,aAAa,CAAC1D,MAAM,EAAE,IAAI,CAAC2D,aAAa,CAAC;MAC5D;MACA,IAAI,CAACxE,aAAa,CAAC8B,YAAY,CAACwC,UAAU,CAAC;KAC9C,MAAM;MACH,IAAI,CAACnE,cAAc,GAAG,IAAI;MAC1B,MAAMmE,UAAU,GAAGG,WAAW,CAAC,IAAI,CAACzE,aAAa,CAACmC,YAAY,EAAE,IAAI,EAAE,EAAEtB,MAAM,CAAC;MAC/E,MAAM2D,aAAa,GAAGE,gBAAgB,CAAC7D,MAAM,EAAEyD,UAAU,CAAC;MAC1D;MACA,IAAI,CAACE,aAAa,GAAGA,aAAa;MAClC,IAAI,CAACxE,aAAa,CAAC2E,cAAc,CAACH,aAAa,CAAC;MAChD,IAAI,CAACxE,aAAa,CAAC8B,YAAY,CAACwC,UAAU,CAAC;MAC3C,IAAI,CAACtE,aAAa,CAAC4E,kBAAkB,EAAE;;IAE3C,IAAI,CAACnF,MAAM,CAACoF,iBAAiB,CAAC,MAAMC,UAAU,CAAC,MAAO,IAAI,CAAC1E,iBAAiB,GAAG,KAAM,CAAC,CAAC;EAC3F;EAEQ8D,QAAQA,CAAA;IACZ,IAAI,CAACnF,SAAS,GAAG;MACbC,UAAU,EAAE,IAAI,CAACa,gBAAgB,CAACE,QAAQ,EAAE;MAC5Cd,KAAK,EAAE,IAAI,CAACa,iBAAiB,CAACC,QAAQ;KACzC;IACD;IACA,IAAI,CAACI,cAAc,GAAG,KAAK;IAC3B;IACA2E,UAAU,CAAC,MAAK;MACZ;MACA,KAAK,IAAI,CAACnB,SAAS,CAACoB,MAAM,EAAE;IAChC,CAAC,CAAC;EACN;EAAC,QAAAzJ,CAAA;qBA5NQ+D,4BAA4B,EAAA9D,+DAAA,CAAAa,uEAAA,GAAAb,+DAAA,CAAA0J,6EAAA,GAAA1J,+DAAA,CAAA4J,wFAAA,GAAA5J,+DAAA,CAAAA,iDAAA,GAAAA,+DAAA,CAAA8J,mEAAA,GAAA9J,+DAAA,CAAAa,+DAAA,GAAAb,+DAAA,CAAAiK,kEAAA;EAAA;EAAA,QAAA9J,EAAA;UAA5B2D,4BAA4B;IAAAqG,SAAA;IAAAC,SAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;kEAC1B1I,+HAAyB;;;;;;;;;;;;QCrBxC5B,wDAAA,IAAAwK,8CAAA,oBAUS;QAETxK,wDAAA,IAAAyK,sDAAA,4BAOiB;;QAEjBzK,wDAAA,IAAA0K,6DAAA,mCAWwB;QAExB1K,wDAAA,IAAA2K,oDAAA,0BAAuF;;;;QAjCpF3K,wDAAA,SAAAuK,GAAA,CAAA5F,4BAAA,CAAkC;QAWF3E,uDAAA,GAAiD;QAAjDA,wDAAA,WAAA4K,OAAA,GAAA5K,yDAAA,OAAAuK,GAAA,CAAAjH,qBAAA,oBAAAsH,OAAA,CAAApD,MAAA,MAAiD;QAUjFxH,uDAAA,GAAe;QAAfA,wDAAA,SAAAuK,GAAA,CAAA/G,SAAA,CAAe;QAYHxD,uDAAA,GAAuD;QAAvDA,wDAAA,qBAAAuK,GAAA,CAAA1K,eAAA,CAAAa,KAAA,CAAAmK,eAAA,CAAuD;;;;;;;ADiNtE,SAAS7B,aAAaA,CAAC8B,YAAoB,EAAE7B,aAAqB;EAC9D,MAAMF,UAAU,GAAG,EAAY;EAC/B,KAAK,MAAM,CAACgC,GAAG,EAAErK,KAAK,CAAC,IAAI2G,MAAM,CAAC2D,OAAO,CAACF,YAAY,CAAC,EAAE;IACrD,IAAIpK,KAAK,CAAC8G,MAAM,GAAG,CAAC,IAAIjC,IAAI,CAACE,SAAS,CAACwD,aAAa,CAAC8B,GAAG,CAAC,CAAC,KAAKxF,IAAI,CAACE,SAAS,CAAC/E,KAAK,CAAC,EAAE;MAClFqI,UAAU,CAACgC,GAAG,CAAC,GAAGrK,KAAK;;;EAG/B,IAAI2G,MAAM,CAAC4D,IAAI,CAAClC,UAAU,CAAC,CAACvB,MAAM,GAAG,CAAC,EAAE;IACpC,OAAOuB,UAAU;GACpB,MAAM;IACH,OAAO,IAAI;;AAEnB;AAEA,SAASI,gBAAgBA,CAAC2B,YAAoB,EAAE/B,UAAkB;EAC9D,MAAME,aAAa,GAAG,EAAY;EAClC,KAAK,MAAM,CAAC8B,GAAG,EAAErK,KAAK,CAAC,IAAI2G,MAAM,CAAC2D,OAAO,CAACF,YAAY,CAAC,EAAE;IACrD,IAAIpK,KAAK,CAAC8G,MAAM,GAAG,CAAC,IAAI,CAACuB,UAAU,GAAGgC,GAAG,CAAC,EAAE;MACxC9B,aAAa,CAAC8B,GAAG,CAAC,GAAGrK,KAAK;;;EAGlC,OAAOuI,aAAa;AACxB;AAEA,SAASC,WAAWA,CAAC5D,MAAc,EAAE4F,eAAuB;EACxD,MAAMC,cAAc,GAAG,EAAY;EACnC,KAAK,MAAM,CAACJ,GAAG,EAAErK,KAAK,CAAC,IAAI2G,MAAM,CAAC2D,OAAO,CAAC1F,MAAM,CAAC,EAAE;IAC/C,IAAIyF,GAAG,IAAIG,eAAe,EAAE;MACxBC,cAAc,CAACJ,GAAG,CAAC,GAAGrK,KAAK;;;EAGnC,IAAI2G,MAAM,CAAC4D,IAAI,CAACE,cAAc,CAAC,CAAC3D,MAAM,GAAG,CAAC,EAAE;IACxC,OAAO2D,cAAc;GACxB,MAAM;IACH,OAAO,IAAI;;AAEnB;AAEA,SAASC,gBAAgBA,CAACC,CAAyB,EAAEC,CAAyB;EAC1ED,CAAC,GAAG;IAAE,GAAGA;EAAC,CAAE;EACZ,KAAK,MAAMN,GAAG,IAAI1D,MAAM,CAAC4D,IAAI,CAACK,CAAC,CAAC,EAAE;IAC9B,OAAOD,CAAC,CAACN,GAAG,CAAC;;EAEjB,OAAOM,CAAC;AACZ;;;;;;;;;;;;;;;;;;;;;;;;;AE7RkE;AACrC;AACE;AAC8C;AAEhC;;;;AAE7C,MAAMK,YAAY;EAadhM,YAAYiM,YAAoB;IAZhC;;;;;;;IAOA,KAAAC,KAAK,GAAyB,IAAI;IAElC,KAAAC,cAAc,GAA4B,IAAI;IAC9C,KAAAC,gBAAgB,GAAiD,EAAE;IAG/D,IAAI,CAACH,YAAY,GAAGA,YAAY;EACpC;;AAME,MAAOI,wBAAwB;EAMjCrM,YAAoBsM,OAAe,EAAUC,iBAAmC;IAA5D,KAAAD,OAAO,GAAPA,OAAO;IAAkB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAL7C,KAAAC,QAAQ,GAAmB,EAAE;IAC7B,KAAAC,qBAAqB,GAAG,IAAIjL,yCAAO,EAAgB;IAE5D,KAAAkL,oBAAoB,GAAG,CAAC;IAG5B,IAAI,CAACC,qBAAqB,EAAE;IAC5B,IAAI,CAACC,6BAA6B,EAAE;EACxC;EAEAC,kBAAkBA,CAACxB,GAAW,EAAEyB,UAAgC;IAC5DA,UAAU,CACLC,OAAO,EAAE,CACTrH,IAAI,CACD/D,sDAAM,CAAC,MAAM,CAACmL,UAAU,CAACE,SAAS,CAAC,EACnCvL,4DAAY,CAAC,CAAC,CAAC,CAClB,CACAkE,SAAS,CAAC,MAAM,IAAI,CAACsH,SAAS,CAAC5B,GAAG,EAAEyB,UAAU,CAACI,SAAS,EAAE,CAAC,CAAC;IACjEJ,UAAU,CAACK,uBAAuB,CAAC,MAAM,IAAI,CAACC,aAAa,CAAC/B,GAAG,CAAC,CAAC;EACrE;EAEQ+B,aAAaA,CAAC/B,GAAW;IAC7B,MAAMgC,KAAK,GAAG,IAAI,CAACC,gBAAgB,EAAE;IACrC,IAAI,CAACb,qBAAqB,CAACrM,IAAI,CAACiN,KAAK,CAAC;IACtC,OAAOA,KAAK,EAAEjB,gBAAgB,CAACf,GAAG,CAAC,IAAI,IAAI;EAC/C;EAEQuB,6BAA6BA,CAAA;IACjC,IAAI,CAACH,qBAAqB,CACrB/G,IAAI,CACD/D,sDAAM,CAACQ,uDAAO,CAAC,EACfV,4DAAY,CAAC,CAAC,CAAC,EACfI,mDAAG,CAAC,CAAC;MAAEsK;IAAc,CAAE,KAAKA,cAAc,CAAC,EAC3CxK,sDAAM,CAACQ,uDAAO,CAAC;IACf;IACA;IACA4J,yDAAS,CAAEI,cAAc,IAAI;MACzB,IACIoB,QAAQ,CAACC,eAAe,CAACC,YAAY,GACrCC,MAAM,CAACC,WAAW,GAAGxB,cAAc,CAAC,CAAC,CAAC,EACxC;QACE,OAAO5K,oCAAO,CAAC4K,cAAc,CAAC,CAACzG,IAAI,CAAChE,qDAAK,CAAC,CAAC,CAAC,CAAC;OAChD,MAAM;QACH,OAAOH,oCAAO,CAAC4K,cAAc,CAAC;;IAEtC,CAAC,CAAC,CACL,CACAxG,SAAS,CAAEwG,cAAc,IAAI;MAC1B,IAAI,CAACI,iBAAiB,CAACsB,gBAAgB,CAAC1B,cAAc,CAAC;IAC3D,CAAC,CAAC;EACV;EAEQc,SAASA,CAAC5B,GAAW,EAAEa,KAAgC;IAC3D,MAAMmB,KAAK,GAAG,IAAI,CAACS,iBAAiB,EAAE;IACtCT,KAAK,CAACnB,KAAK,GAAG,QAAQ;IACtBmB,KAAK,CAACjB,gBAAgB,CAACf,GAAG,CAAC,GAAGa,KAAK;EACvC;EAEQoB,gBAAgBA,CAAA;IACpB,OACI,IAAI,CAACd,QAAQ,CAACnF,IAAI,CACd,CAAC;MAAE6E,KAAK;MAAED;IAAY,CAAE,KACpBC,KAAK,KAAK,SAAS,IAAID,YAAY,KAAK,IAAI,CAACS,oBAAoB,CACxE,IAAI,IAAI;EAEjB;EAEQoB,iBAAiBA,CAAA;IACrB,IAAIT,KAAK,GAAG,IAAI,CAACb,QAAQ,CAACnF,IAAI,CAC1B,CAAC;MAAE4E;IAAY,CAAE,KAAKA,YAAY,KAAK,IAAI,CAACS,oBAAoB,CACnE;IACD,IAAIW,KAAK,IAAI,IAAI,EAAE;MACfA,KAAK,GAAG,IAAIrB,YAAY,CAAC,IAAI,CAACU,oBAAoB,CAAC;MACnD,IAAI,CAACF,QAAQ,CAAClF,IAAI,CAAC+F,KAAK,CAAC;;IAE7B,OAAOA,KAAK;EAChB;EAEQV,qBAAqBA,CAAA;IACzB,IAAI,CAACL,OAAO,CAACyB,MAAM,CACdrI,IAAI,CAAC/D,sDAAM,CAAEqM,KAAK,IAA+BA,KAAK,YAAYnC,4DAAe,CAAC,CAAC,CACnFlG,SAAS,CAAEqI,KAAK,IAAI;MACjB,IAAI,CAACtB,oBAAoB,GAAGsB,KAAK,CAAC3K,EAAE;MACpC,IAAI2K,KAAK,CAACC,iBAAiB,KAAK,UAAU,EAAE;QACxC;QACA;QACA;QACA;QACA;QACA;QACA,MAAMC,UAAU,GAAGF,KAAK,CAACG,aAAa,EAAElC,YAAY;QACpD,MAAMoB,KAAK,GAAG,IAAI,CAACb,QAAQ,CAACnF,IAAI,CAC5B,CAAC;UAAE4E;QAAY,CAAE,KAAKA,YAAY,KAAKiC,UAAU,CACpD;QACD,IAAIb,KAAK,EAAE;UACPA,KAAK,CAACnB,KAAK,GAAG,SAAS;UACvBmB,KAAK,CAACpB,YAAY,GAAG+B,KAAK,CAAC3K,EAAE;;;IAGzC,CAAC,CAAC;IACN,IAAI,CAACiJ,OAAO,CAACyB,MAAM,CACdrI,IAAI,CAAC/D,sDAAM,CAAEqM,KAAK,IAAsBA,KAAK,YAAYlC,mDAAM,CAAC,CAAC,CACjEnG,SAAS,CAAEqI,KAAK,IAAI;MACjB,IAAIA,KAAK,CAACI,QAAQ,EAAE;QAChB,IAAI,CAACN,iBAAiB,EAAE,CAAC3B,cAAc,GAAG6B,KAAK,CAACI,QAAQ;;IAEhE,CAAC,CAAC;EACV;EAAC,QAAA/N,CAAA;qBA5GQgM,wBAAwB,EAAA/L,sDAAA,CAAAa,mDAAA,GAAAb,sDAAA,CAAA0J,8DAAA;EAAA;EAAA,QAAAvJ,EAAA;WAAxB4L,wBAAwB;IAAA3L,OAAA,EAAxB2L,wBAAwB,CAAA1L,IAAA;IAAAC,UAAA,EAFrB;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3B6B;AAC6B;AAEb;;;;;;;;;;;;;;;;ICInEN,4DAAA,6BAMC;IACCA,uDAAA,sBAGgB;IAClBA,0DAAA,EAAsB;;;;IARpBA,wDAAA,eAAAoO,kBAAA,CAAAC,UAAA,CAAyC;IAKvCrO,uDAAA,GAAyD;IAAzDA,wDAAA,YAAAA,6DAAA,IAAAuO,GAAA,EAAAH,kBAAA,CAAAI,aAAA,CAAAC,UAAA,KAAyD;;;;;IAsBrDzO,qEAAA,GAA2E;IACzEA,oDAAA,GACF;IAAAA,mEAAA,EAAe;;;;IADbA,uDAAA,GACF;IADEA,gEAAA,OAAA4O,OAAA,CAAApC,UAAA,CAAAqC,QAAA,SACF;;;;;;;;IAEF7O,4DAAA,YAKC;IACCA,oDAAA,GACA;;IAAAA,uDAAA,YAAqC;IACvCA,0DAAA,EAAI;;;;;IALFA,wDAAA,eAAAA,6DAAA,IAAA+O,GAAA,EAAqB,gBAAAC,OAAA,CAAAC,sBAAA,CAAAL,OAAA,CAAA7L,EAAA;IAGrB/C,uDAAA,GACA;IADAA,gEAAA,MAAAA,yDAAA,yBACA;;;;;IAdJA,4DAAA,aAA6B;IAEzBA,oDAAA,GACA;;IAAAA,wDAAA,IAAAkP,6FAAA,2BAEe;IACjBlP,0DAAA,EAAK;IACLA,wDAAA,IAAAmP,kFAAA,gBAQI;IACNnP,0DAAA,EAAM;;;;;;IAdFA,uDAAA,GACA;IADAA,gEAAA,MAAAA,yDAAA,OAAA4O,OAAA,CAAA3H,KAAA,OACA;IAAejH,uDAAA,GAAkC;IAAlCA,wDAAA,UAAA4O,OAAA,CAAApC,UAAA,CAAAE,SAAA,CAAkC,aAAA0C,GAAA;IAKhDpP,uDAAA,GAAmE;IAAnEA,wDAAA,SAAA4O,OAAA,CAAApC,UAAA,CAAAqC,QAAA,KAAAD,OAAA,CAAApC,UAAA,CAAA6C,OAAA,GAAA7H,MAAA,CAAmE;;;;;;;;;;;;;;;IAtB5ExH,4DAAA,iCAYC;;IACCA,wDAAA,IAAAsP,8EAAA,gCAAAtP,oEAAA,CAkBc;IAChBA,0DAAA,EAA0B;;;;;IA9BxBA,yDAAA,iBAAA4O,OAAA,CAAApC,UAAA,CAAAiD,OAAA,GAAgD;IAEhDzP,wDAAA,eAAA4O,OAAA,CAAApC,UAAA,CAA8B,UAAApJ,MAAA,CAAA+K,KAAA,CAAAuB,MAAA,aAAA1P,yDAAA,QAAA4O,OAAA,CAAAe,OAAA,iDAAAvM,MAAA,CAAA8K,sBAAA,CAAA0B,IAAA,gBAAA5P,6DAAA,KAAA6P,GAAA,oCAAA7P,6DAAA,KAAA8P,GAAA,EAAA1M,MAAA,CAAA2M,mBAAA,CAAArP,KAAA,kBAAA0C,MAAA,CAAA2M,mBAAA,CAAArP,KAAA,CAAA8N,aAAA;;;;;IA8BhCxO,uDAAA,iBAAiE;;;;;IAEjEA,4DAAA,cAAwD;IACtDA,uDAAA,YAAuB;IACvBA,oDAAA,GACF;;IAAAA,0DAAA,EAAM;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,uCACF;;;;;IAGEA,uDAAA,sBAAwE;;;ADnDpE,MAAOgQ,6BAA6B;EAYtCtQ,YACYuQ,WAA8B,EAC9BC,QAAqC;IADrC,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,QAAQ,GAARA,QAAQ;IAbX,KAAA/B,KAAK,GAAGA,qDAAK;IACb,KAAAD,sBAAsB,GAAGA,sEAAsB;IAE/C,KAAAiC,QAAQ,GAAG,IAAI,CAACD,QAAQ,CAACC,QAAQ;IACjC,KAAAC,eAAe,GAAG,IAAI,CAACF,QAAQ,CAACE,eAAe;IAC/C,KAAAL,mBAAmB,GAAG,IAAI,CAACE,WAAW,CAACF,mBAAmB;IACnE,KAAAM,QAAQ,GAAG,KAAK;IAEC,KAAAC,aAAa,GAAG,IAAI,CAACL,WAAW,CAAC/J,YAAY;IAC7C,KAAAqK,iBAAiB,GAAG,IAAI,CAACN,WAAW,CAAC3L,gBAAgB;EAKnE;EAEHS,QAAQA,CAAA;IACJwE,UAAU,CAAC,MAAK;MACZ,IAAI,CAAC0G,WAAW,CAACO,OAAO,GAAG,IAAI,CAACN,QAAQ;MACxC,IAAI,CAACD,WAAW,CAACQ,sBAAsB,CAAC3Q,IAAI,CAAC,IAAI,CAAC;IACtD,CAAC,CAAC;IACF,IAAI,CAAC4Q,iBAAiB,EAAE;EAC5B;EAEAzB,sBAAsBA,CAAC0B,MAAc;IACjC,OAAO;MACH,GAAG,IAAI,CAACL,aAAa,CAACM,kBAAkB,EAAE;MAC1C,GAAG,IAAI,CAACL,iBAAiB,CAACK,kBAAkB,CAACD,MAAM;KACtD;EACL;EAEQD,iBAAiBA,CAAA;IACrB,IAAI,CAACN,eAAe,CACfhL,IAAI,CACDjE,4DAAY,CAAC,CAAC,CAAC,EACfI,mDAAG,CAAEsP,QAAQ,IAAI;MACb,IAAIA,QAAQ,GAAG,GAAG,EAAE;QAChB,OAAO,KAAK;OACf,MAAM;QACH,OAAO,IAAI,CAACV,QAAQ,CAACzP,KAAK,CAACoQ,KAAK,CAAEC,CAAC,IAAKA,CAAC,CAACvE,UAAU,CAACiD,OAAO,EAAE,CAAC;;IAEvE,CAAC,CAAC,CACL,CACApK,SAAS,CAAEgL,QAAQ,IAAM,IAAI,CAACA,QAAQ,GAAGA,QAAS,CAAC;EAC5D;EAAC,QAAAtQ,CAAA;qBA7CQiQ,6BAA6B,EAAAhQ,+DAAA,CAAAa,mEAAA,GAAAb,+DAAA,CAAA0J,yFAAA;EAAA;EAAA,QAAAvJ,EAAA;UAA7B6P,6BAA6B;IAAA7F,SAAA;IAAA6G,QAAA,GAAAhR,gEAAA,CAF3B,CAACiO,yFAA2B,CAAC;IAAAiD,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uCAAAhH,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCF5CtK,wDAAA,IAAAuR,4DAAA,iCAWsB;QAEtBvR,wDAAA,IAAAwR,gEAAA,sCAgC0B;;QAE1BxR,wDAAA,IAAAyR,mDAAA,wBAAiE;;QAEjEzR,wDAAA,IAAA0R,4CAAA,iBAGM;QAEN1R,wDAAA,IAAA2R,oDAAA,gCAAA3R,oEAAA,CAEc;;;QAvDXA,wDAAA,SAAAuK,GAAA,CAAAwF,mBAAA,CAAArP,KAAA,CAAgC;QAahBV,uDAAA,GAAmB;QAAnBA,wDAAA,YAAAA,yDAAA,OAAAuK,GAAA,CAAA4F,QAAA,EAAmB;QAiCzBnQ,uDAAA,GAAqC;QAArCA,wDAAA,SAAAA,yDAAA,OAAAuK,GAAA,CAAA6F,eAAA,QAAqC;QAE5CpQ,uDAAA,GAAc;QAAdA,wDAAA,SAAAuK,GAAA,CAAA8F,QAAA,CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CS;AAC+B;AAC0B;AACZ;AACZ;AAM3B;;;;;;AAiB7B,MAAOpC,2BAA2B;EAMpCvO,YACYsS,SAAmB,EACnBC,OAAsB,EACtBhC,WAA8B,EAC9BiC,kBAA4C,EAC5CC,IAAgB,EAChBC,UAA4B;IAL5B,KAAAJ,SAAS,GAATA,SAAS;IACT,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAhC,WAAW,GAAXA,WAAW;IACX,KAAAiC,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,UAAU,GAAVA,UAAU;IAXb,KAAAjC,QAAQ,GAAG,IAAI3Q,iDAAe,CAAa,IAAI,CAAC;IAChD,KAAA4Q,eAAe,GAAG,IAAI5Q,iDAAe,CAAS,CAAC,CAAC;IAExC,KAAA6S,UAAU,GAAG,IAAInR,yCAAO,EAAQ;IAU7C,IAAI,CAACoR,aAAa,EAAE;IACpB,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAACC,wBAAwB,EAAE;EACnC;EAEA7M,WAAWA,CAAA;IACP,IAAI,CAAC0M,UAAU,CAACvS,IAAI,EAAE;IACtB,IAAI,CAACuS,UAAU,CAACzM,QAAQ,EAAE;EAC9B;EAEA6M,QAAQA,CAACC,KAAa;IAClB,MAAMC,YAAY,GAAG,IAAI,CAACxC,QAAQ,CAACzP,KAAK,CAACqG,IAAI,CAAC,CAAC;MAAE6L;IAAM,CAAE,KAAKA,MAAM,CAAC;IACrED,YAAY,EAAEnG,UAAU,CAACqG,UAAU,CAACH,KAAK,EAAE,QAAQ,CAAC;EACxD;EAEQJ,aAAaA,CAAA;IACjB,IAAI,CAACrC,WAAW,CAACnJ,qBAAqB,CACjC1B,IAAI,CAAC3D,yDAAS,CAAC,IAAI,CAAC4Q,UAAU,CAAC,CAAC,CAChChN,SAAS,CAAEyN,YAAY,IAAI;MACxB,IAAI,CAAC3C,QAAQ,CAACrQ,IAAI,CAACgT,YAAY,CAACvR,GAAG,CAAEkC,UAAU,IAAK,IAAI,CAACsP,YAAY,CAACtP,UAAU,CAAC,CAAC,CAAC;IACvF,CAAC,CAAC;EACV;EAEQ8O,oBAAoBA,CAAA;IACxB,IAAI,CAACpC,QAAQ,CAAC9K,SAAS,CAAE8K,QAAQ,IAAI;MACjC,KAAK,MAAMtJ,IAAI,IAAIsJ,QAAQ,EAAE;QACzB,IAAI,CAAC+B,kBAAkB,CAAC3F,kBAAkB,CAAC1F,IAAI,CAAC9D,EAAE,EAAE8D,IAAI,CAAC2F,UAAU,CAAC;;IAE5E,CAAC,CAAC;EACN;EAEQuG,YAAYA,CAACtP,UAAsB;IACvC,MAAMuP,aAAa,GAAG,IAAIxT,iDAAe,CAAC,IAAI,CAAC;IAC/C,MAAMyT,cAAc,GAAG,IAAIzT,iDAAe,CAAC,IAAI,CAAC;IAChD,MAAMgN,UAAU,GAAG,IAAIuF,0EAAoB,CAAC,IAAI,CAACC,SAAS,CAAC;IAC3D,MAAMxL,WAAW,GAAgC,IAAI,CAAC0M,eAAe,CAACzP,UAAU,CAAC;IACjF,MAAM0P,aAAa,GAA8B3M,WAAW,CAACpB,IAAI,CAC7DqG,yDAAS,CAAEjF,WAAW,IAAK,IAAI,CAAC4M,iBAAiB,CAAC3P,UAAU,EAAE+C,WAAW,CAAC,CAAC,CAC9E;IACD,MAAMmJ,OAAO,GAA2BwD,aAAa,CAAC/N,IAAI,CACtDqG,yDAAS,CAAE0H,aAAa,IAAK,IAAI,CAACE,WAAW,CAACF,aAAa,CAAC,CAAC,CAChE;IACD,MAAMG,IAAI,GAAGH,aAAa,CAAC/N,IAAI,CAC3B7D,mDAAG,CAAE4R,aAAa,IAAK,IAAI,CAACI,eAAe,CAACJ,aAAa,CAAC,CAAC,CAC9D;IACDlS,gDAAkB,CAAC,CAACuF,WAAW,EAAE8M,IAAI,EAAE,IAAI,CAACrD,WAAW,CAAC/J,YAAY,CAAC0B,YAAY,EAAE,CAAC,CAAC,CAChFxC,IAAI,CACD1D,oDAAG,CAAC,MAAMsR,aAAa,CAAClT,IAAI,CAAC,KAAK,CAAC,CAAC,EACpC2B,yDAAS,CAAC,IAAI,CAAC4Q,UAAU,CAAC,CAC7B,CACAhN,SAAS,CAAC,CAAC,CAACmB,WAAW,EAAE8M,IAAI,EAAEpN,YAAY,CAAC,KAAI;MAC7CsG,UAAU,CAACiH,SAAS,CAChB,IAAI,CAACC,gBAAgB,CAACjQ,UAAU,EAAE+C,WAAW,EAAE8M,IAAI,EAAEpN,YAAY,CAAC,CACrE;IACL,CAAC,CAAC;IACNsG,UAAU,CAACmH,gBAAgB,CAACtO,SAAS,CAAEqH,SAAS,IAAKuG,cAAc,CAACnT,IAAI,CAAC,CAAC,CAAC4M,SAAS,CAAC,CAAC;IACtF,OAAO;MACHzF,KAAK,EAAExD,UAAU,CAACwD,KAAK;MACvBlE,EAAE,EAAEU,UAAU,CAACV,EAAE;MACjB6P,MAAM,EAAEnP,UAAU,CAACmQ,UAAU;MAC7BpH,UAAU;MACVmD,OAAO;MACPqD,aAAa;MACbC;KACH;EACL;EAEQC,eAAeA,CAACzP,UAAsB;IAC1C,OAAO,IAAI,CAACwM,WAAW,CAAC4D,wBAAwB,CAACpQ,UAAU,CAAC,CAAC2B,IAAI,CAC7D3D,yDAAS,CAAC,IAAI,CAAC4Q,UAAU,CAAC,EAC1B9Q,mDAAG,CAAE+B,qBAAqB,IAAKA,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAC3D;EACL;EAEQ8P,iBAAiBA,CACrB3P,UAAsB,EACtB+C,WAA4B;IAE5B,OAAO,IAAI,CAAC2L,IAAI,CAAC2B,cAAc,CAAC;MAAErQ,UAAU,EAAEA,UAAU,CAACV,EAAE;MAAEyD,WAAW,EAAEA,WAAW,CAACzD;IAAE,CAAE,CAAC;EAC/F;EAEQsQ,WAAWA,CAACF,aAA4B;IAC5C,OACI,IAAI,CAACf;IACD;IAAA,CACC1K,GAAG,CAAC,OAAO,CAAC,CACZtC,IAAI,CAAC7D,mDAAG,CAAC,MAAMsQ,mEAAS,CAACkC,UAAU,CAAC,IAAI,CAAC3B,UAAU,EAAEe,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;EAE5F;EAEQI,eAAeA,CAACJ,aAA4B;IAChD,OAAOtB,mEAAS,CAACmC,WAAW,CAACb,aAAa,EAAE,QAAQ,CAAC,EAAEc,OAAO;EAClE;EAEQP,gBAAgBA,CACpBjQ,UAAsB,EACtB+C,WAA4B,EAC5B8M,IAAoB,EACpBpN,YAAoB;IAEpB,MAAMgO,QAAQ,GAAGhO,YAAY,GAAG,CAAC;MAAEiO,QAAQ,EAAE,cAAc;MAAE7O,MAAM,EAAE,CAACY,YAAY;IAAC,CAAE,CAAC,GAAG,EAAE;IAC3F,OAAQkO,OAA0B,IAAI;MAClC,OAAO,IAAI,CAACnC,OAAO,CACdoC,MAAM,CAAC;QACJC,IAAI,EAAE;UACFJ;UACA;SACH;;QACDK,QAAQ,EAAEH,OAAO,CAACI,KAAK,CAACC,QAAQ,GAAGL,OAAO,CAACI,KAAK,CAACE,UAAU;QAC3DC,SAAS,EAAEP,OAAO,CAACI,KAAK,CAACE,UAAU;QACnCE,aAAa,EAAEtB,IAAI,GAAG,CAACA,IAAI,CAACsB,aAAa,CAAC,GAAG,IAAI;QACjDC,cAAc,EAAEvB,IAAI,GAAG,CAACA,IAAI,CAACwB,MAAM,CAAC,GAAG,IAAI;QAC3CC,WAAW,EAAE,OAAO;QACpBtR,UAAU,EAAEA,UAAU,CAACV,EAAE;QACzBiS,WAAW,EAAExO,WAAW,CAACzD,EAAE;QAC3BkS,KAAK,EAAEtT,mEAAa,CAACuT,kBAAkB;QACvCC,cAAc,EAAE,CAACxT,mEAAa,CAACyT,GAAG;OACrC,CAAC,CACDhQ,IAAI,CAAC7D,mDAAG,CAACuQ,uEAAiB,CAAC,CAAC;IACrC,CAAC;EACL;EAEQU,wBAAwBA,CAAA;IAC5B,IAAI,CAACrC,QAAQ,CACR/K,IAAI,CACDqG,yDAAS,CAAE0E,QAAQ,IACflP,gDAAkB,CAAC,CACfA,gDAAkB,CAACkP,QAAQ,CAAC5O,GAAG,CAAEwP,CAAC,IAAKA,CAAC,CAACiC,aAAa,CAAC,CAAC,EACxD/R,gDAAkB,CAACkP,QAAQ,CAAC5O,GAAG,CAAEwP,CAAC,IAAKA,CAAC,CAACkC,cAAc,CAAC,CAAC,CAC5D,CAAC,CACL,EACD1R,mDAAG,CAAC,CAAC,CAACyR,aAAa,EAAEC,cAAc,CAAC,KAAI;MACpC,MAAMoC,qBAAqB,GAAGrC,aAAa,CAAC3R,MAAM,CAACiU,OAAO,CAAC,CAAC9N,MAAM;MAClE,MAAM+N,sBAAsB,GAAGtC,cAAc,CAAC5R,MAAM,CAACiU,OAAO,CAAC,CAAC9N,MAAM;MACpE,IAAI6N,qBAAqB,KAAK,CAAC,EAAE;QAC7B,OAAO,EAAE;OACZ,MAAM,IAAIA,qBAAqB,GAAGrC,aAAa,CAACxL,MAAM,EAAE;QACrD,OAAQ6N,qBAAqB,GAAGrC,aAAa,CAACxL,MAAM,GAAI,EAAE,GAAG,EAAE;OAClE,MAAM;QACH,OAAQ+N,sBAAsB,GAAGtC,cAAc,CAACzL,MAAM,GAAI,EAAE,GAAG,EAAE;;IAEzE,CAAC,CAAC,EACFoK,qEAAoB,EAAE,CAEzB,CACAvM,SAAS,CAAC,IAAI,CAAC+K,eAAe,CAAC;EACxC;EAAC,QAAArQ,CAAA;qBAhKQkO,2BAA2B,EAAAjO,uDAAA,CAAAA,oDAAA,GAAAA,uDAAA,CAAAa,+DAAA,GAAAb,uDAAA,CAAA0J,mEAAA,GAAA1J,uDAAA,CAAA4J,kFAAA,GAAA5J,uDAAA,CAAAa,4DAAA,GAAAb,uDAAA,CAAA8J,kEAAA;EAAA;EAAA,QAAA3J,EAAA;WAA3B8N,2BAA2B;IAAA7N,OAAA,EAA3B6N,2BAA2B,CAAA5N;EAAA;;AAmKxC,SAASiV,OAAOA,CAAC5U,KAAc;EAC3B,OAAOA,KAAK,KAAK,KAAK;AAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzM4F;AACpC;AACiB;AAG1C;AAGuB;;;;;;;;;;;;;;;ICTtDV,gEAAA,MAGgB;;;;;IAEhBA,4DAAA,6BAMC;IACCA,uDAAA,uBAAsD;IACxDA,0DAAA,EAAsB;;;;IALpBA,wDAAA,eAAA6V,mBAAA,CAAAxH,UAAA,CAAyC;;;;;IAuBnCrO,qEAAA,GAAiF;IAC/EA,oDAAA,GACF;IAAAA,mEAAA,EAAe;;;;IADbA,uDAAA,GACF;IADEA,gEAAA,OAAA8V,OAAA,CAAAC,qBAAA,CAAAlH,QAAA,SACF;;;;;IALJ7O,4DAAA,cAA6B;IAEzBA,oDAAA,GACA;;IAAAA,wDAAA,IAAAgW,gEAAA,2BAEe;IACjBhW,0DAAA,EAAK;;;;;IAJHA,uDAAA,GACA;IADAA,gEAAA,MAAAA,yDAAA,kCACA;IAAeA,uDAAA,GAAwC;IAAxCA,wDAAA,UAAAiW,MAAA,CAAAF,qBAAA,CAAArJ,SAAA,CAAwC,aAAAwJ,GAAA;;;;;IAuBrDlW,qEAAA,GAAmD;IACjDA,4DAAA,WAA0C;IACxCA,oDAAA,GACF;IAAAA,0DAAA,EAAO;IACTA,mEAAA,EAAe;;;;IAHPA,uDAAA,GAAmC;IAAnCA,oEAAA,WAAAoW,OAAA,CAAAC,aAAA,OAAmC;IACvCrW,uDAAA,GACF;IADEA,gEAAA,aAAAoW,OAAA,CAAAE,iBAAA,CAAAzH,QAAA,SACF;;;;;IAJJ7O,qEAAA,GAA6E;IAC3EA,wDAAA,IAAAuW,+EAAA,2BAIe;IACjBvW,mEAAA,EAAe;;;;IALEA,uDAAA,GAAkC;IAAlCA,wDAAA,UAAAwW,OAAA,CAAAF,iBAAA,CAAA7G,OAAA,GAAkC;;;;;;IAOrDzP,4DAAA,iBAQC;IADCA,wDAAA,mBAAAyW,mFAAA;MAAAzW,2DAAA,CAAA0W,IAAA;MAAA,MAAAC,OAAA,GAAA3W,2DAAA;MAAA,OAASA,yDAAA,CAAA2W,OAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;;;IAEzB5W,uDAAA,YAA4B;IAC5BA,4DAAA,WAAM;IAAAA,oDAAA,GAAkC;;IAAAA,0DAAA,EAAO;;;IAJ/CA,mEAAA,eAAAA,yDAAA,gCAAsD;IADtDA,yDAAA,eAAAA,yDAAA,yBAAgD;IAK1CA,uDAAA,GAAkC;IAAlCA,+DAAA,CAAAA,yDAAA,yBAAkC;;;;;IAE1CA,uDAAA,mBAAgE;;;;;IAvBlEA,4DAAA,cAA6B;IAEzBA,oDAAA,GACA;;IAAAA,wDAAA,IAAA+W,gEAAA,2BAMe;IACjB/W,0DAAA,EAAK;IACLA,wDAAA,IAAAgX,0DAAA,qBAWS;IACThX,wDAAA,IAAAiX,gEAAA,2BAAgE;IAClEjX,0DAAA,EAAM;;;;;;IAtBFA,uDAAA,GACA;IADAA,gEAAA,MAAAA,yDAAA,gCACA;IAAeA,uDAAA,GAAoC;IAApCA,wDAAA,UAAAkX,MAAA,CAAAZ,iBAAA,CAAA5J,SAAA,CAAoC,aAAAwJ,GAAA;IASlDlW,uDAAA,GAAiD;IAAjDA,wDAAA,SAAAoP,GAAA,CAAA+H,YAAA,GAAA1H,OAAA,GAAiD;IAWrCzP,uDAAA,GAAgC;IAAhCA,wDAAA,UAAAkX,MAAA,CAAAnH,mBAAA,CAAArP,KAAA,CAAgC;;;;;IAIjDV,4DAAA,cAAuC;IACrCA,uDAAA,YAAuB;IACvBA,oDAAA,GACF;;IAAAA,0DAAA,EAAM;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,sCACF;;;;;IAKFA,uDAAA,sBAAwE;;;;;;;;;;;;;;ADpEpE,MAAOoX,0BAA0B;EAKnC,IACIC,UAAUA,CAAC3W,KAAyB;IACpC;IACA6I,UAAU,CAAC,MAAO,IAAI,CAAC+N,SAAS,GAAG5W,KAAM,CAAC;EAC9C;EAWAhB,YACYuE,wBAAyD,EACzDuM,OAAiC,EACjCrM,UAA6B,EAC7BoT,uBAAgD,EAChDC,SAAwB,EACxBnT,SAA2B;IAL3B,KAAAJ,wBAAwB,GAAxBA,wBAAwB;IACxB,KAAAuM,OAAO,GAAPA,OAAO;IACP,KAAArM,UAAU,GAAVA,UAAU;IACV,KAAAoT,uBAAuB,GAAvBA,uBAAuB;IACvB,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAnT,SAAS,GAATA,SAAS;IAzBZ,KAAA8J,KAAK,GAAGA,qDAAK;IACb,KAAAD,sBAAsB,GAAGA,sEAAsB;IAChD,KAAApJ,SAAS,GAAG,IAAI5D,yCAAO,EAAQ;IAS9B,KAAAoV,iBAAiB,GAAG,IAAI,CAAC9F,OAAO,CAAC8F,iBAAiB;IAClD,KAAAP,qBAAqB,GAAG,IAAI,CAACvF,OAAO,CAACuF,qBAAqB;IAC1D,KAAA0B,aAAa,GAAG,IAAI,CAACjH,OAAO,CAACiH,aAAa;IAC1C,KAAAC,iBAAiB,GAAG,IAAI,CAAClH,OAAO,CAACkH,iBAAiB;IAClD,KAAAC,UAAU,GAAG,IAAI,CAACnH,OAAO,CAACmH,UAAU;IACpC,KAAA5H,mBAAmB,GAAG,IAAI,CAAC5L,UAAU,CAAC4L,mBAAmB;IACzD,KAAAlQ,eAAe,GAAG,IAAI,CAACoE,wBAAwB,CAACpE,eAAe;IAUpE;IACA2Q,OAAO,CAACoH,SAAS,CACZxS,IAAI,CACD3D,yDAAS,CAAC,IAAI,CAACqD,SAAS,CAAC;IAAE;IAC3B2G,yDAAS,CAAEoM,mBAAmB,IAC1B,IAAI,CAACxT,SAAS,CAACqD,GAAG,CAAC,uBAAuB,EAAE;MAAEoQ,KAAK,EAAED;IAAmB,CAAE,CAAC,CAC9E,CACJ,CACAxS,SAAS,CAAE0S,yBAAyB,IAAI;MACrC,IAAI,CAACP,SAAS,CAACQ,QAAQ,CAACD,yBAAyB,CAAC;IACtD,CAAC,CAAC;EACV;EAEAhT,QAAQA,CAAA;IACJwE,UAAU,CAAC,MAAK;MACZ,IAAI,CAACpF,UAAU,CAACqM,OAAO,GAAG,IAAI,CAACA,OAAO;MACtC,IAAI,CAACrM,UAAU,CAACsM,sBAAsB,CAAC3Q,IAAI,CAAC,KAAK,CAAC;IACtD,CAAC,CAAC;EACN;EAEA8W,aAAaA,CAAA;IACT,MAAMqB,kBAAkB,GAAG,IAAI,CAAC9T,UAAU,CAAC8T,kBAAkB;IAC7DA,kBAAkB,CAAC1R,YAAY,CAAC,CAAC0R,kBAAkB,CAACzT,QAAQ,EAAE,CAAC;EACnE;EAEAmB,WAAWA,CAAA;IACP,IAAI,CAACb,SAAS,CAAChF,IAAI,EAAE;IACrB,IAAI,CAACgF,SAAS,CAACc,QAAQ,EAAE;IACzB,IAAI,CAAC2R,uBAAuB,CAACW,GAAG,CAC5BxC,uEAAuB,CAACyC,iCAAiC,EACzD,IAAI,CAAC7B,iBAAiB,CACzB;EACL;EAEAD,aAAaA,CAAA;IACT,IAAI,IAAI,CAAClS,UAAU,CAAC+B,YAAY,CAAC1B,QAAQ,EAAE,EAAE;MACzC,OAAO,oBAAoB;;IAE/B,OAAO,EAAE;EACb;EAAC,QAAAzE,CAAA;qBAnEQqX,0BAA0B,EAAApX,+DAAA,CAAAa,wFAAA,GAAAb,+DAAA,CAAA0J,kFAAA,GAAA1J,+DAAA,CAAA4J,mEAAA,GAAA5J,+DAAA,CAAA8J,uEAAA,GAAA9J,+DAAA,CAAAiK,4DAAA,GAAAjK,+DAAA,CAAAqY,kEAAA;EAAA;EAAA,QAAAlY,EAAA;UAA1BiX,0BAA0B;IAAAjN,SAAA;IAAAC,SAAA,WAAAkO,iCAAAhO,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;kEAKxBqL,kEAAkB;;;;;;;gFAPlB,CAACC,kFAAwB,CAAC;IAAA1E,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAkH,oCAAAjO,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCfzCtK,wDAAA,IAAAwY,kDAAA,0BAGgB;QAEhBxY,wDAAA,IAAAyY,yDAAA,iCAQsB;QAItBzY,4DAAA,iCASC;QACCA,wDAAA,IAAA0Y,iDAAA,gCAAA1Y,oEAAA,CASc;QAChBA,0DAAA,EAA0B;QAE1BA,4DAAA,oCASC;;QACCA,wDAAA,IAAA2Y,iDAAA,gCAAA3Y,oEAAA,CA0Bc;QACdA,wDAAA,KAAA4Y,kDAAA,gCAAA5Y,oEAAA,CAKc;QAChBA,0DAAA,EAA0B;QAE1BA,wDAAA,KAAA6Y,kDAAA,gCAAA7Y,oEAAA,CAEc;;;QArFXA,wDAAA,qBAAAuK,GAAA,CAAA1K,eAAA,CAAAa,KAAA,CAAAoY,UAAA,CAAkD;QAKlD9Y,uDAAA,GAAgC;QAAhCA,wDAAA,SAAAuK,GAAA,CAAAwF,mBAAA,CAAArP,KAAA,CAAgC;QAYjCV,uDAAA,GAAsD;QAAtDA,yDAAA,iBAAAuK,GAAA,CAAAwL,qBAAA,CAAAtG,OAAA,GAAsD;QAEtDzP,wDAAA,eAAAuK,GAAA,CAAAwL,qBAAA,CAAoC,UAAAxL,GAAA,CAAA4D,KAAA,CAAA4K,iBAAA,aAAAxO,GAAA,CAAAmN,iBAAA,CAAAhX,KAAA,gDAAA6J,GAAA,CAAA2D,sBAAA,CAAA8K,SAAA,gBAAAhZ,6DAAA,KAAAuO,GAAA;QAsBpCvO,uDAAA,GAAgC;QAAhCA,wDAAA,eAAAuK,GAAA,CAAA+L,iBAAA,CAAgC,UAAA/L,GAAA,CAAA4D,KAAA,CAAAuB,MAAA,aAAAnF,GAAA,CAAAkN,aAAA,CAAA/W,KAAA,UAAAV,yDAAA,QAAAuK,GAAA,CAAAoN,UAAA,0CAAA3X,6DAAA,KAAA+O,GAAA,EAAAxE,GAAA,CAAA+M,SAAA,EAAA/M,GAAA,CAAAwF,mBAAA,CAAArP,KAAA,kBAAA6J,GAAA,CAAAwF,mBAAA,CAAArP,KAAA,CAAA8N,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCL;AACA;AAC+B;AAapC;AAC6D;AACvB;AAM3B;AAE4C;AACT;AACL;AACG;;;;;;AAU9D,MAAOoH,wBAAwB;EAejClW,YACYsS,SAAmB,EACnBG,IAAgB,EAChBF,OAAsB,EACtBhC,WAA8B,EAC9BiC,kBAA4C,EAC5CE,UAA4B;IAL5B,KAAAJ,SAAS,GAATA,SAAS;IACT,KAAAG,IAAI,GAAJA,IAAI;IACJ,KAAAF,OAAO,GAAPA,OAAO;IACP,KAAAhC,WAAW,GAAXA,WAAW;IACX,KAAAiC,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAE,UAAU,GAAVA,UAAU;IApBb,KAAAkE,iBAAiB,GAAG,IAAIvE,0EAAoB,CAAC,IAAI,CAACC,SAAS,CAAC;IAC5D,KAAAyH,YAAY,GAAG,IAAI,CAACnD,iBAAiB,CAACoD,YAAY,EAAE;IACpD,KAAA3D,qBAAqB,GAAG,IAAIhE,0EAAoB,CAAC,IAAI,CAACC,SAAS,CAAC;IAChE,KAAAyF,aAAa,GAAG,IAAIjY,iDAAe,CAAa,EAAE,CAAC;IACnD,KAAAkY,iBAAiB,GAAG,IAAIlY,iDAAe,CAAa,EAAE,CAAC;IACvD,KAAAmY,UAAU,GAAG,IAAInY,iDAAe,CAAiB,IAAI,CAAC;IACtD,KAAAwT,aAAa,GAAG,IAAIxT,iDAAe,CAAU,IAAI,CAAC;IAClD,KAAAyT,cAAc,GAAG,IAAIzT,iDAAe,CAAU,IAAI,CAAC;IACnD,KAAAma,kBAAkB,GAAG,IAAIna,iDAAe,CAAU,IAAI,CAAC;IACvD,KAAA4Q,eAAe,GAAG,IAAI5Q,iDAAe,CAAS,CAAC,CAAC;IAChD,KAAAoY,SAAS,GAAG,IAAIpY,iDAAe,CAAS,CAAC,CAAC;IAElC,KAAA6S,UAAU,GAAG,IAAInR,yCAAO,EAAQ;IAU7C,IAAI,CAACqR,oBAAoB,EAAE;IAC3B,IAAI,CAACqH,0BAA0B,EAAE;IACjC,IAAI,CAACC,6BAA6B,EAAE;IACpC,IAAI,CAACrH,wBAAwB,EAAE;IAC/B,IAAI,CAACsH,wBAAwB,EAAE;EACnC;EAEAnU,WAAWA,CAAA;IACP,IAAI,CAAC0M,UAAU,CAACvS,IAAI,EAAE;IACtB,IAAI,CAACuS,UAAU,CAACzM,QAAQ,EAAE;EAC9B;EAEA6M,QAAQA,CAACC,KAAa;IAClB,IAAI,CAAC4D,iBAAiB,CAACzD,UAAU,CAACH,KAAK,EAAE,QAAQ,CAAC;EACtD;EAEQH,oBAAoBA,CAAA;IACxB,IAAI,CAACL,kBAAkB,CAAC3F,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC+J,iBAAiB,CAAC;IAC/E,IAAI,CAACpE,kBAAkB,CAAC3F,kBAAkB,CAAC,aAAa,EAAE,IAAI,CAACwJ,qBAAqB,CAAC;EACzF;EAEQ6D,0BAA0BA,CAAA;IAC9B,MAAMG,mBAAmB,GAAoC9Y,+CAC3C,CAAC,CACX,IAAI,CAACgP,WAAW,CAAC3L,gBAAgB,CAACsD,YAAY,EAAE;IAChD;IACA,IAAI,CAACqI,WAAW,CAAC1L,iBAAiB,CAACqD,YAAY,EAAE;IACjD;IACA,IAAI,CAACqI,WAAW,CAACxL,aAAa,CAACmD,YAAY,EAAE;IAC7C;IACA,IAAI,CAACqI,WAAW,CAAC/J,YAAY,CAAC0B,YAAY;IAC1C;IAAA,CACH,CAAC,CACDxC,IAAI,CACD3D,0DAAS,CAAC,IAAI,CAAC4Q,UAAU,CAAC,EAC1B3Q,oDAAG,CAAC,MAAM,IAAI,CAACsR,aAAa,CAAClT,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC;IACA;IACA;IACA;IACAqB,6DAAY,CAAC,CAAC,CAAC,EACfE,uDAAM,CACF,CAAC,CAACoC,UAAU,EAAE+C,WAAW,EAAE/B,aAAa,CAAC,KACrC5C,4DAAO,CAAC4B,UAAU,CAAC,IAAI5B,4DAAO,CAAC2E,WAAW,CAAC,IAAI3E,4DAAO,CAAC4C,aAAa,CAAC,CAC5E;IACD;IACA;IACA;IACA;IACA;IACAgH,0DAAS,CAAEnG,MAAM,IACb,IAAI,CAAC2K,WAAW,CAACnH,aAAa,CAAC1D,IAAI,CAC/B9D,sDAAK,CAACO,wDAAO,CAAC,EACdN,oDAAG,CAAC,MAAM+D,MAAM,CAAC,CACpB,CACJ,EACD5D,oDAAG,CAAC,MAAM,IAAI,CAACsR,aAAa,CAAClT,IAAI,CAAC,KAAK,CAAC,CAAC,EACzCyB,oDAAG,CACC,CAAC,CAACkC,UAAU,EAAE+C,WAAW,EAAE/B,aAAa,EAAEyB,YAAY,CAAC,KACnD,IAAIoT,qEAAmB,CACnB7V,UAAU,EACV+C,WAAW,EACX/B,aAAa,EACbyB,YAAY,CACf,CACR,EACD0L,qEAAoB,CAAC,CAACoI,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,MAAM,CAACD,CAAC,CAAC,CAAC,EAC3Cd,sDAAK,EAAE,CACV;IACL,MAAMgB,uBAAuB,GAAoCJ,mBAAmB,CAAC3U,IAAI;IACrF;IACA7D,oDAAG,CACC,CAAC;MAAEkC,UAAU;MAAE+C,WAAW;MAAEN;IAAY,CAAE,KACtC,IAAIoT,qEAAmB,CAAC7V,UAAU,EAAE+C,WAAW,EAAE,EAAE,EAAEN,YAAY,CAAC,CACzE,EACD0L,qEAAoB,CAAC,CAACoI,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,MAAM,CAACD,CAAC,CAAC,CAAC,CAC9C;IACDF,mBAAmB,CACd3U,IAAI,CACD1D,oDAAG,CAAC,MAAM,IAAI,CAACuR,cAAc,CAACnT,IAAI,CAAC,IAAI,CAAC,CAAC,EACzCyB,oDAAG,CAAE6Y,MAAM,IAAK,IAAI,CAAC1G,gBAAgB,CAAC0G,MAAM,CAAC,CAAC,CACjD,CACA/U,SAAS,CAAEgV,MAAM,IAAK,IAAI,CAAC/D,iBAAiB,CAAC7C,SAAS,CAAC4G,MAAM,CAAC,CAAC;IAEpEF,uBAAuB,CAClB/U,IAAI,CACD1D,oDAAG,CAAC,MAAM,IAAI,CAACiY,kBAAkB,CAAC7Z,IAAI,CAAC,IAAI,CAAC,CAAC,EAC7CyB,oDAAG,CAAE6Y,MAAM,IAAK,IAAI,CAACE,2BAA2B,CAACF,MAAM,CAAC,CAAC,CAC5D,CACA/U,SAAS,CAAEgV,MAAM,IAAK,IAAI,CAACtE,qBAAqB,CAACtC,SAAS,CAAC4G,MAAM,CAAC,CAAC;IACxE,IAAI,CAAC/D,iBAAiB,CAAC3C,gBAAgB,CAACtO,SAAS,CAAEqH,SAAS,IACxD,IAAI,CAACuG,cAAc,CAACnT,IAAI,CAAC,CAAC,CAAC4M,SAAS,CAAC,CACxC;IACD,IAAI,CAACqJ,qBAAqB,CAACpC,gBAAgB,CAACtO,SAAS,CAAEqH,SAAS,IAC5D,IAAI,CAACiN,kBAAkB,CAAC7Z,IAAI,CAAC,CAAC,CAAC4M,SAAS,CAAC,CAC5C;EACL;EAEQmN,6BAA6BA,CAAA;IACjC;IACA,MAAMU,GAAG,GAA8BtZ,+CACrB,CAAC,CACX,IAAI,CAACgP,WAAW,CAAC3L,gBAAgB,CAACsD,YAAY,EAAE,EAChD,IAAI,CAACqI,WAAW,CAAC1L,iBAAiB,CAACqD,YAAY,EAAE,CACpD,CAAC,CACDxC,IAAI,CACD3D,0DAAS,CAAC,IAAI,CAAC4Q,UAAU,CAAC,EAC1BhR,uDAAM,CAAC,CAAC,CAACoC,UAAU,EAAE+C,WAAW,CAAC,KAAK3E,4DAAO,CAAC4B,UAAU,CAAC,IAAI5B,4DAAO,CAAC2E,WAAW,CAAC,CAAC,EAClFiF,0DAAS,CAAC,CAAC,CAAChI,UAAU,EAAE+C,WAAW,CAAC,KAChC,IAAI,CAAC2L,IAAI,CAAC2B,cAAc,CAAC;MAAErQ,UAAU;MAAE+C;IAAW,CAAE,CAAC,CACxD,CACJ;IACL;IACA+T,GAAG,CAACnV,IAAI,CAAC7D,oDAAG,CAAEgZ,GAAG,IAAK1I,mEAAS,CAACkC,UAAU,CAAC,IAAI,CAAC3B,UAAU,EAAEmI,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAClV,SAAS,CAClF,IAAI,CAACoS,aAAa,CACrB;IACD8C,GAAG,CAACnV,IAAI,CACJ7D,oDAAG,CAAEgZ,GAAG,IAAK1I,mEAAS,CAACkC,UAAU,CAAC,IAAI,CAAC3B,UAAU,EAAEmI,GAAG,EAAE,mBAAmB,CAAC,CAAC,CAChF,CAAClV,SAAS,CAAC,IAAI,CAACqS,iBAAiB,CAAC;IACnC;IACA6C,GAAG,CAACnV,IAAI,CAAC7D,oDAAG,CAAEgZ,GAAG,IAAK1I,mEAAS,CAACmC,WAAW,CAACuG,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAClV,SAAS,CAAEmV,QAAQ,IAAI;MAChF,IAAI,CAAC7C,UAAU,CAAC7X,IAAI,CAAC;QACjB2a,OAAO,EAAE,IAAI;QACbC,MAAM,EAAEF,QAAQ,CAACvG,OAAO,CAACa,MAAM;QAC/B6F,SAAS,EAAEH,QAAQ,CAACvG,OAAO,CAACW,aAAa,GAAG,KAAK,GAAG,MAAM;QAC1DjF,OAAO,EAAE6K,QAAQ,CAAC7K,OAAO,EAAEpO,GAAG,CAC1B,CAAC;UAAEwB,EAAE;UAAE6X;QAAI,CAAE,KACT,IAAIvB,6DAAY,CAAC,MAAM,EAAEtW,EAAE,EAAE6X,IAAkC,CAAC;OAE3E,CAAC;IACN,CAAC,CAAC;EACN;EAEQlH,gBAAgBA,CAAC0G,MAA2B;IAChD;IACA,OAAQhG,OAA0B,IAAI;MAClC;MACA,OAAO,IAAI,CAACnC,OAAO,CACdoC,MAAM,CAAC;QACJC,IAAI,EAAE;UACFJ,QAAQ,EAAE,IAAI,CAAC2G,kBAAkB,CAACT,MAAM,CAAC;UACzCU,UAAU,EAAE,CAAC;UACbC,aAAa,EAAE,CAAC;UAChBC,WAAW,EAAE,IAAI,CAAC/K,WAAW,CAACvL,KAAK,CAAChE,KAAK,GACnC,CAACiB,2EAAa,CAACsZ,iBAAiB,CAAC,GACjC;SACT;QACD1G,QAAQ,EAAEH,OAAO,CAACI,KAAK,CAACC,QAAQ,GAAGL,OAAO,CAACI,KAAK,CAACE,UAAU;QAC3DC,SAAS,EAAEP,OAAO,CAACI,KAAK,CAACE,UAAU;QACnCE,aAAa,EAAER,OAAO,CAACd,IAAI,GAAG,CAACc,OAAO,CAACd,IAAI,CAACqH,SAAS,KAAK,KAAK,CAAC,GAAG,IAAI;QACvE9F,cAAc,EAAET,OAAO,CAACd,IAAI,GAAG,CAACc,OAAO,CAACd,IAAI,CAACoH,MAAM,CAAC,GAAG,IAAI;QAC3D3F,WAAW,EAAE,OAAO;QACpBtR,UAAU,EAAE2W,MAAM,CAAC3W,UAAU;QAC7BuR,WAAW,EAAEoF,MAAM,CAAC5T,WAAW;QAC/ByO,KAAK,EAAEtT,2EAAa,CAACuT,kBAAkB;QACvCC,cAAc,EAAE,CAACxT,2EAAa,CAACyT,GAAG;OACrC,CAAC,CACDhQ,IAAI,CACD1D,oDAAG,CAAEqP,CAAC,IAAI;QACN,IAAIA,CAAC,CAACmK,UAAU,CAACC,KAAK,GAAGpK,CAAC,CAACmK,UAAU,CAACpD,KAAK,EAAE;UACzCsD,OAAO,CAACC,IAAI,CACR,yGAAyG,EACzGtK,CAAC,CAACmK,UAAU,CACf;;MAET,CAAC,CAAC,EACF3Z,oDAAG,CAACuQ,uEAAiB,CAAC,CACzB;IACT,CAAC;EACL;EAEQwI,2BAA2BA,CAACF,MAA2B;IAC3D,MAAM3W,UAAU,GAAG,IAAI,CAACwM,WAAW,CAACnJ,qBAAqB,CAACpG,KAAK,CAACqG,IAAI,CAChE,CAAC;MAAEhE;IAAE,CAAE,KAAKA,EAAE,KAAKqX,MAAM,CAAC3W,UAAU,CACvC;IACD;IACI;IACA,CAACA,UAAU,CAACmQ,UAAU;IACtB;IACA,IAAI,CAAC3D,WAAW,CAACF,mBAAmB,CAACrP,KAAK,EAC5C;MACE,IAAI,CAACiZ,kBAAkB,CAAC7Z,IAAI,CAAC,KAAK,CAAC;MACnC,OAAO,MAAMmB,qCAAO,CAAC;QAAEqa,IAAI,EAAE,EAAE;QAAEH,KAAK,EAAE;MAAC,CAAE,CAAC;;IAEhD,OAAQ/G,OAA0B,IAAI;MAClC,OAAO,IAAI,CAACnC,OAAO,CACdsJ,aAAa,CAAC;QACXjH,IAAI,EAAE;UACFJ,QAAQ,EAAE,IAAI,CAAC2G,kBAAkB,CAACT,MAAM,CAAC;UACzCoB,MAAM,EAAE;SACX;QACD3G,cAAc,EAAE,CACZlT,2EAAa,CAAC8Z,iCAAiC,EAC/C9Z,2EAAa,CAAC+Z,gCAAgC,EAC9C/Z,2EAAa,CAACga,gBAAgB,CACjC;QACD/G,aAAa,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;QACnCL,QAAQ,EAAEH,OAAO,CAACI,KAAK,CAACC,QAAQ,GAAGL,OAAO,CAACI,KAAK,CAACE,UAAU;QAC3DC,SAAS,EAAEP,OAAO,CAACI,KAAK,CAACE,UAAU;QACnC;QACA;QACAK,WAAW,EAAE,KAAK;QAClBtR,UAAU,EAAE2W,MAAM,CAAC3W,UAAU;QAC7BuR,WAAW,EAAEoF,MAAM,CAAC5T,WAAW;QAC/ByO,KAAK,EAAEtT,2EAAa,CAACia,sBAAsB;QAC3CzG,cAAc,EAAE,CAACxT,2EAAa,CAACyT,GAAG;OACrC,CAAC,CACDhQ,IAAI,CAAC7D,oDAAG,CAACuQ,uEAAiB,CAAC,CAAC;IACrC,CAAC;EACL;EAEQ+I,kBAAkBA,CAACT,MAA2B;IAClD,IAAIlG,QAAQ,GAAuB7M,MAAM,CAAC2D,OAAO,CAACoP,MAAM,CAAC3V,aAAa,IAAI,EAAE,CAAC,CAAClD,GAAG,CAC7E,CAAC,CAAC4S,QAAQ,EAAE7O,MAAM,CAAC,MAAM;MAAE6O,QAAQ;MAAE7O;IAAM,CAAE,CAAC,CACjD;IACD,IAAI,CAACuW,eAAe,CAAC3H,QAAQ,CAAC;IAC9B,IAAIkG,MAAM,CAAClU,YAAY,EAAE;MACrBgO,QAAQ,CAAClN,IAAI,CAAC;QAAEmN,QAAQ,EAAE,cAAc;QAAE7O,MAAM,EAAE,CAAC8U,MAAM,CAAClU,YAAY;MAAC,CAAE,CAAC;;IAE9E,OAAOgO,QAAQ;EACnB;EAEQ1B,wBAAwBA,CAAA;IAC5BvR,+CAAkB,CAAC,CAAC,IAAI,CAAC+R,aAAa,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAAC0G,kBAAkB,CAAC,CAAC,CACjFvU,IAAI,CACD7D,oDAAG,CAAC,CAAC,CAACyR,aAAa,EAAEC,cAAc,EAAE0G,kBAAkB,CAAC,KAAI;MACxD,IAAI3G,aAAa,EAAE;QACf,OAAO,EAAE;OACZ,MAAM;QACH,OAAO,EAAE,IAAIC,cAAc,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI0G,kBAAkB,GAAG,CAAC,GAAG,EAAE,CAAC;;IAE7E,CAAC,CAAC,EACFxY,6DAAY,CAAC,CAAC,CAAC,EACfyQ,qEAAoB,EAAE,CACzB,CACAvM,SAAS,CAAEwL,QAAQ,IAAK,IAAI,CAACT,eAAe,CAACtQ,IAAI,CAAC+Q,QAAQ,CAAC,CAAC;EACrE;EAEQiJ,wBAAwBA,CAAA;IAC5B,IAAI,CAACxD,iBAAiB,CACjB7J,OAAO,EAAE,CACTrH,IAAI,CACD3D,0DAAS,CAAC,IAAI,CAAC4Q,UAAU,CAAC,EAC1BhR,uDAAM,CAACQ,wDAAO,CAAC,EACfN,oDAAG,CAAEmR,KAAK,IAAKA,KAAK,CAAClL,MAAM,CAAC,EAC5B4R,0DAAS,CAAC,CAAC,CAAC,EACZF,yDAAQ,EAAE,CACb,CACA7T,SAAS,CAAC,CAAC,CAACyW,aAAa,EAAEC,YAAY,CAAC,KAAI;MACzC,IAAI,CAACnE,SAAS,CAAC9X,IAAI,CAACic,YAAY,GAAGD,aAAa,CAAC;IACrD,CAAC,CAAC;EACV;EAEA;EACA;EACA;EACQD,eAAeA,CAAC3H,QAA4B;IAChD,KAAK,MAAM8H,CAAC,IAAI9H,QAAQ,EAAE;MACtB;MACA;MACA,MAAM+H,MAAM,GAAG,IAAI,CAAChM,WAAW,CAACvH,iBAAiB,CAAChI,KAAK,EAAEqG,IAAI,CACxDkV,MAAM,IAAKA,MAAM,CAACC,UAAU,CAACnZ,EAAE,KAAKiZ,CAAC,CAAC7H,QAAQ,CAClD,EAAE+H,UAAU;MACb,IAAID,MAAM,EAAEE,IAAI,KAAK5C,2EAAa,CAAC6C,cAAc,EAAE;QAC/C;QACA;QACA,IAAIC,MAAM,GAAG5G,4DAAU,CAAC6G,gBAAgB,CAACN,CAAC,CAAC1W,MAAM,EAAE2W,MAAM,CAAC;QAC1D,IAAII,MAAM,EAAE;UACR,IAAIA,MAAM,CAAC7U,MAAM,GAAGgS,8EAAiB,CAAC+C,uBAAuB,EAAE;YAC3DnB,OAAO,CAACoB,IAAI,CACR,QAAQ,GACJR,CAAC,CAAC7H,QAAQ,GACV,+BAA+B,GAC/BkI,MAAM,CAAC7U,MAAM,GACb,8CAA8C,CACrD;WACJ,MAAM;YACHwU,CAAC,CAAC1W,MAAM,GAAG0W,CAAC,CAAC1W,MAAM,CAACmX,MAAM,CAACJ,MAAM,CAAC;;;;;EAKtD;EAAC,QAAAtc,CAAA;qBAjTQ6V,wBAAwB,EAAA5V,uDAAA,CAAAA,oDAAA,GAAAA,uDAAA,CAAAa,4DAAA,GAAAb,uDAAA,CAAAa,+DAAA,GAAAb,uDAAA,CAAA0J,mEAAA,GAAA1J,uDAAA,CAAA4J,kFAAA,GAAA5J,uDAAA,CAAA8J,kEAAA;EAAA;EAAA,QAAA3J,EAAA;WAAxByV,wBAAwB;IAAAxV,OAAA,EAAxBwV,wBAAwB,CAAAvV;EAAA;;;;;;;;;;;;;;;;;;;;AC7CkB;AAC6B;AACP;AAEf;;;AAE9D,MAAMuc,MAAM,GAAW,CACnB;EACIC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEH,uEAAmB;EAC9BI,QAAQ,EAAE,CACN;IACIF,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE1F,sFAA0BA;GACxC,EACD;IACIyF,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE9M,6FAA6BA;GAC3C;CAER,CACJ;AAMK,MAAOgN,uBAAuB;EAAA,QAAAjd,CAAA;qBAAvBid,uBAAuB;EAAA;EAAA,QAAA7c,EAAA;UAAvB6c;EAAuB;EAAA,QAAAC,EAAA;cAHtBP,yDAAY,CAACQ,QAAQ,CAACN,MAAM,CAAC,EAC7BF,yDAAY;EAAA;;;sHAEbM,uBAAuB;IAAAG,OAAA,GAAAtc,yDAAA;IAAAuc,OAAA,GAFtBV,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;AC1BqD;;;;;AAOzE,MAAOY,0BAA0B;EAInC5d,YAAA;IAFU,KAAA6d,wBAAwB,GAAG,IAAIF,uDAAY,EAAW;EAEjD;EAEftY,QAAQA,CAAA,GAAU;EAElByY,eAAeA,CAAA;IACX,IAAI,CAACvF,kBAAkB,GAAG,CAAC,IAAI,CAACA,kBAAkB;IAClD,IAAI,CAACsF,wBAAwB,CAACE,IAAI,CAAC,IAAI,CAACxF,kBAAkB,CAAC;EAC/D;EAAC,QAAAlY,CAAA;qBAXQud,0BAA0B;EAAA;EAAA,QAAAnd,EAAA;UAA1Bmd,0BAA0B;IAAAnT,SAAA;IAAAuT,MAAA;MAAAzF,kBAAA;IAAA;IAAA0F,OAAA;MAAAJ,wBAAA;IAAA;IAAArM,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAuM,oCAAAtT,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPvCtK,4DAAA,gBAMC;QAHCA,wDAAA,mBAAA6d,4DAAA;UAAA,OAAStT,GAAA,CAAAiT,eAAA,EAAiB;QAAA,EAAC;QAI3Bxd,4DAAA,WAAM;QAAAA,oDAAA,GAA0C;;QAAAA,0DAAA,EAAO;QACvDA,uDAAA,WAAqC;QACvCA,0DAAA,EAAS;;;QAJPA,yDAAA,oCAAAuK,GAAA,CAAA0N,kBAAA,CAA4D;QAEtDjY,uDAAA,GAA0C;QAA1CA,+DAAA,CAAAA,yDAAA,iCAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP+B;AAKpD;AACc;AAC6B;AACQ;AAOpD;AAM8B;;;;;;;;;;;;;;;;;;;;;;;;;;ICJtDA,6DAAA,gBAQC;IACCA,qDAAA,GACF;;IAAAA,2DAAA,EAAI;;;;;IAPFA,yDAAA,eAAAA,8DAAA,IAAA6P,GAAA,EAAwB,gBAAAuO,MAAA,CAAAC,0BAAA,YAAAC,IAAA,CAAAC,QAAA;IAMxBve,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,qCACF;;;;;;IACAA,6DAAA,YAKC;IAFCA,yDAAA,mBAAAwe,mEAAA;MAAA,MAAAC,WAAA,GAAAze,4DAAA,CAAA0e,IAAA;MAAA,MAAAC,cAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,OAAA,GAAA7e,4DAAA;MAAA,OAASA,0DAAA,CAAA6e,OAAA,CAAAC,cAAA,CAAAH,cAAA,CAA0B;IAAA,EAAC;IAGpC3e,6DAAA,cAA6B;IAC3BA,wDAAA,cAAkD;;IACpDA,2DAAA,EAAM;IACNA,qDAAA,GACF;IAAAA,2DAAA,EAAI;;;;;IANFA,yDAAA,WAAA2e,cAAA,CAAA5b,EAAA,KAAAgc,MAAA,CAAAza,gBAAA,CAAAE,QAAA,GAAwD;IAGjDxE,wDAAA,GAAmC;IAAnCA,yDAAA,QAAAA,0DAAA,OAAA2e,cAAA,GAAA3e,4DAAA,CAAmC;IAE1CA,wDAAA,GACF;IADEA,iEAAA,MAAA2e,cAAA,CAAA1X,KAAA,MACF;;;;;IAGAjH,iEAAA,GAAyD;;;;;IA1B7DA,sEAAA,GAAsC;IACpCA,6DAAA,aAA2C;IACzCA,yDAAA,IAAAif,+CAAA,eAUI;IACJjf,yDAAA,IAAAkf,+CAAA,eAUI;IACNlf,2DAAA,EAAM;IACNA,6DAAA,iCAA6B;IAC3BA,yDAAA,IAAAmf,0DAAA,2BAAyD;IAC3Dnf,2DAAA,EAAoB;IACtBA,oEAAA,EAAe;;;;;;IA3BQA,wDAAA,GAAqB;IAArBA,yDAAA,aAAAof,IAAA,CAAqB;IAGrCpf,wDAAA,GAAiD;IAAjDA,yDAAA,SAAAqf,MAAA,CAAAvY,qBAAA,CAAAtC,QAAA,GAAAgD,MAAA,KAAiD;IAW3BxH,wDAAA,GAAmC;IAAnCA,yDAAA,YAAAqf,MAAA,CAAAvY,qBAAA,CAAAtC,QAAA,GAAmC;IAW7CxE,wDAAA,GAAyB;IAAzBA,yDAAA,qBAAAsf,GAAA,CAAyB;;;;;IAM1Ctf,iEAAA,GAAyD;;;;;IAD3DA,sEAAA,GAAgD;IAC9CA,yDAAA,IAAAuf,0DAAA,2BAAyD;IAC3Dvf,oEAAA,EAAe;;;;;IADEA,wDAAA,GAAyB;IAAzBA,yDAAA,qBAAAsf,GAAA,CAAyB;;;;;;IAYhCtf,6DAAA,iBAIC;IADCA,yDAAA,mBAAAwf,4EAAA;MAAAxf,4DAAA,CAAAyf,IAAA;MAAA,MAAAC,OAAA,GAAA1f,4DAAA;MAAA,OAASA,0DAAA,CAAA0f,OAAA,CAAAjb,aAAA,CAAA8B,YAAA,CAA2B,IAAI,CAAC;IAAA,EAAC;IAE1CvG,wDAAA,YAAqB;IACrBA,qDAAA,GACF;;IAAAA,2DAAA,EAAS;;;IADPA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,6BACF;;;;;IAUAA,wDAAA,gCAE6B;;;;;;IA3BrCA,6DAAA,qCAAiC;;IAK7BA,6DAAA,cAAkC;IAEDA,qDAAA,GAAkC;;IAAAA,2DAAA,EAAK;IACpEA,yDAAA,IAAA2f,mDAAA,qBAOS;IACT3f,6DAAA,kBAIC;IADCA,yDAAA,mBAAA4f,oEAAA;MAAA5f,4DAAA,CAAA6f,IAAA;MAAA,MAAAC,OAAA,GAAA9f,4DAAA;MAAA,OAASA,0DAAA,CAAA8f,OAAA,CAAA7H,kBAAA,CAAA1R,YAAA,CAAgC,KAAK,CAAC;IAAA,EAAC;IAEhDvG,wDAAA,aAAoC;IACtCA,2DAAA,EAAS;IAEXA,6DAAA,eAA6B;IAC3BA,yDAAA,KAAA+f,uEAAA,uCAE6B;;IAC/B/f,2DAAA,EAAM;IAGVA,6DAAA,YAAM;IACJA,wDAAA,qBAA+B;IACjCA,2DAAA,EAAO;;;;IA/BLA,wDAAA,GAA8E;IAA9EA,yDAAA,WAAAiW,MAAA,CAAAgC,kBAAA,CAAAzT,QAAA,MAAAxE,0DAAA,OAAAiW,MAAA,CAAA+J,cAAA,YAA8E;IAK7ChgB,wDAAA,GAAkC;IAAlCA,gEAAA,CAAAA,0DAAA,yBAAkC;IAE5DA,wDAAA,GAAkC;IAAlCA,yDAAA,SAAAiW,MAAA,CAAAxR,aAAA,CAAAmC,YAAA,GAAkC;IAYjB5G,wDAAA,GAAa;IAAbA,yDAAA,cAAa;IAK9BA,wDAAA,GAAgD;IAAhDA,yDAAA,SAAAA,0DAAA,QAAAiW,MAAA,CAAAxF,sBAAA,YAAgD;;;;;IAY3DzQ,wDAAA,oCAAsF;;;;;;IAItFA,6DAAA,iBAIC;IADCA,yDAAA,mBAAAigB,6EAAA;MAAAjgB,4DAAA,CAAAkgB,IAAA;MAAA,MAAAC,OAAA,GAAAngB,4DAAA;MAAA,OAASA,0DAAA,CAAAmgB,OAAA,CAAA1b,aAAA,CAAA8B,YAAA,CAA2B,IAAI,CAAC;IAAA,EAAC;IAE1CvG,wDAAA,YAAqB;IACrBA,qDAAA,GACF;;IAAAA,2DAAA,EAAS;;;IADPA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,6BACF;;;;;IAPAA,yDAAA,IAAAogB,oDAAA,qBAOS;;;;IANNpgB,yDAAA,SAAAqgB,MAAA,CAAA5b,aAAA,CAAAmC,YAAA,GAAkC;;;;;;;;AD1DjC,MAAO+V,mBAAmB;EAqB5Bjd,YACY4gB,kBAAsC,EACtCC,kBAAsC,EACtCvc,OAAuB,EACvBwc,OAAuB,EACvBC,mBAAwC,EACxCC,KAAqB,EACrBvc,UAA6B,EAC7BE,SAA2B;IAP3B,KAAAic,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAvc,OAAO,GAAPA,OAAO;IACP,KAAAwc,OAAO,GAAPA,OAAO;IACP,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAvc,UAAU,GAAVA,UAAU;IACV,KAAAE,SAAS,GAATA,SAAS;IA5BZ,KAAA8J,KAAK,GAAGA,sDAAK;IAMY,KAAAwS,eAAe,GAAY,IAAI;IACjE,KAAAC,oBAAoB,GAAG,KAAK;IAGnB,KAAA9Z,qBAAqB,GAAG,IAAI,CAAC3C,UAAU,CAAC2C,qBAAqB;IAC7D,KAAAxC,gBAAgB,GAAG,IAAI,CAACH,UAAU,CAACG,gBAAgB;IACnD,KAAAmM,sBAAsB,GAAG,IAAI,CAACtM,UAAU,CAACsM,sBAAsB;IAC/D,KAAAwH,kBAAkB,GAAG,IAAI,CAAC9T,UAAU,CAAC8T,kBAAkB;IACvD,KAAA/R,YAAY,GAAG,IAAI,CAAC/B,UAAU,CAAC+B,YAAY;IAC3C,KAAAzB,aAAa,GAAG,IAAI,CAACN,UAAU,CAACM,aAAa;IAC7C,KAAA2L,eAAe,GAAG,IAAI,CAACjM,UAAU,CAACiM,eAAe;IACjD,KAAA4P,cAAc,GAAG,IAAI,CAACa,iBAAiB,EAAE;IACjC,KAAA/b,SAAS,GAAG,IAAI5D,0CAAO,EAAQ;IAY5C,IAAI,CAACiD,UAAU,CAAC2c,IAAI,EAAE;EAC1B;EAEA/b,QAAQA,CAAA;IACJ,IAAI,CAACgc,WAAW,EAAE;IAClB,IAAI,CAACT,kBAAkB,CAACU,WAAW,CAAC,IAAI,CAAC;IACzC,IAAI,CAACla,qBAAqB,CACrB1B,IAAI,CACD/D,uDAAM,CAACQ,wDAAO,CAAC,EACfN,oDAAG,CAAEuF,qBAAqB,IAAKA,qBAAqB,CAACU,MAAM,GAAG,CAAC,CAAC,CACnE,CACAnC,SAAS,CAAEsb,eAAe,IAAM,IAAI,CAACA,eAAe,GAAGA,eAAgB,CAAC;IAC7E,IAAI,CAACM,4BAA4B,EAAE;IACnC,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAACC,kCAAkC,EAAE;EAC7C;EAEAxb,WAAWA,CAAA;IACP,IAAI,CAACb,SAAS,CAAChF,IAAI,EAAE;IACrB,IAAI,CAACgF,SAAS,CAACc,QAAQ,EAAE;EAC7B;EAEAkZ,cAAcA,CAACrb,UAAsB;IACjC,IAAI,CAACa,gBAAgB,CAACiC,YAAY,CAAC9C,UAAU,CAACV,EAAE,CAAC;IACjD,IAAI,CAAC0d,mBAAmB,CAACW,kBAAkB,CAAC;MACxCV,KAAK,EAAE,CAACvC,4DAAW,CAACkD,aAAa,EAAE,QAAQ;KAC9C,CAAC;EACN;EAEQH,oBAAoBA,CAAA;IAAA,IAAArb,KAAA;IACxB,IAAIyb,gBAAiD;IACrD,IAAItB,cAAuB;IAC3B/e,gDAAkB,CAAC,CACf,IAAI,CAACkD,UAAU,CAAC8T,kBAAkB,CAACrQ,YAAY,EAAE,CAACxC,IAAI,EAAE,EACxD,IAAI,CAAC4a,cAAc,CAAC5a,IAAI,CAAC1D,oDAAG,CAAEhB,KAAK,IAAMsf,cAAc,GAAGtf,KAAM,CAAC,CAAC,CACrE,CAAC,CACG0E,IAAI,CAAC3D,0DAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,CAAC,CAC/BO,SAAS;MAAA,IAAAkc,IAAA,GAAAzb,wLAAA,CAAC,WAAO,CAACmS,kBAAkB,CAAC,EAAI;QACtC,IAAI+H,cAAc,IAAI/H,kBAAkB,IAAI,CAACqJ,gBAAgB,EAAE;UAC3DA,gBAAgB,GAAGzb,KAAI,CAAC2b,gBAAgB,EAAE;UAC1C,MAAMzb,SAAS,SAASub,gBAAgB;UACxCvb,SAAS,CAACI,WAAW,EAAE,CAACd,SAAS,CAAC,MAAK;YACnCic,gBAAgB,GAAG,IAAI;YACvB,IAAItB,cAAc,EAAE;cAChBna,KAAI,CAACoS,kBAAkB,CAAC1R,YAAY,CAAC,KAAK,CAAC;;UAEnD,CAAC,CAAC;SACL,MAAM,IAAI,CAACyZ,cAAc,IAAI,CAAC/H,kBAAkB,EAAE;UAC/C,KAAKqJ,gBAAgB,EAAEG,IAAI,CAAE1b,SAAS,IAAKA,SAAS,CAAC2b,KAAK,EAAE,CAAC;;MAErE,CAAC;MAAA,iBAAAC,EAAA;QAAA,OAAAJ,IAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EACV;EAEQV,kCAAkCA,CAAA;IACtClgB,gDAAkB,CAAC,CAAC,IAAI,CAACyf,KAAK,CAACoB,WAAW,EAAE,IAAI,CAAC5b,YAAY,CAAC6b,sBAAsB,EAAE,CAAC,CAAC,CACnF3c,IAAI,CACD3D,0DAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,EACzBvD,oDAAG,CAAC,CAAC,CAACugB,WAAW,EAAEE,iBAAiB,CAAC,MAAM;MACvCC,eAAe,EAAEH,WAAW,CAACG,eAAe;MAC5C,GAAGD;KACN,CAAC,CAAC,CACN,CACA3c,SAAS,CAAE+U,MAAM,IAAM,IAAI,CAACiE,0BAA0B,GAAGjE,MAAO,CAAC;EAC1E;EAEcoH,gBAAgBA,CAAA;IAAA,IAAA9a,MAAA;IAAA,OAAAZ,wLAAA;MAC1B,MAAMC,SAAS,SAASW,MAAI,CAAC1C,OAAO,CAACke,iBAAiB,CAAC;QACnDjb,KAAK,EAAE,gBAAgB;QACvBkb,eAAe,EAAEzb,MAAI,CAAC0b,oBAAoB;QAC1CC,QAAQ,EAAE,GAAG;QACbC,sBAAsB,EAAE5b,MAAI,CAAC6b;OAChC,CAAC;MACF7b,MAAI,CAACvC,UAAU,CAACqM,OAAO,CAACiJ,YAAY,CAC/BrU,IAAI,CACDqG,0DAAS,CAAE+E,OAAO,IAAK9J,MAAI,CAACrC,SAAS,CAACqD,GAAG,CAAC,uBAAuB,EAAE;QAAE8I;MAAO,CAAE,CAAC,CAAC,EAChF/O,0DAAS,CAACsE,SAAS,CAACI,WAAW,EAAE,CAAC,CACrC,CACAd,SAAS,CAAEmd,aAAa,IAAI;QACzBzc,SAAS,CAAC0c,WAAW,CAAC;UAAEC,QAAQ,EAAEF,aAAa,CAACG,QAAQ;QAAE,CAAE,CAAC;MACjE,CAAC,CAAC;MACN,OAAO5c,SAAS;IAAC;EACrB;EAEQ8a,iBAAiBA,CAAA;IACrB,OAAO,IAAI,CAACN,kBAAkB,CACzBqC,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAC/Bxd,IAAI,CAAC7D,oDAAG,CAAC,CAAC;MAAEshB;IAAO,CAAE,KAAKA,OAAO,CAAC,CAAC;EAC5C;EAEQ9B,WAAWA,CAAA;IACf,IAAI,CAACP,OAAO,CAACsC,gBAAgB,CAAC;MAC1B7b,KAAK,EAAE,cAAc;MACrB8b,YAAY,EAAE,QAAQ;MACtBC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAGvQ,KAAK,IAAK,IAAI,CAACvO,UAAU,CAACqM,OAAO,CAACiC,QAAQ,CAACC,KAAK;KAC9D,CAAC;IACF,MAAMwQ,sBAAsB,GAAwBjiB,gDAClC,CAAC,CAAC,IAAI,CAAC6F,qBAAqB,EAAE,IAAI,CAACxC,gBAAgB,CAACsD,YAAY,EAAE,CAAC,CAAC,CACjFxC,IAAI,CACD/D,uDAAM,CACF,CAAC,CAACyF,qBAAqB,EAAExC,gBAAgB,CAAC,KACtCzC,4DAAO,CAACiF,qBAAqB,CAAC,IAAIjF,4DAAO,CAACyC,gBAAgB,CAAC,CAClE,EACD/C,oDAAG,CACC,CAAC,CAACuF,qBAAqB,EAAExC,gBAAgB,CAAC,KACtCA,gBAAgB,KAAK3C,mEAAa,CAACwhB,eAAe,IAClDrc,qBAAqB,CAACC,IAAI,CAAEgK,CAAC,IAAKA,CAAC,CAAChO,EAAE,KAAKuB,gBAAgB,CAAC,CAACsP,UAAU,CAC9E,CACJ;IACLsP,sBAAsB,CAAC7d,SAAS,CAAEuN,MAAM,IACpC,IAAI,CAAC4N,OAAO,CAAC4C,kBAAkB,CAAC;MAC5BC,MAAM,EAAE;QAAE5I,OAAO,EAAE7H,MAAM;QAAE0Q,WAAW,EAAE;MAAI;KAC/C,CAAC,CACL;EACL;EAEAC,yBAAyBA,CAAA;IACrB,IAAI,IAAI,CAACpf,UAAU,CAACiM,eAAe,CAAC1P,KAAK,IAAI,GAAG,EAAE;MAC9C,IAAI,CAACkgB,oBAAoB,GAAG,KAAK;;EAEzC;EAEQK,4BAA4BA,CAAA;IAChC,IAAI,CAAC9c,UAAU,CAACiM,eAAe,CAC1BhL,IAAI,CAAC/D,uDAAM,CAAEwP,QAAQ,IAAKA,QAAQ,GAAG,GAAG,CAAC,CAAC,CAC1CxL,SAAS,CAAC,MAAO,IAAI,CAACub,oBAAoB,GAAG,IAAK,CAAC;EAC5D;EAAC,QAAA7gB,CAAA;qBA7JQ4c,mBAAmB,EAAA3c,gEAAA,CAAAa,kGAAA,GAAAb,gEAAA,CAAA0J,oEAAA,GAAA1J,gEAAA,CAAA4J,6EAAA,GAAA5J,gEAAA,CAAA8J,6EAAA,GAAA9J,gEAAA,CAAAiK,sEAAA,GAAAjK,gEAAA,CAAAqY,4DAAA,GAAArY,gEAAA,CAAA6jB,mEAAA,GAAA7jB,gEAAA,CAAA8jB,kEAAA;EAAA;EAAA,QAAA3jB,EAAA;UAAnBwc,mBAAmB;IAAAxS,SAAA;IAAAC,SAAA,WAAA2Z,0BAAAzZ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;iFATjB,CAACP,mEAAiB,CAAC;IAAAmH,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA2S,6BAAA1Z,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC3BlCtK,6DAAA,YAAwC;QAAAA,qDAAA,GAAgC;;QAAAA,2DAAA,EAAK;QAE7EA,6DAAA,0BAWC;QAPCA,yDAAA,0BAAAikB,sEAAA;UAAA,OAAgB1Z,GAAA,CAAAgZ,yBAAA,EAA2B;QAAA,EAAC;;QAO7CvjB,2DAAA,EAAmB;QAEpBA,yDAAA,IAAAkkB,2CAAA,0BA4Be;QAGflkB,yDAAA,IAAAmkB,2CAAA,0BAEe;QAEfnkB,yDAAA,IAAAokB,0CAAA,kCAAApkB,qEAAA,CAoCc;QAEdA,yDAAA,IAAAqkB,0CAAA,gCAAArkB,qEAAA,CAEc;QAEdA,yDAAA,KAAAskB,2CAAA,gCAAAtkB,qEAAA,CASc;;;QArG0BA,wDAAA,GAAgC;QAAhCA,gEAAA,CAAAA,0DAAA,uBAAgC;QAItEA,wDAAA,GAA0D;QAA1DA,yDAAA,UAAAuK,GAAA,CAAAqW,oBAAA,GAAArW,GAAA,CAAA6F,eAAA,CAAA1P,KAAA,KAA0D,aAAA6J,GAAA,CAAAqW,oBAAA;QAG1D5gB,0DAAA,eAAAuK,GAAA,CAAAqW,oBAAA,GAAA5gB,0DAAA,iCAAAA,8DAAA,KAAA8P,GAAA,EAAAvF,GAAA,CAAAqW,oBAAA,GAAArW,GAAA,CAAA6F,eAAA,CAAA1P,KAAA,YAKC;QAGYV,wDAAA,GAAqB;QAArBA,yDAAA,SAAAuK,GAAA,CAAAoW,eAAA,CAAqB;QA+BrB3gB,wDAAA,GAA+B;QAA/BA,yDAAA,SAAAuK,GAAA,CAAAoW,eAAA,WAA+B;;;;;;iBDlB9B,CACR1C,6DAAO,CAAC,SAAS,EAAE,CACfrS,2DAAK,CAAC,SAAS,EAAEmS,2DAAK,CAAC;QAAEyG,OAAO,EAAE;MAAC,CAAE,CAAC,CAAC,EACvC5Y,2DAAK,CAAC,QAAQ,EAAEmS,2DAAK,CAAC;QAAEyG,OAAO,EAAE;MAAC,CAAE,CAAC,CAAC,EACtCxG,gEAAU,CAAC,mBAAmB,EAAE,CAACF,6DAAO,CAACI,4DAAW,CAACuG,qBAAqB,CAAC,CAAC,CAAC,CAChF,CAAC;IACL;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEjCqD;AACA;AACE;AACsB;AACE;AACP;AACN;AACM;AACf;AACN;;AAelD,MAAOI,gBAAgB;EAAA,QAAA9kB,CAAA;qBAAhB8kB,gBAAgB;EAAA;EAAA,QAAA1kB,EAAA;UAAhB0kB;EAAgB;EAAA,QAAA5H,EAAA;cAJfD,gFAAuB,EAAE2H,+DAAY,EAAEC,mEAAkB,EAAEF,+DAAS;EAAA;;;sHAIrEG,gBAAgB;IAAAC,YAAA,GAXrBnI,uEAAmB,EACnBW,sFAA0B,EAC1BxZ,2FAA4B,EAC5BvD,qEAAkB,EAClB6W,sFAA0B,EAC1BpH,6FAA6B;IAAAmN,OAAA,GAEvBH,gFAAuB,EAAE2H,+DAAY,EAAEC,mEAAkB,EAAEF,+DAAS;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVrD;AACA;AAC+B;AACkC;AACtB;AAC4B;AACvB;;;;;;;;AAWvE,MAAOpL,mBAAmB;EAC5B5Z,YACoB+D,UAAkB,EAClB+C,WAAmB,EACnB/B,aAA0C,EAC1CyB,YAAoB;IAHpB,KAAAzC,UAAU,GAAVA,UAAU;IACV,KAAA+C,WAAW,GAAXA,WAAW;IACX,KAAA/B,aAAa,GAAbA,aAAa;IACb,KAAAyB,YAAY,GAAZA,YAAY;EAC7B;EAEHgU,MAAMA,CAACiL,KAA0B;IAC7B,OAAO5f,IAAI,CAACE,SAAS,CAAC,IAAI,CAAC,KAAKF,IAAI,CAACE,SAAS,CAAC0f,KAAK,CAAC;EACzD;;AASE,MAAOpb,iBAAiB;EAwB1B,IAAIyG,OAAOA,CAAA;IACP,OAAO,IAAI,CAACN,QAAQ,CAACxP,KAAK;EAC9B;EACA,IAAI8P,OAAOA,CAAC9P,KAAwB;IAChC,IAAI,CAACwP,QAAQ,CAACpQ,IAAI,CAACY,KAAK,CAAC;EAC7B;EAIAhB,YACY2O,UAA6B,EAC7B+W,MAAqB,EACrBC,cAA8B,EAC9B9K,GAAe,EACfkG,mBAAwC,EACxC6E,OAAuB,EACvB5E,KAAqB,EACrB6E,MAAc,EACdC,WAA+B,EAC/BC,oBAAiD;IATjD,KAAApX,UAAU,GAAVA,UAAU;IACV,KAAA+W,MAAM,GAANA,MAAM;IACN,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAA9K,GAAG,GAAHA,GAAG;IACH,KAAAkG,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAA6E,OAAO,GAAPA,OAAO;IACP,KAAA5E,KAAK,GAALA,KAAK;IACL,KAAA6E,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,oBAAoB,GAApBA,oBAAoB;IA1CvB,KAAA3e,qBAAqB,GAAG,IAAItH,iDAAe,CAAe,IAAI,CAAC;IAC/D,KAAA8E,gBAAgB,GAAG,IAAI,CAACmhB,oBAAoB,CAACC,YAAY,EAAE;IAC3D,KAAAjV,sBAAsB,GAAG,IAAIjR,iDAAe,CAAU,IAAI,CAAC;IAC3D,KAAA8D,qBAAqB,GAAG,IAAI9D,iDAAe,CAAoB,IAAI,CAAC;IACpE,KAAA+E,iBAAiB,GAAG,IAAI,CAACkhB,oBAAoB,CAACC,YAAY,EAAE;IAC5D,KAAAzN,kBAAkB,GAAG,IAAI,CAACwN,oBAAoB,CAACE,aAAa,CAAC,KAAK,CAAC;IACnE,KAAAlhB,aAAa,GAAG,IAAI,CAACghB,oBAAoB,CAACG,UAAU,EAAE;IACtD,KAAA1f,YAAY,GAAG,IAAI,CAACuf,oBAAoB,CAACC,YAAY,EAAE;IACvD,KAAAtV,eAAe,GAAG,IAAI5Q,iDAAe,CAAS,IAAI,CAAC;IACnD,KAAAkF,KAAK,GAAG,IAAIlF,iDAAe,CAAiB,IAAI,CAAC;IACjD,KAAAuQ,mBAAmB,GAAG,IAAIvQ,iDAAe,CAAsB,IAAI,CAAC;IACpE,KAAAkJ,iBAAiB,GAA8B,IAAIlJ,iDAAe,CAAC,IAAI,CAAC;IACjF;;;;;;;;;IASS,KAAAsJ,aAAa,GAAG,IAAItJ,iDAAe,CAAW,IAAI,CAAC;IACpD,KAAA0Q,QAAQ,GAAG,IAAI1Q,iDAAe,CAAoB,IAAI,CAAC;IAQ9C,KAAAsF,SAAS,GAAG,IAAI5D,yCAAO,EAAQ;EAa7C;EAEHyE,WAAWA,CAAA;IACP,IAAI,CAACb,SAAS,CAAChF,IAAI,EAAE;IACrB,IAAI,CAACgF,SAAS,CAACc,QAAQ,EAAE;EAC7B;EAEA;EACAkb,IAAIA,CAAA;IACA,IAAI,CAAC+E,aAAa,EAAE;IACpB,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,uBAAuB,EAAE;IAC9B,IAAI,CAACC,uBAAuB,EAAE;EAClC;EAEA;;;;;;EAMAC,mBAAmBA,CAAA;IACf,IAAI,CAACN,aAAa,EAAE;IACpB,MAAMO,mBAAmB,GAAG,IAAI,CAACN,mBAAmB,CAAC;MAAEO,oBAAoB,EAAE;IAAK,CAAE,CAAC;IACrF,IAAI,CAACL,eAAe,EAAE;IACtBI,mBAAmB,CAAC3D,WAAW,CAAC;MAAE6D,iBAAiB,EAAE;IAAK,CAAE,CAAC;IAC7D;IACArlB,uCAAU,CACNmlB,mBAAmB,CAACG,iBAAiB,EAAE,CAACnhB,IAAI;IACxC;IACA/D,sDAAM,CAAC,CAAC;MAAEmlB;IAAO,CAAE,KAAK,CAACA,OAAO,CAAC,CACpC,EACDJ,mBAAmB,CAACK,qBAAqB,EAAE,CAC9C,CAACphB,SAAS,CAAC,MAAK;MACb,IAAI,CAACob,mBAAmB,CAACW,kBAAkB,CAAC;QACxCV,KAAK,EAAE,CAACvC,iEAAW,CAACkD,aAAa,EAAE,QAAQ;OAC9C,CAAC;IACN,CAAC,CAAC;EACN;EAEQwE,aAAaA,CAAA;IACjB,IAAI,CAACa,oBAAoB,EAAE;IAC3B,IAAI,CAACC,6BAA6B,EAAE;IACpC,IAAI,CAACC,yBAAyB,EAAE;EACpC;EAEQb,gBAAgBA,CAAA;IACpB,IAAI,CAACc,uBAAuB,EAAE;EAClC;EAEQb,eAAeA,CAAA;IACnB,IAAI,CAAC1hB,gBAAgB,CAACwiB,sBAAsB,CAAC,MAAM,EAAE,IAAI,CAACpG,KAAK,CAAC;IAChE,IAAI,CAACnc,iBAAiB,CAACuiB,sBAAsB,CAAC,KAAK,EAAE,IAAI,CAACpG,KAAK,CAAC;IAChE,IAAI,CAACjc,aAAa,CAACqiB,sBAAsB,CAAC,SAAS,EAAE,IAAI,CAACpG,KAAK,CAAC;IAChE,IAAI,CAACxa,YAAY,CAAC4gB,sBAAsB,CAAC,GAAG,EAAE,IAAI,CAACpG,KAAK,CAAC;IACzD,IAAI,CAACzI,kBAAkB,CAAC8O,sBAAsB,CAAC,wBAAwB,CAAC;IACxE,IAAI,CAACrG,KAAK,CAACoB,WAAW,CAAC1c,IAAI,CAAC7D,oDAAG,CAAE6Y,MAAM,IAAKA,MAAM,CAAC4M,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC3hB,SAAS,CAAC,IAAI,CAACX,KAAK,CAAC;EAC7F;EAEQgiB,oBAAoBA,CAAA;IACxBzlB,gDAAkB,CAAC,CAAC,IAAI,CAACqkB,OAAO,CAAC2B,eAAe,EAAE,EAAE,IAAI,CAAC7B,MAAM,CAAC8B,aAAa,EAAE,CAAC,CAAC,CAAC7hB,SAAS,CACvF,CAAC,CAACyN,YAAY,EAAEsS,MAAM,CAAC,KACnB,IAAI,CAACte,qBAAqB,CAAChH,IAAI,CAACqnB,kBAAkB,CAACrU,YAAY,EAAEsS,MAAM,CAAC,CAAC,CAChF;IACD,IAAI,CAACte,qBAAqB,CAAC1B,IAAI,CAAC/D,sDAAM,CAACQ,wDAAO,CAAC,CAAC,CAACwD,SAAS,CAAEyB,qBAAqB,IAAI;MACjF,IAAI,CAACxC,gBAAgB,CAAC8E,cAAc,CAACtC,qBAAqB,CAAC,CAAC,CAAC,CAAC/D,EAAE,CAAC;MACjE,IAAI,CAAC+D,qBAAqB,CAACsgB,IAAI,CAAC,CAAC;QAAErkB;MAAE,CAAE,KAAKA,EAAE,KAAK,IAAI,CAACuB,gBAAgB,CAACE,QAAQ,EAAE,CAAC,EAAE;QAClF,IAAI,CAACF,gBAAgB,CAAC+iB,cAAc,EAAE;;IAE9C,CAAC,CAAC;EACN;EAEQpB,uBAAuBA,CAAA;IAC3B,IAAI,CAACxV,sBAAsB,CAACpL,SAAS,CAAEoL,sBAAsB,IAAI;MAC7D,IAAIA,sBAAsB,EAAE;QACxB,IAAI,CAACnM,gBAAgB,CAACuD,gBAAgB,CAAC,IAAI,CAAC;QAC5C,IAAI,CAACoQ,kBAAkB,CAACoP,cAAc,EAAE;OAC3C,MAAM;QACH,IAAI,CAAC/iB,gBAAgB,CAAC+E,kBAAkB,EAAE;;IAElD,CAAC,CAAC;EACN;EAEQsd,6BAA6BA,CAAA;IACjC,IAAI,CAACriB,gBAAgB,CAChBsD,YAAY,EAAE,CACdxC,IAAI,CACD/D,sDAAM,CAACQ,wDAAO,CAAC,EACfH,oDAAG,CAAC,MAAM,IAAI,CAAC4B,qBAAqB,CAACxD,IAAI,CAAC,IAAI,CAAC,CAAC,EAChD2L,0DAAS,CAAEnH,gBAAgB,IACvB,IAAI,CAACwC,qBAAqB,CAAC1B,IAAI,CAC3B/D,sDAAM,CAACQ,wDAAO,CAAC,EACfN,oDAAG,CAAEuR,YAAY,IAAKA,YAAY,CAAC/L,IAAI,CAAEgK,CAAC,IAAKA,CAAC,CAAChO,EAAE,KAAKuB,gBAAgB,CAAC,CAAC,CAC7E,CACJ,EACDmH,0DAAS,CAAEhI,UAAU,IAAK,IAAI,CAACoQ,wBAAwB,CAACpQ,UAAU,CAAC,CAAC,CACvE,CACA4B,SAAS,CAAE/B,qBAAqB,IAC7B,IAAI,CAACA,qBAAqB,CAACxD,IAAI,CAACwD,qBAAqB,CAAC,CACzD;EACT;EAEAuQ,wBAAwBA,CAACpQ,UAAsB;IAC3C,OAAOxC,gDACW,CAAC,CACX,IAAI,CAACsZ,GAAG,CAAC1G,wBAAwB,CAACpQ,UAAU,CAACV,EAAE,CAAC,EAChD,IAAI,CAACqiB,MAAM,CAAC8B,aAAa,EAAE,CAC9B,CAAC,CACD9hB,IAAI,CACD7D,oDAAG,CAAC,CAAC,CAAC+B,qBAAqB,EAAE8hB,MAAM,CAAC,KAChCkC,kBAAkB,CAAChkB,qBAAqB,EAAE8hB,MAAM,EAAE3hB,UAAU,CAAC,CAChE,CACJ;EACT;EAEQmjB,yBAAyBA,CAAA;IAC7B,IAAI,CAACtjB,qBAAqB,CAAC+B,SAAS,CAAE/B,qBAAqB,IAAI;MAC3D,IAAI,CAACA,qBAAqB,EAAE;QACxB,IAAI,CAACiB,iBAAiB,CAACsD,gBAAgB,CAAC,IAAI,CAAC;OAChD,MAAM;QACH,IAAI,CAACtD,iBAAiB,CAAC8E,kBAAkB,EAAE;;MAE/C,IAAI,CAAC9E,iBAAiB,CAAC6E,cAAc,CAAC9F,qBAAqB,GAAG,CAAC,CAAC,EAAEP,EAAE,CAAC;MACrE,IACIO,qBAAqB,IACrB,CAACA,qBAAqB,CAAC8jB,IAAI,CAAE7M,GAAG,IAAKA,GAAG,CAACxX,EAAE,KAAK,IAAI,CAACwB,iBAAiB,CAACC,QAAQ,EAAE,CAAC,EACpF;QACE,IAAI,CAACD,iBAAiB,CAAC8iB,cAAc,EAAE;;IAE/C,CAAC,CAAC;EACN;EAEQvB,mBAAmBA,CAAC;IAAEO,oBAAoB,GAAG;EAAI,CAAE,GAAG,EAAE;IAC5D,MAAMD,mBAAmB,GAAG,IAAI,CAACZ,WAAW,CAAC+B,MAAM,CAC/C;MACIC,WAAW,EAAE,qBAAqB;MAClCC,SAAS,EAAEpB;KACd,EACD,IAAI,CAACvhB,SAAS,CACjB;IACD,IAAI,CAAC2L,sBAAsB,CAACpL,SAAS,CAAEoL,sBAAsB,IAAI;MAC7D2V,mBAAmB,CAAC3D,WAAW,CAAC;QAC5B6D,iBAAiB,EAAE,CAAC7V,sBAAsB;QAC1CiX,2BAA2B,EAAE,CAACjX;OACjC,CAAC;IACN,CAAC,CAAC;IACF2V,mBAAmB,CACduB,sBAAsB,EAAE,CACxBtiB,SAAS,CAAC,MACP,IAAI,CAAC4S,kBAAkB,CAAC1R,YAAY,CAAC,CAAC,IAAI,CAAC0R,kBAAkB,CAACzT,QAAQ,EAAE,CAAC,CAC5E;IACL4hB,mBAAmB,CACdG,iBAAiB,EAAE,CACnBlhB,SAAS,CAAC,CAAC;MAAEa;IAAY,CAAE,KAAK,IAAI,CAACA,YAAY,CAACK,YAAY,CAACL,YAAY,IAAI,IAAI,CAAC,CAAC;IAC1F,IAAI,CAACA,YAAY,CACZf,gBAAgB,EAAE,CAClBE,SAAS,CAAEa,YAAY,IAAKkgB,mBAAmB,CAACwB,eAAe,CAAC1hB,YAAY,CAAC,CAAC;IACnFjF,gDAAkB,CAAC,CACf,IAAI,CAACqD,gBAAgB,CAACsD,YAAY,EAAE,EACpC,IAAI,CAACrD,iBAAiB,CAACqD,YAAY,EAAE,CACxC,CAAC,CACGxC,IAAI,CACD3D,0DAAS,CAAC,IAAI,CAACqD,SAAS,CAAC,EACzBzD,sDAAM,CAAC,CAAC,CAACoC,UAAU,EAAE+C,WAAW,CAAC,KAAK3E,4DAAO,CAAC4B,UAAU,CAAC,IAAI5B,4DAAO,CAAC2E,WAAW,CAAC,CAAC,EAClFjF,oDAAG,CAAC,CAAC,CAACkC,UAAU,EAAE+C,WAAW,CAAC,MAAM;MAAE/C,UAAU;MAAE+C;IAAW,CAAE,CAAC,CAAC,CACpE,CACAnB,SAAS,CAAEwiB,OAAO,IAAKzB,mBAAmB,CAAC0B,UAAU,CAACD,OAAO,CAAC,CAAC;IACpEzB,mBAAmB,CAACK,qBAAqB,EAAE,CAACphB,SAAS,CAAE0iB,YAAY,IAAI;MACnE;MACA,IAAI,CAACtjB,aAAa,CAAC8B,YAAY,CAACwhB,YAAY,CAAC;IACjD,CAAC,CAAC;IACF,IAAI,CAACtjB,aAAa,CAACU,gBAAgB,EAAE,CAACE,SAAS,CAAEZ,aAAa,IAAI;MAC9D;MACA2hB,mBAAmB,CAAC4B,eAAe,CAACvjB,aAAa,CAAC;MAClD;MACA2hB,mBAAmB,CAACwB,eAAe,CAAC,IAAI,CAAC1hB,YAAY,CAAC1B,QAAQ,EAAE,CAAC;IACrE,CAAC,CAAC;IACF,OAAO4hB,mBAAmB;EAC9B;EAEQS,uBAAuBA,CAAA;IAC3B,IAAI,CAAC3W,QAAQ,CACR9K,IAAI,CACD/D,sDAAM,CAACQ,wDAAO,CAAC,EACf4J,0DAAS,CAAE+E,OAAO,IAAKA,OAAO,CAACJ,eAAe,CAAC,CAClD,CACA/K,SAAS,CAAC,IAAI,CAAC+K,eAAe,CAAC;EACxC;EAEQ8V,uBAAuBA,CAAA;IAC3B,IAAI,CAACxF,KAAK,CAACuH,aAAa,CACnB7iB,IAAI,CACD7D,oDAAG,CAAE0mB,aAAa,IAAKA,aAAa,CAACvgB,GAAG,CAAC,iBAAiB,CAAC,CAAC,EAC5DkK,qEAAoB,EAAE,EACtBnG,0DAAS,CAAEyc,YAAY,IACnBA,YAAY,GAAG,IAAI,CAAC7Z,UAAU,CAAC8Z,aAAa,CAACD,YAAY,CAAC,GAAGjnB,qCAAO,CAAC,IAAI,CAAC,CAC7E,CACJ,CACAoE,SAAS,CAAEgJ,UAAU,IAAI;MACtB,IAAIA,UAAU,EAAE;QACZ,IAAI,CAAC0B,mBAAmB,CAACjQ,IAAI,CAAC;UAC1BuO,UAAU;UACVG,aAAa,EAAE,IAAI,CAAC4Z,yBAAyB,CAAC/Z,UAAU;SAC3D,CAAC;OACL,MAAM;QACH,IAAI,CAAC0B,mBAAmB,CAACjQ,IAAI,CAAC,IAAI,CAAC;;IAE3C,CAAC,CAAC;EACV;EAEQsoB,yBAAyBA,CAAC/Z,UAAgB;IAC9C,MAAMga,KAAK,GAAG,IAAIpD,2DAAU,CAAC,kCAAkC,EAAE,QAAQ,EAAE,CAACllB,CAAC,EAAE2S,KAAK,KAAI;MACpF,IAAI,CAAC2S,cAAc,CAACiD,UAAU,EAAE,CAACC,mBAAmB,CAACla,UAAU,EAAEqE,KAAK,EAAE,IAAI,EAAE,MAC1E,IAAI,CAAC6S,MAAM,CAACiD,QAAQ,CAAC,CAACrK,iEAAW,CAACkD,aAAa,GAAG,aAAa,CAAC,EAAE;QAC9DS,WAAW,EAAE;UAAE/e,EAAE,EAAEsL,UAAU,CAACoa,GAAG,CAAC1lB;QAAE;OACvC,CAAC,CACL;IACL,CAAC,CAAC;IACFslB,KAAK,CAACK,WAAW,GAAGxD,kFAAoB,CAACyD,2BAA2B;IACpEN,KAAK,CAACO,KAAK,GAAG7D,8DAAa,CAAC8D,KAAK;IACjCR,KAAK,CAACS,UAAU,GAAG,IAAI;IACvB,MAAMC,MAAM,GAAG,IAAI9D,2DAAU,CAAC,QAAQ,EAAE,OAAO,EAAE,MAC7C,IAAI,CAACM,MAAM,CAACiD,QAAQ,CAAC,CAACrK,iEAAW,CAACkD,aAAa,EAAE,aAAa,CAAC,EAAE;MAC7DS,WAAW,EAAE;QAAE/e,EAAE,EAAEsL,UAAU,CAACoa,GAAG,CAAC1lB;MAAE;KACvC,CAAC,CACL;IACDgmB,MAAM,CAACH,KAAK,GAAG7D,8DAAa,CAACiE,MAAM;IACnCD,MAAM,CAACL,WAAW,GAAG,CAAC1D,4DAAW,CAACiE,OAAO,CAAC;IAC1C,OAAO;MACHC,iBAAiB,EAAE,KAAK;MACxBza,UAAU,EAAE,CAACsa,MAAM,EAAEV,KAAK;KAC7B;EACL;EAAC,QAAAtoB,CAAA;qBAtRQgK,iBAAiB,EAAA/J,uDAAA,CAAAa,mEAAA,GAAAb,uDAAA,CAAAa,+DAAA,GAAAb,uDAAA,CAAA0J,6EAAA,GAAA1J,uDAAA,CAAAa,4DAAA,GAAAb,uDAAA,CAAA4J,sEAAA,GAAA5J,uDAAA,CAAAa,gEAAA,GAAAb,uDAAA,CAAA8J,4DAAA,GAAA9J,uDAAA,CAAA8J,oDAAA,GAAA9J,uDAAA,CAAAiK,kGAAA,GAAAjK,uDAAA,CAAAqY,gFAAA;EAAA;EAAA,QAAAlY,EAAA;WAAjB4J,iBAAiB;IAAA3J,OAAA,EAAjB2J,iBAAiB,CAAA1J;EAAA;;AAyR9B,SAAS8mB,kBAAkBA,CAACrU,YAA0B,EAAEsS,MAAoB;EACxE,MAAMoE,mBAAmB,GAAGpE,MAAM,CAACte,qBAAqB;EACxD,IAAI0iB,mBAAmB,EAAE;IACrB,OAAO1W,YAAY,CAACzR,MAAM,CACrBwF,IAAI,IACAA,IAAI,CAAC+M,UAAU,IAAIwR,MAAM,CAACte,qBAAqB,CAAC2iB,QAAQ,CAACtG,iEAAe,CAAC,IAC1EiC,MAAM,CAACte,qBAAqB,CAAC2iB,QAAQ,CAAC5iB,IAAI,CAAC9D,EAAE,CAAC,CACrD;GACJ,MAAM;IACH,OAAO+P,YAAY;;AAE3B;AAEA,SAASwU,kBAAkBA,CACvBoC,YAA+B,EAC/BtE,MAAoB,EACpB3hB,UAAsB;EAEtB,MAAMkmB,mBAAmB,GAAGvE,MAAM,CAACwE,YAAY,EAAE7iB,IAAI,CAChD8iB,SAAS,IACNA,SAAS,CAACpmB,UAAU,KAAKA,UAAU,CAACV,EAAE,IACrC8mB,SAAS,CAACpmB,UAAU,KAAK0f,iEAAe,IAAI1f,UAAU,CAACmQ,UAAW,CAC1E,EAAE2G,GAAG;EACN,IAAIoP,mBAAmB,EAAE;IACrB,OAAOD,YAAY,CAACroB,MAAM,CAAEkZ,GAAG,IAAKoP,mBAAmB,CAACF,QAAQ,CAAClP,GAAG,CAACxX,EAAE,CAAC,CAAC;GAC5E,MAAM;IACH,OAAO2mB,YAAY;;AAE3B","sources":["./src/app/pages/search-page/global-search-page.service.ts","./src/app/pages/search-page/repository-icon.pipe.ts","./src/app/pages/search-page/search-page-filter-bar.component.ts","./src/app/pages/search-page/search-page-filter-bar.component.html","./src/app/pages/search-page/search-page-restore.service.ts","./src/app/pages/search-page/search-page-results-all.component.ts","./src/app/pages/search-page/search-page-results-all.component.html","./src/app/pages/search-page/search-page-results-all.service.ts","./src/app/pages/search-page/search-page-results.component.ts","./src/app/pages/search-page/search-page-results.component.html","./src/app/pages/search-page/search-page-results.service.ts","./src/app/pages/search-page/search-page-routing.module.ts","./src/app/pages/search-page/search-page-toolbar.component.ts","./src/app/pages/search-page/search-page-toolbar.component.html","./src/app/pages/search-page/search-page.component.ts","./src/app/pages/search-page/search-page.component.html","./src/app/pages/search-page/search-page.module.ts","./src/app/pages/search-page/search-page.service.ts"],"sourcesContent":["import { Injectable, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Custom templates to replace or extend standard components within the search page.\n */\nexport interface SearchPageCustomTemplates {\n    resultsTop?: TemplateRef<unknown>;\n    filterBarBottom?: TemplateRef<unknown>;\n}\n\n/**\n * Singleton service for public interfacing with the search page.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class GlobalSearchPageService {\n    constructor(private internal: GlobalSearchPageServiceInternal) {}\n\n    /**\n     * Register custom templates to replace or extend standard components within the search page.\n     */\n    setCustomTemplates(customTemplates: SearchPageCustomTemplates): void {\n        this.internal.customTemplates.next(customTemplates);\n    }\n}\n\n/**\n * Internal part of the `GlobalSearchPageService` for use within the search page component and\n * services only.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class GlobalSearchPageServiceInternal {\n    readonly customTemplates = new BehaviorSubject<SearchPageCustomTemplates>({});\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Repository } from '../../core-module/core.module';\nimport { NodeHelperService } from '../../services/node-helper.service';\n\n@Pipe({\n    name: 'repositoryIcon',\n})\nexport class RepositoryIconPipe implements PipeTransform {\n    constructor(private nodeHelper: NodeHelperService) {}\n\n    transform(value: Repository): string {\n        return this.nodeHelper.getSourceIconRepoPath(value);\n    }\n}\n","import { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthenticationService, SavedSearch, SearchService } from 'ngx-edu-sharing-api';\nimport * as rxjs from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { debounceTime, delay, filter, first, map, skip, takeUntil, tap } from 'rxjs/operators';\nimport { RestConstants } from '../../core-module/core.module';\nimport { DialogsService } from '../../features/dialogs/dialogs.service';\nimport { MdsEditorWrapperComponent } from '../../features/mds/mds-editor/mds-editor-wrapper/mds-editor-wrapper.component';\nimport { Values } from '../../features/mds/types/types';\nimport { notNull } from 'ngx-edu-sharing-ui';\nimport { GlobalSearchPageServiceInternal } from './global-search-page.service';\nimport { SearchPageService } from './search-page.service';\n\n@Component({\n    selector: 'es-search-page-filter-bar',\n    templateUrl: './search-page-filter-bar.component.html',\n    styleUrls: ['./search-page-filter-bar.component.scss'],\n})\nexport class SearchPageFilterBarComponent implements OnInit, OnDestroy {\n    @ViewChild(MdsEditorWrapperComponent) mdsEditor: MdsEditorWrapperComponent;\n\n    readonly activeRepository = this.searchPage.activeRepository;\n    readonly availableMetadataSets = this.searchPage.availableMetadataSets;\n    readonly activeMetadataSet = this.searchPage.activeMetadataSet;\n    readonly activeMdsForm = new UntypedFormControl(this.activeMetadataSet.getValue());\n    readonly searchFilters = this.searchPage.searchFilters;\n    readonly reUrl = this.searchPage.reUrl;\n    readonly customTemplates = this.globalSearchPageInternal.customTemplates;\n    /** Deep copy of `searchFilters.userValue` for immutability. */\n    searchFilterValues: Values;\n    mdsParams: { repository: string; setId: string } = null;\n    savedSearchesButtonIsVisible = false;\n    mdsExternalFilters: Values;\n\n    private mdsInitialized = false;\n    private defaultValues: Values;\n    private causedValueChange = false;\n    private destroyed = new Subject<void>();\n\n    constructor(\n        private authentication: AuthenticationService,\n        private dialogs: DialogsService,\n        private globalSearchPageInternal: GlobalSearchPageServiceInternal,\n        private ngZone: NgZone,\n        private searchPage: SearchPageService,\n        private searchService: SearchService,\n        private translate: TranslateService,\n    ) {}\n\n    ngOnInit(): void {\n        this.registerSearchFilterOverride();\n        this.activeMetadataSet.registerFormControl(this.activeMdsForm);\n        this.registerMdsEditor();\n        this.searchFilters\n            .observeUserValue()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((values) => {\n                this.searchFilterValues = JSON.parse(JSON.stringify(values ?? {}));\n            });\n        this.registerSavedSearches();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    async openSavedSearchesDialog(): Promise<void> {\n        const dialogRef = await this.dialogs.openSavedSearchesDialog({\n            saveSearchData: {\n                name: await this.getSavedSearchInitialName(),\n                searchString: this.searchPage.searchString.getValue(),\n            },\n            reUrl: this.reUrl.value || null,\n        });\n        dialogRef.afterClosed().subscribe((selectedSavedSearch) => {\n            if (selectedSavedSearch) {\n                this.applySavedSearch(selectedSavedSearch);\n            }\n        });\n    }\n\n    private applySavedSearch(savedSearch: SavedSearch): void {\n        this.searchPage.activeRepository.setUserValue(savedSearch.repository);\n        this.searchPage.activeMetadataSet.setUserValue(savedSearch.metadataSet);\n        this.searchPage.searchString.setUserValue(savedSearch.searchString);\n        this.searchPage.searchFilters.setUserValue(savedSearch.filters);\n    }\n\n    private async getSavedSearchInitialName(): Promise<string> {\n        let components: string[] = [];\n        if (this.activeRepository.getUserValue()) {\n            const repo = this.searchPage.availableRepositories.value.find(\n                ({ id }) => id === this.activeRepository.getUserValue(),\n            );\n            if (repo) {\n                components.push(repo.title);\n            }\n        }\n        if (this.searchPage.searchString.getValue()) {\n            components.push(`\"${this.searchPage.searchString.getValue()}\"`);\n        }\n        const filters = await this.searchService.getFilters().toPromise();\n        const filterLabels = Object.values(filters)\n            .flat()\n            .map(({ label }) => label);\n        components = [...components, ...filterLabels];\n        if (components.length > 0) {\n            return components.join(' - ');\n        } else {\n            return this.translate.get('SEARCH.SAVE_SEARCH.ALL_ITEMS').toPromise();\n        }\n    }\n\n    /**\n     * Overrides the search-filter value with null when the active repository or metadata set\n     * changes.\n     *\n     * We do this to inhibit search requests until the mds editor is ready. We unset the override\n     * when it is. There are two reasons for this:\n     * 1. The mds editor might have default values we need to include in the search request.\n     * 2. The mds editor might request facets that will be fetched with the search request and need\n     *    to be registered before the search request is fired to be considered.\n     */\n    private registerSearchFilterOverride(): void {\n        rxjs.merge(this.activeRepository.observeValue(), this.activeMetadataSet.observeValue())\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this.searchFilters.setOverrideValue(null);\n            });\n    }\n\n    private registerMdsEditor(): void {\n        rxjs.forkJoin([\n            this.activeRepository.observeValue().pipe(first(notNull)),\n            this.activeMetadataSet.observeValue().pipe(first(notNull)),\n        ])\n            .pipe(\n                tap(([repository, setId]) => (this.mdsParams = { repository, setId })),\n                delay(0),\n                takeUntil(this.destroyed),\n            )\n            .subscribe(() => this.initMdsEditor());\n        this.searchPage.searchString\n            .observeValue()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((searchString) => {\n                if (searchString) {\n                    this.mdsExternalFilters = {\n                        [RestConstants.PRIMARY_SEARCH_CRITERIA]: [searchString],\n                    };\n                } else {\n                    this.mdsExternalFilters = null;\n                }\n            });\n    }\n\n    private registerSavedSearches(): void {\n        this.authentication\n            .observeLoginInfo()\n            .pipe(\n                takeUntil(this.destroyed),\n                map((loginInfo) => loginInfo && !loginInfo.isGuest),\n            )\n            .subscribe((value) => (this.savedSearchesButtonIsVisible = value));\n    }\n\n    private initMdsEditor(): void {\n        this.mdsEditor.mdsEditorInstance.values\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((values) => this.onMdsValuesChange(values));\n        this.mdsEditor\n            .getInstanceService()\n            .widgets.pipe(takeUntil(this.destroyed))\n            .subscribe((mdsWidgets) => this.searchPage.filtersMdsWidgets.next(mdsWidgets));\n        rxjs.merge(\n            this.activeMetadataSet.observeValue().pipe(\n                filter(notNull),\n                skip(1),\n                // tap((mds) => console.log('active mds changed', mds)),\n            ),\n            this.activeRepository.observeValue().pipe(\n                filter(notNull),\n                skip(1),\n                // tap((repo) => console.log('active repo changed', repo)),\n            ),\n            this.searchFilters.observeValue().pipe(\n                filter(notNull),\n                skip(1),\n                filter(() => !this.causedValueChange),\n                // tap((filter) => console.log('search filters changed', filter)),\n            ),\n        )\n            .pipe(\n                takeUntil(this.destroyed),\n                debounceTime(0),\n                filter(() => notNull(this.activeMetadataSet.getValue())),\n            )\n            .subscribe(() => this.resetMds());\n        this.mdsEditor.mdsEditorInstance\n            .getNeededFacets()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((neededFacets) => this.searchPage.facetsToFetch.next(neededFacets));\n    }\n\n    // TODO: Provide this functionality in mds editor.\n    private onMdsValuesChange(values: Values): void {\n        values = JSON.parse(JSON.stringify(values));\n        this.causedValueChange = true;\n        if (this.mdsInitialized) {\n            const userValues = getUserValues(values, this.defaultValues);\n            // console.log('onMdsValuesChange', { values, userValues });\n            this.searchFilters.setUserValue(userValues);\n        } else {\n            this.mdsInitialized = true;\n            const userValues = stripValues(this.searchFilters.getUserValue() ?? {}, values);\n            const defaultValues = getDefaultValues(values, userValues);\n            // console.log('onMdsInitialValues', { values, defaultValues, userValues });\n            this.defaultValues = defaultValues;\n            this.searchFilters.setSystemValue(defaultValues);\n            this.searchFilters.setUserValue(userValues);\n            this.searchFilters.unsetOverrideValue();\n        }\n        this.ngZone.runOutsideAngular(() => setTimeout(() => (this.causedValueChange = false)));\n    }\n\n    private resetMds(): void {\n        this.mdsParams = {\n            repository: this.activeRepository.getValue(),\n            setId: this.activeMetadataSet.getValue(),\n        };\n        // console.log('resetMds', this.mdsParams);\n        this.mdsInitialized = false;\n        // Wait for search-filter values to propagate via data binding to the mds editor.\n        setTimeout(() => {\n            // TODO: This should work automatically when updating the mds editor's setId.\n            void this.mdsEditor.reInit();\n        });\n    }\n}\n\nfunction getUserValues(mergedValues: Values, defaultValues: Values): Values {\n    const userValues = {} as Values;\n    for (const [key, value] of Object.entries(mergedValues)) {\n        if (value.length > 0 && JSON.stringify(defaultValues[key]) !== JSON.stringify(value)) {\n            userValues[key] = value;\n        }\n    }\n    if (Object.keys(userValues).length > 0) {\n        return userValues;\n    } else {\n        return null;\n    }\n}\n\nfunction getDefaultValues(mergedValues: Values, userValues: Values): Values {\n    const defaultValues = {} as Values;\n    for (const [key, value] of Object.entries(mergedValues)) {\n        if (value.length > 0 && !userValues?.[key]) {\n            defaultValues[key] = value;\n        }\n    }\n    return defaultValues;\n}\n\nfunction stripValues(values: Values, availableValues: Values): Values {\n    const strippedValues = {} as Values;\n    for (const [key, value] of Object.entries(values)) {\n        if (key in availableValues) {\n            strippedValues[key] = value;\n        }\n    }\n    if (Object.keys(strippedValues).length > 0) {\n        return strippedValues;\n    } else {\n        return null;\n    }\n}\n\nfunction objectDifference(a: { [key: string]: any }, b: { [key: string]: any }) {\n    a = { ...a };\n    for (const key in Object.keys(b)) {\n        delete a[key];\n    }\n    return a;\n}\n","<button\n  *ngIf=\"savedSearchesButtonIsVisible\"\n  mat-stroked-button\n  color=\"primary\"\n  class=\"saved-searches-button\"\n  [matTooltip]=\"'SEARCH.SAVED_SEARCHES.TITLE' | translate\"\n  (click)=\"openSavedSearchesDialog()\"\n>\n  <i esIcon=\"bookmark_outline\"></i>\n  {{ 'SEARCH.SAVED_SEARCHES.TITLE' | translate }}\n</button>\n\n<mat-form-field appearance=\"fill\" *ngIf=\"(availableMetadataSets | async)?.length > 1\">\n  <mat-label>{{ 'SEARCH.METADATASET' | translate }}</mat-label>\n  <mat-select [formControl]=\"activeMdsForm\">\n    <mat-option *ngFor=\"let mds of availableMetadataSets | async\" [value]=\"mds.id\">\n      {{ mds.name }}\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n\n<es-mds-editor-wrapper\n  *ngIf=\"mdsParams\"\n  class=\"mds-editor\"\n  groupId=\"ngsearch\"\n  [repository]=\"mdsParams.repository\"\n  [setId]=\"mdsParams.setId\"\n  [embedded]=\"true\"\n  mode=\"search\"\n  [currentValues]=\"searchFilterValues\"\n  [externalFilters]=\"mdsExternalFilters\"\n>\n</es-mds-editor-wrapper>\n\n<ng-container *ngTemplateOutlet=\"customTemplates.value.filterBarBottom\"></ng-container>\n","import { ViewportScroller } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NavigationStart, Router, Scroll } from '@angular/router';\nimport * as rxjs from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { debounceTime, delay, filter, map, switchMap } from 'rxjs/operators';\nimport { NodeDataSourceRemote, NodeDataSourceRemoteState } from './node-data-source-remote';\nimport { notNull } from 'ngx-edu-sharing-ui';\n\nclass RestoreEntry {\n    /**\n     * The event's lifecycle state.\n     *\n     * - 'active': The entry represents the active page. State is being pushed into the entry.\n     * - 'restore': The browser has just navigated back to page represented by the entry. The entry is\n     *   ready to be restored.\n     */\n    state: 'active' | 'restore' = null;\n    navigationId: number;\n    scrollPosition: [number, number] | null = null;\n    dataSourceStates: { [key: string]: NodeDataSourceRemoteState } = {};\n\n    constructor(navigationId: number) {\n        this.navigationId = navigationId;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SearchPageRestoreService {\n    private readonly _entries: RestoreEntry[] = [];\n    private readonly _restoreScrollTrigger = new Subject<RestoreEntry>();\n\n    private _currentNavigationId = 1;\n\n    constructor(private _router: Router, private _viewportScroller: ViewportScroller) {\n        this._registerRouterEvents();\n        this._registerRestoreScrollTrigger();\n    }\n\n    registerDataSource(key: string, dataSource: NodeDataSourceRemote): void {\n        dataSource\n            .connect()\n            .pipe(\n                filter(() => !dataSource.isLoading),\n                debounceTime(0),\n            )\n            .subscribe(() => this._putState(key, dataSource.dumpState()));\n        dataSource.registerRestoreFunction(() => this._restoreState(key));\n    }\n\n    private _restoreState(key: string): NodeDataSourceRemoteState | null {\n        const entry = this._getRestoreEntry();\n        this._restoreScrollTrigger.next(entry);\n        return entry?.dataSourceStates[key] ?? null;\n    }\n\n    private _registerRestoreScrollTrigger(): void {\n        this._restoreScrollTrigger\n            .pipe(\n                filter(notNull),\n                debounceTime(0),\n                map(({ scrollPosition }) => scrollPosition),\n                filter(notNull),\n                // In case the page hasn't been populated yet, wait another tick before attempting\n                // to scroll.\n                switchMap((scrollPosition) => {\n                    if (\n                        document.documentElement.scrollHeight <\n                        window.innerHeight + scrollPosition[1]\n                    ) {\n                        return rxjs.of(scrollPosition).pipe(delay(0));\n                    } else {\n                        return rxjs.of(scrollPosition);\n                    }\n                }),\n            )\n            .subscribe((scrollPosition) => {\n                this._viewportScroller.scrollToPosition(scrollPosition);\n            });\n    }\n\n    private _putState(key: string, state: NodeDataSourceRemoteState): void {\n        const entry = this._getEntryOrCreate();\n        entry.state = 'active';\n        entry.dataSourceStates[key] = state;\n    }\n\n    private _getRestoreEntry(): RestoreEntry | null {\n        return (\n            this._entries.find(\n                ({ state, navigationId }) =>\n                    state === 'restore' && navigationId === this._currentNavigationId,\n            ) ?? null\n        );\n    }\n\n    private _getEntryOrCreate(): RestoreEntry {\n        let entry = this._entries.find(\n            ({ navigationId }) => navigationId === this._currentNavigationId,\n        );\n        if (entry == null) {\n            entry = new RestoreEntry(this._currentNavigationId);\n            this._entries.push(entry);\n        }\n        return entry;\n    }\n\n    private _registerRouterEvents(): void {\n        this._router.events\n            .pipe(filter((event): event is NavigationStart => event instanceof NavigationStart))\n            .subscribe((event) => {\n                this._currentNavigationId = event.id;\n                if (event.navigationTrigger === 'popstate') {\n                    // `restoredState` can be undefined when using `MockLocationStrategy`. This is\n                    // the case for the app-as-web-component project. In this case, we restoring\n                    // will not work.\n                    //\n                    // TODO: If this is a use case, extend `MockLocationStrategy` to implement\n                    // `onPopState` in a way that provides `state.navigationId`.\n                    const restoredId = event.restoredState?.navigationId;\n                    const entry = this._entries.find(\n                        ({ navigationId }) => navigationId === restoredId,\n                    );\n                    if (entry) {\n                        entry.state = 'restore';\n                        entry.navigationId = event.id;\n                    }\n                }\n            });\n        this._router.events\n            .pipe(filter((event): event is Scroll => event instanceof Scroll))\n            .subscribe((event) => {\n                if (event.position) {\n                    this._getEntryOrCreate().scrollPosition = event.position;\n                }\n            });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { SearchPageResultsAllService } from './search-page-results-all.service';\nimport { SearchPageService } from './search-page.service';\nimport { NodeEntriesDisplayType, Scope } from 'ngx-edu-sharing-ui';\n\n@Component({\n    selector: 'es-search-page-results-all',\n    templateUrl: './search-page-results-all.component.html',\n    styleUrls: ['./search-page-results-all.component.scss'],\n    providers: [SearchPageResultsAllService],\n})\nexport class SearchPageResultsAllComponent implements OnInit {\n    readonly Scope = Scope;\n    readonly NodeEntriesDisplayType = NodeEntriesDisplayType;\n\n    readonly repoData = this._results.repoData;\n    readonly loadingProgress = this._results.loadingProgress;\n    readonly addToCollectionMode = this._searchPage.addToCollectionMode;\n    allEmpty = false;\n\n    private readonly _searchString = this._searchPage.searchString;\n    private readonly _activeRepository = this._searchPage.activeRepository;\n\n    constructor(\n        private _searchPage: SearchPageService,\n        private _results: SearchPageResultsAllService,\n    ) {}\n\n    ngOnInit(): void {\n        setTimeout(() => {\n            this._searchPage.results = this._results;\n            this._searchPage.showingAllRepositories.next(true);\n        });\n        this._registerAllEmpty();\n    }\n\n    getShowMoreQueryParams(repoId: string): { [key: string]: string } {\n        return {\n            ...this._searchString.getQueryParamEntry(),\n            ...this._activeRepository.getQueryParamEntry(repoId),\n        };\n    }\n\n    private _registerAllEmpty(): void {\n        this.loadingProgress\n            .pipe(\n                debounceTime(0),\n                map((progress) => {\n                    if (progress < 100) {\n                        return false;\n                    } else {\n                        return this.repoData.value.every((r) => r.dataSource.isEmpty());\n                    }\n                }),\n            )\n            .subscribe((allEmpty) => (this.allEmpty = allEmpty));\n    }\n}\n","<!-- For meaningful multi-item actions, we would need to share one actionbar with all\nNodeEntriesWrapper instances. Currently, however, each NodeEntriesWrapper instance will provide its\nown OptionsHelperService instance and take exclusive control of the actionbar. -->\n\n<!-- <es-actionbar #actionbar class=\"actionbar\"></es-actionbar> -->\n\n<!-- [initConfig]=\"{ actionbar, customOptions: { removeOptions: ['OPTIONS.SWITCH_TO_LIST_VIEW']} }\" -->\n\n<es-small-collection\n  *ngIf=\"addToCollectionMode.value as addToCollection\"\n  class=\"add-to-collection-banner\"\n  [collection]=\"addToCollection.collection\"\n  [titleLabel]=\"'SEARCH.ADD_INTO_COLLECTION'\"\n  [titleLabelShort]=\"'SEARCH.ADD_INTO_COLLECTION_SHORT'\"\n>\n  <es-actionbar\n    [options]=\"[addToCollection.customOptions.addOptions[0]]\"\n    backgroundType=\"primary\"\n  ></es-actionbar>\n</es-small-collection>\n\n<es-node-entries-wrapper\n  *ngFor=\"let repo of repoData | async\"\n  [class.display-none]=\"repo.dataSource.isEmpty()\"\n  class=\"entries-wrapper\"\n  [dataSource]=\"repo.dataSource\"\n  [scope]=\"Scope.Search\"\n  [columns]=\"repo.columns | async\"\n  [disableInfiniteScroll]=\"true\"\n  [displayType]=\"NodeEntriesDisplayType.Grid\"\n  [gridConfig]=\"{ layout: 'scroll' }\"\n  [checkbox]=\"false\"\n  [initConfig]=\"{ customOptions: addToCollectionMode.value?.customOptions }\"\n>\n  <ng-template #title>\n    <div class=\"title-container\">\n      <h2 class=\"mat-heading-2\">\n        {{ repo.title | titlecase }}\n        <ng-container *ngIf=\"!repo.dataSource.isLoading; else smallLoadingSpinner\">\n          ({{ repo.dataSource.getTotal() }})\n        </ng-container>\n      </h2>\n      <a\n        *ngIf=\"repo.dataSource.getTotal() > repo.dataSource.getData().length\"\n        mat-button\n        [routerLink]=\"['..']\"\n        [queryParams]=\"getShowMoreQueryParams(repo.id)\"\n      >\n        {{ 'SHOW_MORE' | translate }}\n        <i esIcon=\"keyboard_arrow_right\"></i>\n      </a>\n    </div>\n  </ng-template>\n</es-node-entries-wrapper>\n\n<es-spinner *ngIf=\"(loadingProgress | async) < 100\"></es-spinner>\n\n<div *ngIf=\"allEmpty\" class=\"no-search-results-message\">\n  <i esIcon=\"search\"></i>\n  {{ 'SEARCH.QUERY_NO_RESULT' | translate }}\n</div>\n\n<ng-template #smallLoadingSpinner>\n  <mat-spinner diameter=\"24\" class=\"small-progress-spinner\"></mat-spinner>\n</ng-template>\n","import { Injectable, Injector, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n    MdsDefinition,\n    MdsService,\n    MetadataSetInfo,\n    Node,\n    SearchService,\n    MdsSortDefault,\n} from 'ngx-edu-sharing-api';\nimport * as rxjs from 'rxjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Repository, RestConstants } from '../../core-module/core.module';\nimport { MdsHelper } from '../../core-module/rest/mds-helper';\nimport {\n    fromSearchResults,\n    NodeDataSourceRemote,\n    NodeRemote,\n    NodeRequestParams,\n} from './node-data-source-remote';\nimport { SearchPageRestoreService } from './search-page-restore.service';\nimport { SearchPageResults } from './search-page-results.service';\nimport { SearchPageService } from './search-page.service';\nimport { ListItem } from 'ngx-edu-sharing-ui';\n\ninterface RepoData {\n    title: string;\n    id: string;\n    isHome: boolean;\n    dataSource: NodeDataSourceRemote;\n    columns: Observable<ListItem[]>;\n    loadingParams: Observable<boolean>;\n    loadingContent: Observable<boolean>;\n}\n\n@Injectable()\nexport class SearchPageResultsAllService implements SearchPageResults, OnDestroy {\n    readonly repoData = new BehaviorSubject<RepoData[]>(null);\n    readonly loadingProgress = new BehaviorSubject<number>(0);\n\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _injector: Injector,\n        private _search: SearchService,\n        private _searchPage: SearchPageService,\n        private _searchPageRestore: SearchPageRestoreService,\n        private _mds: MdsService,\n        private _translate: TranslateService,\n    ) {\n        this._initRepoData();\n        this._registerPageRestore();\n        this._registerLoadingProgress();\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n\n    addNodes(nodes: Node[]): void {\n        const homeRepoData = this.repoData.value.find(({ isHome }) => isHome);\n        homeRepoData?.dataSource.appendData(nodes, 'before');\n    }\n\n    private _initRepoData() {\n        this._searchPage.availableRepositories\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((repositories) => {\n                this.repoData.next(repositories.map((repository) => this._getRepoData(repository)));\n            });\n    }\n\n    private _registerPageRestore() {\n        this.repoData.subscribe((repoData) => {\n            for (const repo of repoData) {\n                this._searchPageRestore.registerDataSource(repo.id, repo.dataSource);\n            }\n        });\n    }\n\n    private _getRepoData(repository: Repository): RepoData {\n        const loadingParams = new BehaviorSubject(true);\n        const loadingContent = new BehaviorSubject(true);\n        const dataSource = new NodeDataSourceRemote(this._injector);\n        const metadataSet: Observable<MetadataSetInfo> = this._getMetadataSet(repository);\n        const mdsDefinition: Observable<MdsDefinition> = metadataSet.pipe(\n            switchMap((metadataSet) => this._getMdsDefinition(repository, metadataSet)),\n        );\n        const columns: Observable<ListItem[]> = mdsDefinition.pipe(\n            switchMap((mdsDefinition) => this._getColumns(mdsDefinition)),\n        );\n        const sort = mdsDefinition.pipe(\n            map((mdsDefinition) => this._getDefaultSort(mdsDefinition)),\n        );\n        rxjs.combineLatest([metadataSet, sort, this._searchPage.searchString.observeValue()])\n            .pipe(\n                tap(() => loadingParams.next(false)),\n                takeUntil(this._destroyed),\n            )\n            .subscribe(([metadataSet, sort, searchString]) => {\n                dataSource.setRemote(\n                    this._getSearchRemote(repository, metadataSet, sort, searchString),\n                );\n            });\n        dataSource.isLoadingSubject.subscribe((isLoading) => loadingContent.next(!!isLoading));\n        return {\n            title: repository.title,\n            id: repository.id,\n            isHome: repository.isHomeRepo,\n            dataSource,\n            columns,\n            loadingParams,\n            loadingContent,\n        };\n    }\n\n    private _getMetadataSet(repository: Repository): Observable<MetadataSetInfo> {\n        return this._searchPage.getAvailableMetadataSets(repository).pipe(\n            takeUntil(this._destroyed),\n            map((availableMetadataSets) => availableMetadataSets[0]),\n        );\n    }\n\n    private _getMdsDefinition(\n        repository: Repository,\n        metadataSet: MetadataSetInfo,\n    ): Observable<MdsDefinition> {\n        return this._mds.getMetadataSet({ repository: repository.id, metadataSet: metadataSet.id });\n    }\n\n    private _getColumns(mdsDefinition: MdsDefinition): Observable<ListItem[]> {\n        return (\n            this._translate\n                // Make sure translations are initialized when MdsHelper calls `instant`.\n                .get('dummy')\n                .pipe(map(() => MdsHelper.getColumns(this._translate, mdsDefinition, 'search')))\n        );\n    }\n\n    private _getDefaultSort(mdsDefinition: MdsDefinition): MdsSortDefault {\n        return MdsHelper.getSortInfo(mdsDefinition, 'search')?.default;\n    }\n\n    private _getSearchRemote(\n        repository: Repository,\n        metadataSet: MetadataSetInfo,\n        sort: MdsSortDefault,\n        searchString: string,\n    ): NodeRemote<Node> {\n        const criteria = searchString ? [{ property: 'ngsearchword', values: [searchString] }] : [];\n        return (request: NodeRequestParams) => {\n            return this._search\n                .search({\n                    body: {\n                        criteria,\n                        // permissions: this.reUrl.value ? [RestConstants.ACCESS_CC_PUBLISH] : [],\n                    },\n                    maxItems: request.range.endIndex - request.range.startIndex,\n                    skipCount: request.range.startIndex,\n                    sortAscending: sort ? [sort.sortAscending] : null,\n                    sortProperties: sort ? [sort.sortBy] : null,\n                    contentType: 'FILES',\n                    repository: repository.id,\n                    metadataset: metadataSet.id,\n                    query: RestConstants.DEFAULT_QUERY_NAME,\n                    propertyFilter: [RestConstants.ALL],\n                })\n                .pipe(map(fromSearchResults));\n        };\n    }\n\n    private _registerLoadingProgress(): void {\n        this.repoData\n            .pipe(\n                switchMap((repoData) =>\n                    rxjs.combineLatest([\n                        rxjs.combineLatest(repoData.map((r) => r.loadingParams)),\n                        rxjs.combineLatest(repoData.map((r) => r.loadingContent)),\n                    ]),\n                ),\n                map(([loadingParams, loadingContent]) => {\n                    const loadingParamsFinished = loadingParams.filter(isFalse).length;\n                    const loadingContentFinished = loadingContent.filter(isFalse).length;\n                    if (loadingParamsFinished === 0) {\n                        return 10;\n                    } else if (loadingParamsFinished < loadingParams.length) {\n                        return (loadingParamsFinished / loadingParams.length) * 30 + 10;\n                    } else {\n                        return (loadingContentFinished / loadingContent.length) * 60 + 40;\n                    }\n                }),\n                distinctUntilChanged(),\n                // tap((progress) => console.log('progress', progress)),\n            )\n            .subscribe(this.loadingProgress);\n    }\n}\n\nfunction isFalse(value: boolean): boolean {\n    return value === false;\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NodeEntriesDisplayType, Scope, TemporaryStorageService } from 'ngx-edu-sharing-ui';\nimport { ActionbarComponent } from 'ngx-edu-sharing-ui';\nimport { SearchPageResultsService } from './search-page-results.service';\nimport { SearchPageService } from './search-page.service';\nimport { GlobalSearchPageServiceInternal } from './global-search-page.service';\nimport { Subject } from 'rxjs';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { TranslateService } from '@ngx-translate/core';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'es-search-page-results',\n    templateUrl: './search-page-results.component.html',\n    styleUrls: ['./search-page-results.component.scss'],\n    providers: [SearchPageResultsService],\n})\nexport class SearchPageResultsComponent implements OnInit, OnDestroy {\n    readonly Scope = Scope;\n    readonly NodeEntriesDisplayType = NodeEntriesDisplayType;\n    private destroyed = new Subject<void>();\n\n    @ViewChild(ActionbarComponent)\n    set _actionbar(value: ActionbarComponent) {\n        // Avoid changed-after-checked error.\n        setTimeout(() => (this.actionbar = value));\n    }\n    actionbar: ActionbarComponent;\n\n    readonly resultsDataSource = this.results.resultsDataSource;\n    readonly collectionsDataSource = this.results.collectionsDataSource;\n    readonly resultColumns = this.results.resultColumns;\n    readonly collectionColumns = this.results.collectionColumns;\n    readonly sortConfig = this.results.sortConfig;\n    readonly addToCollectionMode = this.searchPage.addToCollectionMode;\n    readonly customTemplates = this.globalSearchPageInternal.customTemplates;\n\n    constructor(\n        private globalSearchPageInternal: GlobalSearchPageServiceInternal,\n        private results: SearchPageResultsService,\n        private searchPage: SearchPageService,\n        private temporaryStorageService: TemporaryStorageService,\n        private announcer: LiveAnnouncer,\n        private translate: TranslateService,\n    ) {\n        // announce newly loaded elements to users using screen readers\n        results.diffCount\n            .pipe(\n                takeUntil(this.destroyed), // FIXME: replace with takeUntilDestroyed in Angular 16+\n                switchMap((newlyLoadedElements) =>\n                    this.translate.get('SEARCH.LOADED_RESULTS', { count: newlyLoadedElements }),\n                ),\n            )\n            .subscribe((elementsLoadedTranslation) => {\n                this.announcer.announce(elementsLoadedTranslation);\n            });\n    }\n\n    ngOnInit(): void {\n        setTimeout(() => {\n            this.searchPage.results = this.results;\n            this.searchPage.showingAllRepositories.next(false);\n        });\n    }\n\n    toggleFilters(): void {\n        const filterBarIsVisible = this.searchPage.filterBarIsVisible;\n        filterBarIsVisible.setUserValue(!filterBarIsVisible.getValue());\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n        this.temporaryStorageService.set(\n            TemporaryStorageService.NODE_RENDER_PARAMETER_DATA_SOURCE,\n            this.resultsDataSource,\n        );\n    }\n\n    getCountClass() {\n        if (this.searchPage.searchString.getValue()) {\n            return 'count-ngsearchword';\n        }\n        return '';\n    }\n}\n","<ng-container\n  *ngTemplateOutlet=\"customTemplates.value.resultsTop\"\n  xmlns=\"http://www.w3.org/1999/html\"\n></ng-container>\n\n<es-small-collection\n  *ngIf=\"addToCollectionMode.value as addToCollection\"\n  class=\"add-to-collection-banner\"\n  [collection]=\"addToCollection.collection\"\n  [titleLabel]=\"'SEARCH.ADD_INTO_COLLECTION'\"\n  [titleLabelShort]=\"'SEARCH.ADD_INTO_COLLECTION_SHORT'\"\n>\n  <es-actionbar backgroundType=\"primary\"></es-actionbar>\n</es-small-collection>\n\n<!-- We cannot use *ngIf on node-entries-wrapper since it depends on its input variables to\n      initialize data fetching. -->\n<es-node-entries-wrapper\n  [class.display-none]=\"collectionsDataSource.isEmpty()\"\n  class=\"entries-wrapper\"\n  [dataSource]=\"collectionsDataSource\"\n  [scope]=\"Scope.SearchCollections\"\n  [columns]=\"collectionColumns.value\"\n  [disableInfiniteScroll]=\"true\"\n  [displayType]=\"NodeEntriesDisplayType.SmallGrid\"\n  [gridConfig]=\"{ layout: 'scroll' }\"\n>\n  <ng-template #title>\n    <div class=\"title-container\">\n      <h2 class=\"mat-heading-2\">\n        {{ 'SEARCH.COLLECTIONS' | translate }}\n        <ng-container *ngIf=\"!collectionsDataSource.isLoading; else smallLoadingSpinner\">\n          ({{ collectionsDataSource.getTotal() }})\n        </ng-container>\n      </h2>\n    </div>\n  </ng-template>\n</es-node-entries-wrapper>\n\n<es-node-entries-wrapper\n  #nodeEntriesResults\n  class=\"entries-wrapper\"\n  [dataSource]=\"resultsDataSource\"\n  [scope]=\"Scope.Search\"\n  [columns]=\"resultColumns.value\"\n  [sort]=\"sortConfig | async\"\n  [primaryInstance]=\"true\"\n  [initConfig]=\"{ actionbar, customOptions: addToCollectionMode.value?.customOptions}\"\n>\n  <ng-template #title>\n    <div class=\"title-container\">\n      <h2 class=\"mat-heading-2\">\n        {{ 'SEARCH.MATERIALS' | translate }}\n        <ng-container *ngIf=\"!resultsDataSource.isLoading; else smallLoadingSpinner\">\n          <ng-container *ngIf=\"!resultsDataSource.isEmpty()\">\n            <span class=\"count {{ getCountClass() }}\">\n              &nbsp;({{ resultsDataSource.getTotal() }})\n            </span>\n          </ng-container>\n        </ng-container>\n      </h2>\n      <button\n        *ngIf=\"nodeEntriesResults.getSelection().isEmpty()\"\n        mat-flat-button\n        color=\"primary\"\n        class=\"filters-button\"\n        [attr.aria-label]=\"'SEARCH.FILTERS' | translate\"\n        matTooltip=\"{{ 'TOGGLE_SEARCH_FILTERS' | translate }}\"\n        (click)=\"toggleFilters()\"\n      >\n        <i esIcon=\"filter_list\"></i>\n        <span>{{ 'SEARCH.FILTERS' | translate }}</span>\n      </button>\n      <es-actionbar *ngIf=\"!addToCollectionMode.value\"></es-actionbar>\n    </div>\n  </ng-template>\n  <ng-template #empty>\n    <div class=\"no-search-results-message\">\n      <i esIcon=\"search\"></i>\n      {{ 'SEARCH.QUERY_NO_RESULT' | translate }}\n    </div>\n  </ng-template>\n</es-node-entries-wrapper>\n\n<ng-template #smallLoadingSpinner>\n  <mat-spinner diameter=\"24\" class=\"small-progress-spinner\"></mat-spinner>\n</ng-template>\n","import { Injectable, Injector, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n    MdsDefinition,\n    MdsQueryCriteria,\n    MdsService,\n    Node,\n    SearchService,\n} from 'ngx-edu-sharing-api';\nimport * as rxjs from 'rxjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    pairwise,\n    share,\n    startWith,\n    switchMap,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\nimport { ListItem, ListItemSort, ListSortConfig, notNull } from 'ngx-edu-sharing-ui';\nimport { MdsHelper } from '../../core-module/rest/mds-helper';\nimport {\n    fromSearchResults,\n    NodeDataSourceRemote,\n    NodeRemote,\n    NodeRequestParams,\n} from './node-data-source-remote';\nimport { SearchPageRestoreService } from './search-page-restore.service';\nimport { SearchPageService, SearchRequestParams } from './search-page.service';\nimport { RestConstants } from '../../core-module/rest/rest-constants';\nimport { MdsWidgetType } from 'src/app/features/mds/types/types';\nimport { RestSearchService } from 'src/app/core-module/core.module';\n\nexport interface SearchPageResults {\n    diffCount?: Observable<number>;\n    totalResults?: Observable<number>;\n    loadingProgress: Observable<number>;\n    addNodes: (nodes: Node[]) => void;\n}\n\n@Injectable()\nexport class SearchPageResultsService implements SearchPageResults, OnDestroy {\n    readonly resultsDataSource = new NodeDataSourceRemote(this._injector);\n    readonly totalResults = this.resultsDataSource.observeTotal();\n    readonly collectionsDataSource = new NodeDataSourceRemote(this._injector);\n    readonly resultColumns = new BehaviorSubject<ListItem[]>([]);\n    readonly collectionColumns = new BehaviorSubject<ListItem[]>([]);\n    readonly sortConfig = new BehaviorSubject<ListSortConfig>(null);\n    readonly loadingParams = new BehaviorSubject<boolean>(true);\n    readonly loadingContent = new BehaviorSubject<boolean>(true);\n    readonly loadingCollections = new BehaviorSubject<boolean>(true);\n    readonly loadingProgress = new BehaviorSubject<number>(0);\n    readonly diffCount = new BehaviorSubject<number>(0);\n\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _injector: Injector,\n        private _mds: MdsService,\n        private _search: SearchService,\n        private _searchPage: SearchPageService,\n        private _searchPageRestore: SearchPageRestoreService,\n        private _translate: TranslateService,\n    ) {\n        this._registerPageRestore();\n        this._registerSearchObservables();\n        this._registerColumnsAndSortConfig();\n        this._registerLoadingProgress();\n        this._registerResultDiffCount();\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n\n    addNodes(nodes: Node[]): void {\n        this.resultsDataSource.appendData(nodes, 'before');\n    }\n\n    private _registerPageRestore() {\n        this._searchPageRestore.registerDataSource('materials', this.resultsDataSource);\n        this._searchPageRestore.registerDataSource('collections', this.collectionsDataSource);\n    }\n\n    private _registerSearchObservables() {\n        const searchRequestParams: Observable<SearchRequestParams> = rxjs\n            .combineLatest([\n                this._searchPage.activeRepository.observeValue(),\n                // .pipe(tap((value) => console.log('activeRepository changed', value))),\n                this._searchPage.activeMetadataSet.observeValue(),\n                // .pipe(tap((value) => console.log('activeMetadataSet changed', value))),\n                this._searchPage.searchFilters.observeValue(),\n                // .pipe(tap((value) => console.log('searchFilters changed', value))),\n                this._searchPage.searchString.observeValue(),\n                // .pipe(tap((value) => console.log('searchString changed', value))),\n            ])\n            .pipe(\n                takeUntil(this._destroyed),\n                tap(() => this.loadingParams.next(true)),\n                // Search filters and facets to fetch depend on the active repository and metadata\n                // set. Their values will be set to `null` while data is being determined after\n                // repository or metadata set changed. Give other components a tick to do this, so\n                // we don't prematurely send a search request with outdated data.\n                debounceTime(0),\n                filter(\n                    ([repository, metadataSet, searchFilters]) =>\n                        notNull(repository) && notNull(metadataSet) && notNull(searchFilters),\n                ),\n                // Wait until the filter bar's MDS instance has registered its needed facets for\n                // suggestions at the search service. We don't explicitly include the facets in the\n                // search request here to let the search service decide not to update the facets\n                // when not needed (e.g., when loading a new page). See comments on\n                // `MdsEditorWrapperComponent.registerLegacySuggestions` for further context.\n                switchMap((values) =>\n                    this._searchPage.facetsToFetch.pipe(\n                        first(notNull),\n                        map(() => values),\n                    ),\n                ),\n                tap(() => this.loadingParams.next(false)),\n                map(\n                    ([repository, metadataSet, searchFilters, searchString]) =>\n                        new SearchRequestParams(\n                            repository,\n                            metadataSet,\n                            searchFilters,\n                            searchString,\n                        ),\n                ),\n                distinctUntilChanged((x, y) => x.equals(y)),\n                share(),\n            );\n        const collectionRequestParams: Observable<SearchRequestParams> = searchRequestParams.pipe(\n            // Omit searchFilters.\n            map(\n                ({ repository, metadataSet, searchString }) =>\n                    new SearchRequestParams(repository, metadataSet, {}, searchString),\n            ),\n            distinctUntilChanged((x, y) => x.equals(y)),\n        );\n        searchRequestParams\n            .pipe(\n                tap(() => this.loadingContent.next(true)),\n                map((params) => this._getSearchRemote(params)),\n            )\n            .subscribe((remote) => this.resultsDataSource.setRemote(remote));\n\n        collectionRequestParams\n            .pipe(\n                tap(() => this.loadingCollections.next(true)),\n                map((params) => this._getCollectionsSearchRemote(params)),\n            )\n            .subscribe((remote) => this.collectionsDataSource.setRemote(remote));\n        this.resultsDataSource.isLoadingSubject.subscribe((isLoading) =>\n            this.loadingContent.next(!!isLoading),\n        );\n        this.collectionsDataSource.isLoadingSubject.subscribe((isLoading) =>\n            this.loadingCollections.next(!!isLoading),\n        );\n    }\n\n    private _registerColumnsAndSortConfig(): void {\n        // Get MDS definition.\n        const mds: Observable<MdsDefinition> = rxjs\n            .combineLatest([\n                this._searchPage.activeRepository.observeValue(),\n                this._searchPage.activeMetadataSet.observeValue(),\n            ])\n            .pipe(\n                takeUntil(this._destroyed),\n                filter(([repository, metadataSet]) => notNull(repository) && notNull(metadataSet)),\n                switchMap(([repository, metadataSet]) =>\n                    this._mds.getMetadataSet({ repository, metadataSet }),\n                ),\n            );\n        // Register columns.\n        mds.pipe(map((mds) => MdsHelper.getColumns(this._translate, mds, 'search'))).subscribe(\n            this.resultColumns,\n        );\n        mds.pipe(\n            map((mds) => MdsHelper.getColumns(this._translate, mds, 'searchCollections')),\n        ).subscribe(this.collectionColumns);\n        // Register sort.\n        mds.pipe(map((mds) => MdsHelper.getSortInfo(mds, 'search'))).subscribe((sortInfo) => {\n            this.sortConfig.next({\n                allowed: true,\n                active: sortInfo.default.sortBy,\n                direction: sortInfo.default.sortAscending ? 'asc' : 'desc',\n                columns: sortInfo.columns?.map(\n                    ({ id, mode }) =>\n                        new ListItemSort('NODE', id, mode as 'ascending' | 'descending'),\n                ),\n            });\n        });\n    }\n\n    private _getSearchRemote(params: SearchRequestParams): NodeRemote<Node> {\n        // console.log('%cgetSearchRemote', 'font-weight: bold', params);\n        return (request: NodeRequestParams) => {\n            // console.log('search', request);\n            return this._search\n                .search({\n                    body: {\n                        criteria: this._getSearchCriteria(params),\n                        facetLimit: 5,\n                        facetMinCount: 1,\n                        permissions: this._searchPage.reUrl.value\n                            ? [RestConstants.ACCESS_CC_PUBLISH]\n                            : [],\n                    },\n                    maxItems: request.range.endIndex - request.range.startIndex,\n                    skipCount: request.range.startIndex,\n                    sortAscending: request.sort ? [request.sort.direction === 'asc'] : null,\n                    sortProperties: request.sort ? [request.sort.active] : null,\n                    contentType: 'FILES',\n                    repository: params.repository,\n                    metadataset: params.metadataSet,\n                    query: RestConstants.DEFAULT_QUERY_NAME,\n                    propertyFilter: [RestConstants.ALL],\n                })\n                .pipe(\n                    tap((r) => {\n                        if (r.pagination.total < r.pagination.count) {\n                            console.warn(\n                                'Total count of items is smaller than total, results might be truncated, check pagination results of api',\n                                r.pagination,\n                            );\n                        }\n                    }),\n                    map(fromSearchResults),\n                );\n        };\n    }\n\n    private _getCollectionsSearchRemote(params: SearchRequestParams): NodeRemote<Node> {\n        const repository = this._searchPage.availableRepositories.value.find(\n            ({ id }) => id === params.repository,\n        );\n        if (\n            // We cannot show collections for another repository.\n            !repository.isHomeRepo ||\n            // We don't show other collections when searching for material to add to a collection.\n            this._searchPage.addToCollectionMode.value\n        ) {\n            this.loadingCollections.next(false);\n            return () => rxjs.of({ data: [], total: 0 });\n        }\n        return (request: NodeRequestParams) => {\n            return this._search\n                .requestSearch({\n                    body: {\n                        criteria: this._getSearchCriteria(params),\n                        facets: [],\n                    },\n                    sortProperties: [\n                        RestConstants.CCM_PROP_COLLECTION_PINNED_STATUS,\n                        RestConstants.CCM_PROP_COLLECTION_PINNED_ORDER,\n                        RestConstants.CM_MODIFIED_DATE,\n                    ],\n                    sortAscending: [false, true, false],\n                    maxItems: request.range.endIndex - request.range.startIndex,\n                    skipCount: request.range.startIndex,\n                    // sortAscending: request.sort ? [request.sort.direction === 'asc'] : null,\n                    // sortProperties: request.sort ? [request.sort.active] : null,\n                    contentType: 'ALL', // This is now handled via mds queries\n                    repository: params.repository,\n                    metadataset: params.metadataSet,\n                    query: RestConstants.QUERY_NAME_COLLECTIONS,\n                    propertyFilter: [RestConstants.ALL],\n                })\n                .pipe(map(fromSearchResults));\n        };\n    }\n\n    private _getSearchCriteria(params: SearchRequestParams): MdsQueryCriteria[] {\n        let criteria: MdsQueryCriteria[] = Object.entries(params.searchFilters ?? {}).map(\n            ([property, values]) => ({ property, values }),\n        );\n        this.convertCriteria(criteria);\n        if (params.searchString) {\n            criteria.push({ property: 'ngsearchword', values: [params.searchString] });\n        }\n        return criteria;\n    }\n\n    private _registerLoadingProgress(): void {\n        rxjs.combineLatest([this.loadingParams, this.loadingContent, this.loadingCollections])\n            .pipe(\n                map(([loadingParams, loadingContent, loadingCollections]) => {\n                    if (loadingParams) {\n                        return 10;\n                    } else {\n                        return 40 + (loadingContent ? 0 : 30) + (loadingCollections ? 0 : 30);\n                    }\n                }),\n                debounceTime(0),\n                distinctUntilChanged(),\n            )\n            .subscribe((progress) => this.loadingProgress.next(progress));\n    }\n\n    private _registerResultDiffCount(): void {\n        this.resultsDataSource\n            .connect()\n            .pipe(\n                takeUntil(this._destroyed),\n                filter(notNull),\n                map((nodes) => nodes.length),\n                startWith(0),\n                pairwise(),\n            )\n            .subscribe(([previousCount, currentCount]) => {\n                this.diffCount.next(currentCount - previousCount);\n            });\n    }\n\n    // TODO: Port `unfoldTrees` methods from 8.0. See\n    // https://scm.edu-sharing.com/edu-sharing/community/repository/edu-sharing-angular-core-module/-/blob/5447ea837a99a3dab04395c10464dd417ddb73a1/rest/services/rest-search.service.ts#L34.\n    // Also consider a backend solution.\n    private convertCriteria(criteria: MdsQueryCriteria[]): void {\n        for (const c of criteria) {\n            // We get the widget definition from the MDS editor instance, so overrides with `data-`\n            // attributes in the MDS template are reflected.\n            const widget = this._searchPage.filtersMdsWidgets.value?.find(\n                (widget) => widget.definition.id === c.property,\n            )?.definition;\n            if (widget?.type === MdsWidgetType.MultiValueTree) {\n                // For multi-value-tree widgets, add all child values of selected values to the\n                // search criteria.\n                let attach = MdsService.unfoldTreeChilds(c.values, widget);\n                if (attach) {\n                    if (attach.length > RestSearchService.MAX_QUERY_CONCAT_PARAMS) {\n                        console.info(\n                            'param ' +\n                                c.property +\n                                ' has too many unfold childs (' +\n                                attach.length +\n                                '), falling back to basic prefix-based search',\n                        );\n                    } else {\n                        c.values = c.values.concat(attach);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchPageResultsAllComponent } from './search-page-results-all.component';\nimport { SearchPageResultsComponent } from './search-page-results.component';\n\nimport { SearchPageComponent } from './search-page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SearchPageComponent,\n        children: [\n            {\n                path: '',\n                component: SearchPageResultsComponent,\n            },\n            {\n                path: 'all',\n                component: SearchPageResultsAllComponent,\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class SearchPageRoutingModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'es-search-page-toolbar',\n    templateUrl: './search-page-toolbar.component.html',\n    styleUrls: ['./search-page-toolbar.component.scss'],\n})\nexport class SearchPageToolbarComponent implements OnInit {\n    @Input() filterBarIsVisible: boolean;\n    @Output() filterBarIsVisibleChange = new EventEmitter<boolean>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    toggleFilterBar() {\n        this.filterBarIsVisible = !this.filterBarIsVisible;\n        this.filterBarIsVisibleChange.emit(this.filterBarIsVisible);\n    }\n}\n","<button\n  mat-button\n  color=\"primary\"\n  (click)=\"toggleFilterBar()\"\n  class=\"toggle-filter-bar-button\"\n  [class.toggle-filter-bar-button-active]=\"filterBarIsVisible\"\n>\n  <span>{{ 'SEARCH.EXPANDED_SEARCH' | translate }}</span>\n  <i esIcon=\"keyboard_arrow_right\"></i>\n</button>\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { Component, HostBinding, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as rxjs from 'rxjs';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Node, Repository, RestConstants } from '../../core-module/core.module';\nimport {\n    NodeEntriesWrapperComponent,\n    notNull,\n    Scope,\n    UIAnimation,\n    UIConstants,\n} from 'ngx-edu-sharing-ui';\nimport { CardDialogRef } from '../../features/dialogs/card-dialog/card-dialog-ref';\nimport { DialogsService } from '../../features/dialogs/dialogs.service';\nimport { MainNavService } from '../../main/navigation/main-nav.service';\nimport { BreadcrumbsService } from '../../shared/components/breadcrumbs/breadcrumbs.service';\nimport { NavigationScheduler } from './navigation-scheduler';\nimport { SearchPageService } from './search-page.service';\n\n@Component({\n    selector: 'es-search-page',\n    templateUrl: './search-page.component.html',\n    styleUrls: ['./search-page.component.scss'],\n    providers: [SearchPageService],\n    animations: [\n        trigger('fadeOut', [\n            state('visible', style({ opacity: 1 })),\n            state('hidden', style({ opacity: 0 })),\n            transition('visible => hidden', [animate(UIAnimation.ANIMATION_TIME_NORMAL)]),\n        ]),\n    ],\n})\nexport class SearchPageComponent implements OnInit, OnDestroy {\n    readonly Scope = Scope;\n\n    @ViewChild('filtersDialogResetButton', { static: true })\n    filtersDialogResetButton: TemplateRef<HTMLElement>;\n    @ViewChild('filtersDialogContent', { static: true }) filtersDialogContent: TemplateRef<unknown>;\n\n    @HostBinding('class.has-tab-bar') tabBarIsVisible: boolean = null;\n    progressBarIsVisible = false;\n    queryParamsAllRepositories: { [key: string]: string };\n\n    readonly availableRepositories = this.searchPage.availableRepositories;\n    readonly activeRepository = this.searchPage.activeRepository;\n    readonly showingAllRepositories = this.searchPage.showingAllRepositories;\n    readonly filterBarIsVisible = this.searchPage.filterBarIsVisible;\n    readonly searchString = this.searchPage.searchString;\n    readonly searchFilters = this.searchPage.searchFilters;\n    readonly loadingProgress = this.searchPage.loadingProgress;\n    readonly isMobileScreen = this.getIsMobileScreen();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private breadcrumbsService: BreadcrumbsService,\n        private breakpointObserver: BreakpointObserver,\n        private dialogs: DialogsService,\n        private mainNav: MainNavService,\n        private navigationScheduler: NavigationScheduler,\n        private route: ActivatedRoute,\n        private searchPage: SearchPageService,\n        private translate: TranslateService,\n    ) {\n        this.searchPage.init();\n    }\n\n    ngOnInit(): void {\n        this.initMainNav();\n        this.breadcrumbsService.setNodePath(null);\n        this.availableRepositories\n            .pipe(\n                filter(notNull),\n                map((availableRepositories) => availableRepositories.length > 1),\n            )\n            .subscribe((tabBarIsVisible) => (this.tabBarIsVisible = tabBarIsVisible));\n        this.registerProgressBarIsVisible();\n        this.registerFilterDialog();\n        this.registerQueryParamsAllRepositories();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    goToRepository(repository: Repository): void {\n        this.activeRepository.setUserValue(repository.id);\n        this.navigationScheduler.scheduleNavigation({\n            route: [UIConstants.ROUTER_PREFIX, 'search'],\n        });\n    }\n\n    private registerFilterDialog(): void {\n        let dialogRefPromise: Promise<CardDialogRef<unknown>>;\n        let isMobileScreen: boolean;\n        rxjs.combineLatest([\n            this.searchPage.filterBarIsVisible.observeValue().pipe(),\n            this.isMobileScreen.pipe(tap((value) => (isMobileScreen = value))),\n        ])\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(async ([filterBarIsVisible]) => {\n                if (isMobileScreen && filterBarIsVisible && !dialogRefPromise) {\n                    dialogRefPromise = this.openFilterDialog();\n                    const dialogRef = await dialogRefPromise;\n                    dialogRef.afterClosed().subscribe(() => {\n                        dialogRefPromise = null;\n                        if (isMobileScreen) {\n                            this.filterBarIsVisible.setUserValue(false);\n                        }\n                    });\n                } else if (!isMobileScreen || !filterBarIsVisible) {\n                    void dialogRefPromise?.then((dialogRef) => dialogRef.close());\n                }\n            });\n    }\n\n    private registerQueryParamsAllRepositories(): void {\n        rxjs.combineLatest([this.route.queryParams, this.searchString.observeQueryParamEntry()])\n            .pipe(\n                takeUntil(this.destroyed),\n                map(([queryParams, searchStringEntry]) => ({\n                    addToCollection: queryParams.addToCollection,\n                    ...searchStringEntry,\n                })),\n            )\n            .subscribe((params) => (this.queryParamsAllRepositories = params));\n    }\n\n    private async openFilterDialog(): Promise<CardDialogRef<unknown>> {\n        const dialogRef = await this.dialogs.openGenericDialog({\n            title: 'SEARCH.FILTERS',\n            contentTemplate: this.filtersDialogContent,\n            minWidth: 350,\n            customHeaderBarContent: this.filtersDialogResetButton,\n        });\n        this.searchPage.results.totalResults\n            .pipe(\n                switchMap((results) => this.translate.get('SEARCH.NUMBER_RESULTS', { results })),\n                takeUntil(dialogRef.afterClosed()),\n            )\n            .subscribe((numberResults) => {\n                dialogRef.patchConfig({ subtitle: numberResults.toString() });\n            });\n        return dialogRef;\n    }\n\n    private getIsMobileScreen() {\n        return this.breakpointObserver\n            .observe(['(max-width: 900px)'])\n            .pipe(map(({ matches }) => matches));\n    }\n\n    private initMainNav(): void {\n        this.mainNav.setMainNavConfig({\n            title: 'SEARCH.TITLE',\n            currentScope: 'search',\n            canOpen: true,\n            onCreate: (nodes) => this.searchPage.results.addNodes(nodes),\n        });\n        const activeRepositoryIsHome: Observable<boolean> = rxjs\n            .combineLatest([this.availableRepositories, this.activeRepository.observeValue()])\n            .pipe(\n                filter(\n                    ([availableRepositories, activeRepository]) =>\n                        notNull(availableRepositories) && notNull(activeRepository),\n                ),\n                map(\n                    ([availableRepositories, activeRepository]) =>\n                        activeRepository === RestConstants.HOME_REPOSITORY ||\n                        availableRepositories.find((r) => r.id === activeRepository).isHomeRepo,\n                ),\n            );\n        activeRepositoryIsHome.subscribe((isHome) =>\n            this.mainNav.patchMainNavConfig({\n                create: { allowed: isHome, allowBinary: true },\n            }),\n        );\n    }\n\n    onProgressBarAnimationEnd(): void {\n        if (this.searchPage.loadingProgress.value >= 100) {\n            this.progressBarIsVisible = false;\n        }\n    }\n\n    private registerProgressBarIsVisible(): void {\n        this.searchPage.loadingProgress\n            .pipe(filter((progress) => progress < 100))\n            .subscribe(() => (this.progressBarIsVisible = true));\n    }\n}\n","<h1 esTitle class=\"cdk-visually-hidden\">{{ 'SEARCH.TITLE' | translate }}</h1>\n\n<mat-progress-bar\n  mode=\"determinate\"\n  [value]=\"progressBarIsVisible ? loadingProgress.value : 0\"\n  [@fadeOut]=\"progressBarIsVisible ? 'visible' : 'hidden'\"\n  (animationEnd)=\"onProgressBarAnimationEnd()\"\n  [attr.aria-label]=\"\n    progressBarIsVisible\n      ? ('SEARCH.LOADING_RESULTS'\n        | translate : { progress: progressBarIsVisible ? loadingProgress.value : 0 })\n      : ''\n  \"\n></mat-progress-bar>\n\n<ng-container *ngIf=\"tabBarIsVisible\">\n  <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n    <a\n      mat-tab-link\n      *ngIf=\"availableRepositories.getValue().length > 1\"\n      [routerLink]=\"['./all']\"\n      [queryParams]=\"queryParamsAllRepositories\"\n      routerLinkActive\n      #routerLinkActive=\"routerLinkActive\"\n      [active]=\"routerLinkActive.isActive\"\n    >\n      {{ 'SEARCH.REPOSITORY_ALL' | translate }}\n    </a>\n    <a\n      mat-tab-link\n      *ngFor=\"let repository of availableRepositories.getValue()\"\n      (click)=\"goToRepository(repository)\"\n      [active]=\"repository.id === activeRepository.getValue()\"\n    >\n      <div class=\"repository-icon\">\n        <img [src]=\"repository | repositoryIcon\" alt=\"\" />\n      </div>\n      {{ repository.title }}\n    </a>\n  </nav>\n  <mat-tab-nav-panel #tabPanel>\n    <ng-container *ngTemplateOutlet=\"tabBody\"></ng-container>\n  </mat-tab-nav-panel>\n</ng-container>\n<!-- Explicitly check if `tabBarIsVisible === false`, so we don't insert the body before we know\nwhere. -->\n<ng-container *ngIf=\"tabBarIsVisible === false\">\n  <ng-container *ngTemplateOutlet=\"tabBody\"></ng-container>\n</ng-container>\n\n<ng-template #tabBody>\n  <mat-drawer-container #filterBar>\n    <mat-drawer\n      [opened]=\"filterBarIsVisible.getValue() && (isMobileScreen | async) === false\"\n      mode=\"side\"\n    >\n      <div class=\"filter-bar-container\">\n        <div class=\"filter-bar-heading\">\n          <h2 class=\"filter-bar-title\">{{ 'SEARCH.FILTERS' | translate }}</h2>\n          <button\n            *ngIf=\"searchFilters.getUserValue()\"\n            mat-button\n            (click)=\"searchFilters.setUserValue(null)\"\n          >\n            <i esIcon=\"undo\"></i>\n            {{ 'CLEAR_FILTERS' | translate }}\n          </button>\n          <button\n            class=\"filter-bar-close-button\"\n            mat-icon-button\n            (click)=\"filterBarIsVisible.setUserValue(false)\"\n          >\n            <i esIcon=\"close\" [aria]=\"true\"></i>\n          </button>\n        </div>\n        <div class=\"filter-bar-body\">\n          <es-search-page-filter-bar\n            *ngIf=\"(showingAllRepositories | async) === false\"\n          ></es-search-page-filter-bar>\n        </div>\n      </div>\n    </mat-drawer>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-drawer-container>\n</ng-template>\n\n<ng-template #filtersDialogContent>\n  <es-search-page-filter-bar class=\"filters-dialog-content\"></es-search-page-filter-bar>\n</ng-template>\n\n<ng-template #filtersDialogResetButton>\n  <button\n    *ngIf=\"searchFilters.getUserValue()\"\n    mat-button\n    (click)=\"searchFilters.setUserValue(null)\"\n  >\n    <i esIcon=\"undo\"></i>\n    {{ 'CLEAR_FILTERS' | translate }}\n  </button>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { MdsModule } from '../../features/mds/mds.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { RepositoryIconPipe } from './repository-icon.pipe';\nimport { SearchPageFilterBarComponent } from './search-page-filter-bar.component';\nimport { SearchPageResultsAllComponent } from './search-page-results-all.component';\nimport { SearchPageResultsComponent } from './search-page-results.component';\nimport { SearchPageRoutingModule } from './search-page-routing.module';\nimport { SearchPageToolbarComponent } from './search-page-toolbar.component';\nimport { SearchPageComponent } from './search-page.component';\nimport { EduSharingUiModule } from 'ngx-edu-sharing-ui';\n\n@NgModule({\n    declarations: [\n        SearchPageComponent,\n        SearchPageToolbarComponent,\n        SearchPageFilterBarComponent,\n        RepositoryIconPipe,\n        SearchPageResultsComponent,\n        SearchPageResultsAllComponent,\n    ],\n    imports: [SearchPageRoutingModule, SharedModule, EduSharingUiModule, MdsModule],\n    // This module is lazy-loaded and should not export anything.\n    exports: [],\n})\nexport class SearchPageModule {}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ClientConfig,\n    CollectionService,\n    ConfigService,\n    HOME_REPOSITORY,\n    MdsService,\n    MetadataSetInfo,\n    NetworkService,\n    Node,\n} from 'ngx-edu-sharing-api';\nimport * as rxjs from 'rxjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Repository, UIConstants } from '../../core-module/core.module';\nimport { CustomOptions, DefaultGroups, ElementType, notNull, OptionItem } from 'ngx-edu-sharing-ui';\nimport { OptionsHelperService } from '../../services/options-helper.service';\nimport { MainNavService } from '../../main/navigation/main-nav.service';\nimport {\n    SearchFieldInstance,\n    SearchFieldService,\n} from '../../main/navigation/search-field/search-field.service';\nimport { NavigationScheduler } from './navigation-scheduler';\nimport { SearchPageResults } from './search-page-results.service';\nimport { UserModifiableValuesService } from './user-modifiable-values';\nimport { Widget } from '../../features/mds/mds-editor/mds-editor-instance.service';\n\nexport class SearchRequestParams {\n    constructor(\n        public readonly repository: string,\n        public readonly metadataSet: string,\n        public readonly searchFilters: { [key: string]: string[] },\n        public readonly searchString: string,\n    ) {}\n\n    equals(other: SearchRequestParams) {\n        return JSON.stringify(this) === JSON.stringify(other);\n    }\n}\n\ninterface AddToCollectionMode {\n    customOptions: CustomOptions;\n    collection: Node;\n}\n\n@Injectable()\nexport class SearchPageService implements OnDestroy {\n    readonly availableRepositories = new BehaviorSubject<Repository[]>(null);\n    readonly activeRepository = this.userModifiableValues.createString();\n    readonly showingAllRepositories = new BehaviorSubject<boolean>(null);\n    readonly availableMetadataSets = new BehaviorSubject<MetadataSetInfo[]>(null);\n    readonly activeMetadataSet = this.userModifiableValues.createString();\n    readonly filterBarIsVisible = this.userModifiableValues.createBoolean(false);\n    readonly searchFilters = this.userModifiableValues.createDict();\n    readonly searchString = this.userModifiableValues.createString();\n    readonly loadingProgress = new BehaviorSubject<number>(null);\n    readonly reUrl = new BehaviorSubject<string | false>(null);\n    readonly addToCollectionMode = new BehaviorSubject<AddToCollectionMode>(null);\n    readonly filtersMdsWidgets: BehaviorSubject<Widget[]> = new BehaviorSubject(null);\n    /**\n     * A list of properties that should be fetched as facets with a search request.\n     *\n     * The facets are determined by the mds instance of the filter-bar and are used to show\n     * suggestions for filter values to the user.\n     *\n     * Will be set to `null` while a value is being determined. Set to the empty array in case there\n     * are no facets to fetch.\n     */\n    readonly facetsToFetch = new BehaviorSubject<string[]>(null);\n    private _results = new BehaviorSubject<SearchPageResults>(null);\n    get results(): SearchPageResults {\n        return this._results.value;\n    }\n    set results(value: SearchPageResults) {\n        this._results.next(value);\n    }\n\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private collection: CollectionService,\n        private config: ConfigService,\n        private mainNavService: MainNavService,\n        private mds: MdsService,\n        private navigationScheduler: NavigationScheduler,\n        private network: NetworkService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private searchField: SearchFieldService,\n        private userModifiableValues: UserModifiableValuesService,\n    ) {}\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /** Initializes the service for use on the search page. */\n    init(): void {\n        this.initBasicData();\n        this.registerSearchField();\n        this.initSearchPageUi();\n        this.initQueryParams();\n        this.registerAllRepositories();\n        this.registerAddToCollection();\n    }\n\n    /**\n     * Utilizes this service to provide facet search via a search field when not on the search page.\n     *\n     * When a search is triggered by either entering a search string and hitting the search button\n     * or by selecting a facet, we jump to the search page.\n     */\n    initSearchFieldOnly(): void {\n        this.initBasicData();\n        const searchFieldInstance = this.registerSearchField({ autoFocusSearchField: false });\n        this.initQueryParams();\n        searchFieldInstance.patchConfig({ showFiltersButton: false });\n        // Jump to the search page when a search is triggered.\n        rxjs.merge(\n            searchFieldInstance.onSearchTriggered().pipe(\n                // Don't trigger a search when the search field was cleared with the 'X' button.\n                filter(({ cleared }) => !cleared),\n            ),\n            searchFieldInstance.onFilterValuesChanged(),\n        ).subscribe(() => {\n            this.navigationScheduler.scheduleNavigation({\n                route: [UIConstants.ROUTER_PREFIX, 'search'],\n            });\n        });\n    }\n\n    private initBasicData(): void {\n        this.registerRepositories();\n        this.registerAvailableMetadataSets();\n        this.registerActiveMetadataSet();\n    }\n\n    private initSearchPageUi(): void {\n        this.registerLoadingProgress();\n    }\n\n    private initQueryParams(): void {\n        this.activeRepository.registerQueryParameter('repo', this.route);\n        this.activeMetadataSet.registerQueryParameter('mds', this.route);\n        this.searchFilters.registerQueryParameter('filters', this.route);\n        this.searchString.registerQueryParameter('q', this.route);\n        this.filterBarIsVisible.registerSessionStorage('search-page-filter-bar');\n        this.route.queryParams.pipe(map((params) => params.reurl || false)).subscribe(this.reUrl);\n    }\n\n    private registerRepositories(): void {\n        rxjs.combineLatest([this.network.getRepositories(), this.config.observeConfig()]).subscribe(\n            ([repositories, config]) =>\n                this.availableRepositories.next(filterRepositories(repositories, config)),\n        );\n        this.availableRepositories.pipe(filter(notNull)).subscribe((availableRepositories) => {\n            this.activeRepository.setSystemValue(availableRepositories[0].id);\n            if (!availableRepositories.some(({ id }) => id === this.activeRepository.getValue())) {\n                this.activeRepository.resetUserValue();\n            }\n        });\n    }\n\n    private registerAllRepositories(): void {\n        this.showingAllRepositories.subscribe((showingAllRepositories) => {\n            if (showingAllRepositories) {\n                this.activeRepository.setOverrideValue(null);\n                this.filterBarIsVisible.resetUserValue();\n            } else {\n                this.activeRepository.unsetOverrideValue();\n            }\n        });\n    }\n\n    private registerAvailableMetadataSets(): void {\n        this.activeRepository\n            .observeValue()\n            .pipe(\n                filter(notNull),\n                tap(() => this.availableMetadataSets.next(null)),\n                switchMap((activeRepository) =>\n                    this.availableRepositories.pipe(\n                        filter(notNull),\n                        map((repositories) => repositories.find((r) => r.id === activeRepository)),\n                    ),\n                ),\n                switchMap((repository) => this.getAvailableMetadataSets(repository)),\n            )\n            .subscribe((availableMetadataSets) =>\n                this.availableMetadataSets.next(availableMetadataSets),\n            );\n    }\n\n    getAvailableMetadataSets(repository: Repository): Observable<MetadataSetInfo[]> {\n        return rxjs\n            .combineLatest([\n                this.mds.getAvailableMetadataSets(repository.id),\n                this.config.observeConfig(),\n            ])\n            .pipe(\n                map(([availableMetadataSets, config]) =>\n                    filterMetadataSets(availableMetadataSets, config, repository),\n                ),\n            );\n    }\n\n    private registerActiveMetadataSet(): void {\n        this.availableMetadataSets.subscribe((availableMetadataSets) => {\n            if (!availableMetadataSets) {\n                this.activeMetadataSet.setOverrideValue(null);\n            } else {\n                this.activeMetadataSet.unsetOverrideValue();\n            }\n            this.activeMetadataSet.setSystemValue(availableMetadataSets?.[0]?.id);\n            if (\n                availableMetadataSets &&\n                !availableMetadataSets.some((mds) => mds.id === this.activeMetadataSet.getValue())\n            ) {\n                this.activeMetadataSet.resetUserValue();\n            }\n        });\n    }\n\n    private registerSearchField({ autoFocusSearchField = true } = {}): SearchFieldInstance {\n        const searchFieldInstance = this.searchField.enable(\n            {\n                placeholder: 'SEARCH.SEARCH_STUFF',\n                autoFocus: autoFocusSearchField,\n            },\n            this.destroyed,\n        );\n        this.showingAllRepositories.subscribe((showingAllRepositories) => {\n            searchFieldInstance.patchConfig({\n                showFiltersButton: !showingAllRepositories,\n                enableFiltersAndSuggestions: !showingAllRepositories,\n            });\n        });\n        searchFieldInstance\n            .onFiltersButtonClicked()\n            .subscribe(() =>\n                this.filterBarIsVisible.setUserValue(!this.filterBarIsVisible.getValue()),\n            );\n        searchFieldInstance\n            .onSearchTriggered()\n            .subscribe(({ searchString }) => this.searchString.setUserValue(searchString || null));\n        this.searchString\n            .observeUserValue()\n            .subscribe((searchString) => searchFieldInstance.setSearchString(searchString));\n        rxjs.combineLatest([\n            this.activeRepository.observeValue(),\n            this.activeMetadataSet.observeValue(),\n        ])\n            .pipe(\n                takeUntil(this.destroyed),\n                filter(([repository, metadataSet]) => notNull(repository) && notNull(metadataSet)),\n                map(([repository, metadataSet]) => ({ repository, metadataSet })),\n            )\n            .subscribe((mdsInfo) => searchFieldInstance.setMdsInfo(mdsInfo));\n        searchFieldInstance.onFilterValuesChanged().subscribe((filterValues) => {\n            // console.log('onFilterValuesChanged', filterValues);\n            this.searchFilters.setUserValue(filterValues);\n        });\n        this.searchFilters.observeUserValue().subscribe((searchFilters) => {\n            // console.log('searchFilters.userValue', searchFilters);\n            searchFieldInstance.setFilterValues(searchFilters);\n            // Reset the visible search string if the user made unapplied changes.\n            searchFieldInstance.setSearchString(this.searchString.getValue());\n        });\n        return searchFieldInstance;\n    }\n\n    private registerLoadingProgress(): void {\n        this._results\n            .pipe(\n                filter(notNull),\n                switchMap((results) => results.loadingProgress),\n            )\n            .subscribe(this.loadingProgress);\n    }\n\n    private registerAddToCollection(): void {\n        this.route.queryParamMap\n            .pipe(\n                map((queryParamMap) => queryParamMap.get('addToCollection')),\n                distinctUntilChanged(),\n                switchMap((collectionId) =>\n                    collectionId ? this.collection.getCollection(collectionId) : rxjs.of(null),\n                ),\n            )\n            .subscribe((collection) => {\n                if (collection) {\n                    this.addToCollectionMode.next({\n                        collection,\n                        customOptions: this.getAddToCollectionOptions(collection),\n                    });\n                } else {\n                    this.addToCollectionMode.next(null);\n                }\n            });\n    }\n\n    private getAddToCollectionOptions(collection: Node): CustomOptions {\n        const addTo = new OptionItem('SEARCH.ADD_INTO_COLLECTION_SHORT', 'layers', (_, nodes) => {\n            this.mainNavService.getDialogs().addToCollectionList(collection, nodes, true, () =>\n                this.router.navigate([UIConstants.ROUTER_PREFIX + 'collections'], {\n                    queryParams: { id: collection.ref.id },\n                }),\n            );\n        });\n        addTo.elementType = OptionsHelperService.ElementTypesAddToCollection;\n        addTo.group = DefaultGroups.Reuse;\n        addTo.showAlways = true;\n        const cancel = new OptionItem('CANCEL', 'close', () =>\n            this.router.navigate([UIConstants.ROUTER_PREFIX, 'collections'], {\n                queryParams: { id: collection.ref.id },\n            }),\n        );\n        cancel.group = DefaultGroups.Delete;\n        cancel.elementType = [ElementType.Unknown];\n        return {\n            useDefaultOptions: false,\n            addOptions: [cancel, addTo],\n        };\n    }\n}\n\nfunction filterRepositories(repositories: Repository[], config: ClientConfig): Repository[] {\n    const enabledRepositories = config.availableRepositories;\n    if (enabledRepositories) {\n        return repositories.filter(\n            (repo) =>\n                (repo.isHomeRepo && config.availableRepositories.includes(HOME_REPOSITORY)) ||\n                config.availableRepositories.includes(repo.id),\n        );\n    } else {\n        return repositories;\n    }\n}\n\nfunction filterMetadataSets(\n    metadataSets: MetadataSetInfo[],\n    config: ClientConfig,\n    repository: Repository,\n): MetadataSetInfo[] {\n    const enabledMetadataSets = config.availableMds?.find(\n        (mdsConfig) =>\n            mdsConfig.repository === repository.id ||\n            (mdsConfig.repository === HOME_REPOSITORY && repository.isHomeRepo),\n    )?.mds;\n    if (enabledMetadataSets) {\n        return metadataSets.filter((mds) => enabledMetadataSets.includes(mds.id));\n    } else {\n        return metadataSets;\n    }\n}\n"],"names":["BehaviorSubject","GlobalSearchPageService","constructor","internal","setCustomTemplates","customTemplates","next","_","i0","ɵɵinject","GlobalSearchPageServiceInternal","_2","factory","ɵfac","providedIn","RepositoryIconPipe","nodeHelper","transform","value","getSourceIconRepoPath","ɵɵdirectiveInject","i1","NodeHelperService","pure","UntypedFormControl","rxjs","Subject","debounceTime","delay","filter","first","map","skip","takeUntil","tap","RestConstants","MdsEditorWrapperComponent","notNull","ɵɵelementStart","ɵɵlistener","SearchPageFilterBarComponent_button_0_Template_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","openSavedSearchesDialog","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind1","ɵɵadvance","ɵɵtextInterpolate1","mds_r7","id","name","ɵɵtemplate","SearchPageFilterBarComponent_mat_form_field_1_mat_option_5_Template","ɵɵtextInterpolate","ctx_r1","activeMdsForm","availableMetadataSets","ctx_r2","mdsParams","repository","setId","searchFilterValues","mdsExternalFilters","ɵɵelementContainer","SearchPageFilterBarComponent","authentication","dialogs","globalSearchPageInternal","ngZone","searchPage","searchService","translate","activeRepository","activeMetadataSet","getValue","searchFilters","reUrl","savedSearchesButtonIsVisible","mdsInitialized","causedValueChange","destroyed","ngOnInit","registerSearchFilterOverride","registerFormControl","registerMdsEditor","observeUserValue","pipe","subscribe","values","JSON","parse","stringify","registerSavedSearches","ngOnDestroy","complete","_this","_asyncToGenerator","dialogRef","saveSearchData","getSavedSearchInitialName","searchString","afterClosed","selectedSavedSearch","applySavedSearch","savedSearch","setUserValue","metadataSet","filters","_this2","components","getUserValue","repo","availableRepositories","find","push","title","getFilters","toPromise","filterLabels","Object","flat","label","length","join","get","merge","observeValue","setOverrideValue","forkJoin","initMdsEditor","PRIMARY_SEARCH_CRITERIA","observeLoginInfo","loginInfo","isGuest","mdsEditor","mdsEditorInstance","onMdsValuesChange","getInstanceService","widgets","mdsWidgets","filtersMdsWidgets","resetMds","getNeededFacets","neededFacets","facetsToFetch","userValues","getUserValues","defaultValues","stripValues","getDefaultValues","setSystemValue","unsetOverrideValue","runOutsideAngular","setTimeout","reInit","AuthenticationService","i2","DialogsService","i3","NgZone","i4","SearchPageService","SearchService","i5","TranslateService","selectors","viewQuery","SearchPageFilterBarComponent_Query","rf","ctx","SearchPageFilterBarComponent_button_0_Template","SearchPageFilterBarComponent_mat_form_field_1_Template","SearchPageFilterBarComponent_es_mds_editor_wrapper_3_Template","SearchPageFilterBarComponent_ng_container_4_Template","tmp_1_0","filterBarBottom","mergedValues","key","entries","keys","availableValues","strippedValues","objectDifference","a","b","NavigationStart","Scroll","switchMap","RestoreEntry","navigationId","state","scrollPosition","dataSourceStates","SearchPageRestoreService","_router","_viewportScroller","_entries","_restoreScrollTrigger","_currentNavigationId","_registerRouterEvents","_registerRestoreScrollTrigger","registerDataSource","dataSource","connect","isLoading","_putState","dumpState","registerRestoreFunction","_restoreState","entry","_getRestoreEntry","document","documentElement","scrollHeight","window","innerHeight","of","scrollToPosition","_getEntryOrCreate","events","event","navigationTrigger","restoredId","restoredState","position","Router","ViewportScroller","SearchPageResultsAllService","NodeEntriesDisplayType","Scope","addToCollection_r6","collection","ɵɵpureFunction1","_c0","customOptions","addOptions","ɵɵelementContainerStart","ɵɵelementContainerEnd","repo_r7","getTotal","ɵɵpureFunction0","_c1","ctx_r11","getShowMoreQueryParams","SearchPageResultsAllComponent_es_node_entries_wrapper_1_ng_template_2_ng_container_4_Template","SearchPageResultsAllComponent_es_node_entries_wrapper_1_ng_template_2_a_5_Template","_r4","getData","SearchPageResultsAllComponent_es_node_entries_wrapper_1_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵclassProp","isEmpty","Search","columns","Grid","_c2","_c3","addToCollectionMode","SearchPageResultsAllComponent","_searchPage","_results","repoData","loadingProgress","allEmpty","_searchString","_activeRepository","results","showingAllRepositories","_registerAllEmpty","repoId","getQueryParamEntry","progress","every","r","features","ɵɵProvidersFeature","decls","vars","consts","template","SearchPageResultsAllComponent_Template","SearchPageResultsAllComponent_es_small_collection_0_Template","SearchPageResultsAllComponent_es_node_entries_wrapper_1_Template","SearchPageResultsAllComponent_es_spinner_3_Template","SearchPageResultsAllComponent_div_5_Template","SearchPageResultsAllComponent_ng_template_6_Template","distinctUntilChanged","MdsHelper","fromSearchResults","NodeDataSourceRemote","_injector","_search","_searchPageRestore","_mds","_translate","_destroyed","_initRepoData","_registerPageRestore","_registerLoadingProgress","addNodes","nodes","homeRepoData","isHome","appendData","repositories","_getRepoData","loadingParams","loadingContent","_getMetadataSet","mdsDefinition","_getMdsDefinition","_getColumns","sort","_getDefaultSort","combineLatest","setRemote","_getSearchRemote","isLoadingSubject","isHomeRepo","getAvailableMetadataSets","getMetadataSet","getColumns","getSortInfo","default","criteria","property","request","search","body","maxItems","range","endIndex","startIndex","skipCount","sortAscending","sortProperties","sortBy","contentType","metadataset","query","DEFAULT_QUERY_NAME","propertyFilter","ALL","loadingParamsFinished","isFalse","loadingContentFinished","Injector","MdsService","TemporaryStorageService","ActionbarComponent","SearchPageResultsService","addToCollection_r11","ctx_r12","collectionsDataSource","SearchPageResultsComponent_ng_template_3_ng_container_4_Template","ctx_r3","_r9","ɵɵclassMapInterpolate1","ctx_r16","getCountClass","resultsDataSource","SearchPageResultsComponent_ng_template_8_ng_container_4_ng_container_1_Template","ctx_r13","SearchPageResultsComponent_ng_template_8_button_5_Template_button_click_0_listener","_r18","ctx_r17","toggleFilters","ɵɵpropertyInterpolate","ɵɵattribute","SearchPageResultsComponent_ng_template_8_ng_container_4_Template","SearchPageResultsComponent_ng_template_8_button_5_Template","SearchPageResultsComponent_ng_template_8_es_actionbar_6_Template","ctx_r6","getSelection","SearchPageResultsComponent","_actionbar","actionbar","temporaryStorageService","announcer","resultColumns","collectionColumns","sortConfig","diffCount","newlyLoadedElements","count","elementsLoadedTranslation","announce","filterBarIsVisible","set","NODE_RENDER_PARAMETER_DATA_SOURCE","LiveAnnouncer","i6","SearchPageResultsComponent_Query","SearchPageResultsComponent_Template","SearchPageResultsComponent_ng_container_0_Template","SearchPageResultsComponent_es_small_collection_1_Template","SearchPageResultsComponent_ng_template_3_Template","SearchPageResultsComponent_ng_template_8_Template","SearchPageResultsComponent_ng_template_10_Template","SearchPageResultsComponent_ng_template_12_Template","resultsTop","SearchCollections","SmallGrid","ɵɵpureFunction2","pairwise","share","startWith","ListItemSort","SearchRequestParams","MdsWidgetType","RestSearchService","totalResults","observeTotal","loadingCollections","_registerSearchObservables","_registerColumnsAndSortConfig","_registerResultDiffCount","searchRequestParams","x","y","equals","collectionRequestParams","params","remote","_getCollectionsSearchRemote","mds","sortInfo","allowed","active","direction","mode","_getSearchCriteria","facetLimit","facetMinCount","permissions","ACCESS_CC_PUBLISH","pagination","total","console","warn","data","requestSearch","facets","CCM_PROP_COLLECTION_PINNED_STATUS","CCM_PROP_COLLECTION_PINNED_ORDER","CM_MODIFIED_DATE","QUERY_NAME_COLLECTIONS","convertCriteria","previousCount","currentCount","c","widget","definition","type","MultiValueTree","attach","unfoldTreeChilds","MAX_QUERY_CONCAT_PARAMS","info","concat","RouterModule","SearchPageComponent","routes","path","component","children","SearchPageRoutingModule","_3","forChild","imports","exports","EventEmitter","SearchPageToolbarComponent","filterBarIsVisibleChange","toggleFilterBar","emit","inputs","outputs","SearchPageToolbarComponent_Template","SearchPageToolbarComponent_Template_button_click_0_listener","animate","style","transition","trigger","UIAnimation","UIConstants","ctx_r8","queryParamsAllRepositories","_r12","isActive","SearchPageComponent_ng_container_5_a_3_Template_a_click_0_listener","restoredCtx","_r15","repository_r13","$implicit","ctx_r14","goToRepository","ctx_r9","ɵɵsanitizeUrl","SearchPageComponent_ng_container_5_a_2_Template","SearchPageComponent_ng_container_5_a_3_Template","SearchPageComponent_ng_container_5_ng_container_6_Template","_r10","ctx_r0","_r2","SearchPageComponent_ng_container_6_ng_container_1_Template","SearchPageComponent_ng_template_7_button_9_Template_button_click_0_listener","_r21","ctx_r20","SearchPageComponent_ng_template_7_button_9_Template","SearchPageComponent_ng_template_7_Template_button_click_10_listener","_r23","ctx_r22","SearchPageComponent_ng_template_7_es_search_page_filter_bar_13_Template","isMobileScreen","SearchPageComponent_ng_template_11_button_0_Template_button_click_0_listener","_r26","ctx_r25","SearchPageComponent_ng_template_11_button_0_Template","ctx_r7","breadcrumbsService","breakpointObserver","mainNav","navigationScheduler","route","tabBarIsVisible","progressBarIsVisible","getIsMobileScreen","init","initMainNav","setNodePath","registerProgressBarIsVisible","registerFilterDialog","registerQueryParamsAllRepositories","scheduleNavigation","ROUTER_PREFIX","dialogRefPromise","_ref","openFilterDialog","then","close","_x","apply","arguments","queryParams","observeQueryParamEntry","searchStringEntry","addToCollection","openGenericDialog","contentTemplate","filtersDialogContent","minWidth","customHeaderBarContent","filtersDialogResetButton","numberResults","patchConfig","subtitle","toString","observe","matches","setMainNavConfig","currentScope","canOpen","onCreate","activeRepositoryIsHome","HOME_REPOSITORY","patchMainNavConfig","create","allowBinary","onProgressBarAnimationEnd","BreadcrumbsService","BreakpointObserver","MainNavService","NavigationScheduler","ActivatedRoute","i7","i8","SearchPageComponent_Query","SearchPageComponent_Template","SearchPageComponent_Template_mat_progress_bar_animationEnd_3_listener","SearchPageComponent_ng_container_5_Template","SearchPageComponent_ng_container_6_Template","SearchPageComponent_ng_template_7_Template","SearchPageComponent_ng_template_9_Template","SearchPageComponent_ng_template_11_Template","ɵɵpipeBind2","opacity","ANIMATION_TIME_NORMAL","MdsModule","SharedModule","EduSharingUiModule","SearchPageModule","declarations","DefaultGroups","ElementType","OptionItem","OptionsHelperService","other","config","mainNavService","network","router","searchField","userModifiableValues","createString","createBoolean","createDict","initBasicData","registerSearchField","initSearchPageUi","initQueryParams","registerAllRepositories","registerAddToCollection","initSearchFieldOnly","searchFieldInstance","autoFocusSearchField","showFiltersButton","onSearchTriggered","cleared","onFilterValuesChanged","registerRepositories","registerAvailableMetadataSets","registerActiveMetadataSet","registerLoadingProgress","registerQueryParameter","registerSessionStorage","reurl","getRepositories","observeConfig","filterRepositories","some","resetUserValue","filterMetadataSets","enable","placeholder","autoFocus","enableFiltersAndSuggestions","onFiltersButtonClicked","setSearchString","mdsInfo","setMdsInfo","filterValues","setFilterValues","queryParamMap","collectionId","getCollection","getAddToCollectionOptions","addTo","getDialogs","addToCollectionList","navigate","ref","elementType","ElementTypesAddToCollection","group","Reuse","showAlways","cancel","Delete","Unknown","useDefaultOptions","CollectionService","ConfigService","NetworkService","SearchFieldService","UserModifiableValuesService","enabledRepositories","includes","metadataSets","enabledMetadataSets","availableMds","mdsConfig"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}