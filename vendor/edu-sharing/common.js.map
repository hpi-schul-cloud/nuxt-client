{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;AAAuC;AAGvC;;;AAGM,MAAOC,SAAS;EAClB;;;EAGO,OAAOC,SAASA,CACnBC,MAAgB,EAChBC,IAAyB,EACzBC,cAAyB;IAEzB,IAAIC,GAAG,GAAGH,MAAM,GAAGA,MAAM,CAACI,GAAG,CAAEC,CAAC,IAAK,GAAG,GAAGA,CAAC,GAAG,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;IAClE,KAAK,MAAMC,CAAC,IAAIN,IAAW,EAAE;MACzB,IAAIE,GAAG,EAAE;QACLA,GAAG,IAAI,IAAI;;MAEf,IAAIK,IAAI,GAAa,EAAE;MACvB,IAAID,CAAC,YAAYE,KAAK,EAAE;QACpBD,IAAI,GAAGD,CAAC;OACX,MAAM;QACH,KAAK,MAAMF,CAAC,IAAIH,cAAc,IAAIF,MAAM,EAAE;UACtCQ,IAAI,CAACE,IAAI,CAACH,CAAC,CAACF,CAAC,CAAC,CAAC;;;MAGvBF,GAAG,IAAIK,IAAI,CACNJ,GAAG,CAAEO,CAAC,IAAK,GAAG,IAAIA,CAAC,KAAK,IAAI,GAAG,CAACA,CAAC,GAAG,EAAE,EAAEC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CACxEN,IAAI,CAAC,GAAG,CAAC;;IAElB,OAAOH,GAAG;EACd;EACO,OAAOU,QAAQA,CAClBC,QAAgB,EAChBd,MAAgB,EAChBC,IAAyB,EACzBC,cAAA,GAA2B,IAAI;IAE/BL,gDAAM,CAACkB,eAAe,CAClBD,QAAQ,CAACF,OAAO,CAAC,mBAAmB,EAAE,GAAG,CAAC,GAAG,MAAM,EACnDd,SAAS,CAACC,SAAS,CAACC,MAAM,EAAEC,IAAI,EAAEC,cAAc,CAAC,CACpD;EACL","sources":["./src/app/core-module/csv.helper.ts"],"sourcesContent":["import { Helper } from './rest/helper';\nimport { Values } from '../features/mds/types/types';\n\n/**\n * Helper class to generate comma seperated (csv) data from arrays\n */\nexport class CsvHelper {\n    /**\n     * if data is an object, the values for each row will be fetched based on the headerInternal list or (if it is not present) the header list\n     */\n    public static fromArray(\n        header: string[],\n        data: string[][] | Values,\n        headerInternal?: string[],\n    ) {\n        let csv = header ? header.map((h) => '\"' + h + '\"').join(';') : '';\n        for (const d of data as any) {\n            if (csv) {\n                csv += '\\n';\n            }\n            let line: string[] = [];\n            if (d instanceof Array) {\n                line = d;\n            } else {\n                for (const h of headerInternal || header) {\n                    line.push(d[h]);\n                }\n            }\n            csv += line\n                .map((l) => '\"' + (l !== null ? (l + '').replace(/\"/g, '\"\"') : '') + '\"')\n                .join(';');\n        }\n        return csv;\n    }\n    public static download(\n        filename: string,\n        header: string[],\n        data: string[][] | Values,\n        headerInternal: string[] = null,\n    ) {\n        Helper.downloadContent(\n            filename.replace(/[^a-z0-9 \\-().]/gi, '_') + '.csv',\n            CsvHelper.fromArray(header, data, headerInternal),\n        );\n    }\n}\n"],"names":["Helper","CsvHelper","fromArray","header","data","headerInternal","csv","map","h","join","d","line","Array","push","l","replace","download","filename","downloadContent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}