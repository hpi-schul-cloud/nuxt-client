{"version":3,"file":"src_app_features_dialogs_dialog-modules_simple-edit-dialog_simple-edit-dialog_module_ts.js","mappings":"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","sources":["./src/app/features/dialogs/dialog-modules/simple-edit-dialog/has-permission.pipe.ts","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-dialog-data.ts","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-dialog.component.ts","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-dialog.component.html","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-dialog.module.ts","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-invite/simple-edit-invite.component.ts","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-invite/simple-edit-invite.component.html","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-license/simple-edit-license.component.ts","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-license/simple-edit-license.component.html","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-metadata/simple-edit-metadata.component.ts","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/simple-edit-metadata/simple-edit-metadata.component.html","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/user-tile/user-tile.component.ts","./src/app/features/dialogs/dialog-modules/simple-edit-dialog/user-tile/user-tile.component.html"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Node } from 'ngx-edu-sharing-api';\n\n@Pipe({\n    name: 'hasPermission',\n})\nexport class HasPermissionPipe implements PipeTransform {\n    transform(nodes: Node[], permission: string): boolean {\n        return nodes?.every((node) => node.access.includes(permission));\n    }\n}\n","import { Node } from '../../../../core-module/core.module';\n\nexport class SimpleEditDialogData {\n    nodes: Node[];\n    fromUpload: boolean;\n}\n\nexport type SimpleEditDialogResult = Node[] | null;\n","import { Component, Inject, ViewChild } from '@angular/core';\nimport { LocalEventsService } from 'ngx-edu-sharing-ui';\nimport * as rxjs from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport {\n    DialogButton,\n    Node,\n    NodeWrapper,\n    RestConnectorService,\n    RestConstants,\n    RestNodeService,\n} from '../../../../core-module/core.module';\nimport { Toast } from '../../../../services/toast';\nimport { CARD_DIALOG_DATA } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport { DialogsService } from '../../dialogs.service';\nimport { SAVE_OR_CANCEL } from '../generic-dialog/generic-dialog-data';\nimport { SimpleEditDialogData, SimpleEditDialogResult } from './simple-edit-dialog-data';\nimport { SimpleEditInviteComponent } from './simple-edit-invite/simple-edit-invite.component';\nimport { SimpleEditLicenseComponent } from './simple-edit-license/simple-edit-license.component';\nimport { SimpleEditMetadataComponent } from './simple-edit-metadata/simple-edit-metadata.component';\n\n@Component({\n    selector: 'es-simple-edit-dialog',\n    templateUrl: './simple-edit-dialog.component.html',\n    styleUrls: ['./simple-edit-dialog.component.scss'],\n})\nexport class SimpleEditDialogComponent {\n    @ViewChild('metadata') metadata: SimpleEditMetadataComponent;\n    @ViewChild('invite') invite: SimpleEditInviteComponent;\n    @ViewChild('license') license: SimpleEditLicenseComponent;\n\n    protected _nodes: Node[] = this.data.nodes;\n    private initState = { license: false, invite: false };\n    protected tpInvite: boolean;\n    protected tpLicense: boolean;\n\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: SimpleEditDialogData,\n        private dialogRef: CardDialogRef<SimpleEditDialogData, SimpleEditDialogResult>,\n        private connector: RestConnectorService,\n        private dialogs: DialogsService,\n        private localEvents: LocalEventsService,\n        private nodeApi: RestNodeService,\n        private toast: Toast,\n    ) {\n        this.dialogRef.patchState({ isLoading: true });\n        this.connector\n            .hasToolPermission(RestConstants.TOOLPERMISSION_INVITE)\n            .subscribe((tp) => (this.tpInvite = tp));\n        this.connector\n            .hasToolPermission(RestConstants.TOOLPERMISSION_LICENSE)\n            .subscribe((tp) => (this.tpLicense = tp));\n        this._initButtons();\n    }\n\n    private _initButtons(): void {\n        this.dialogRef.patchConfig({\n            buttons: [\n                new DialogButton('CANCEL', { color: 'standard' }, () => this._cancel()),\n                new DialogButton('SAVE', { color: 'primary' }, () => this._saveAndClose()),\n            ],\n        });\n    }\n\n    private _saveAndClose(): void {\n        this._save().subscribe((nodes) => {\n            if (nodes && nodes.length > 0) {\n                this.localEvents.nodesChanged.next(nodes);\n                this.dialogRef.close(nodes);\n            }\n        });\n    }\n\n    /**\n     * Closes the dialog without saving data.\n     */\n    private _cancel(): void {\n        this.dialogRef.close(null);\n    }\n\n    /**\n     * Opens the full MDS dialog on top of the current dialog.\n     */\n    protected async _openMetadata(): Promise<void> {\n        const upToDate = await this._ensureUpToDate();\n        if (!upToDate) {\n            return;\n        }\n        const dialogRef = await this.dialogs.openMdsEditorDialogForNodes({\n            nodes: this._nodes,\n        });\n        const updatedNodes = await dialogRef.afterClosed().toPromise();\n        if (updatedNodes) {\n            this._nodes = updatedNodes;\n        }\n    }\n\n    /**\n     * Opens the share dialog on top of the current dialog.\n     */\n    protected async _openShare(): Promise<void> {\n        const upToDate = await this._ensureUpToDate();\n        if (!upToDate) {\n            return;\n        }\n        const dialogRef = await this.dialogs.openShareDialog({\n            nodes: this._nodes,\n        });\n        await dialogRef.afterClosed().toPromise();\n        this.dialogRef.patchState({ isLoading: true });\n        rxjs.forkJoin(\n            this._nodes.map((n) => this.nodeApi.getNodeMetadata(n.ref.id, [RestConstants.ALL])),\n        ).subscribe((nodes: NodeWrapper[]) => {\n            this._nodes = nodes.map((n) => n.node);\n            this.dialogRef.patchState({ isLoading: false });\n        });\n    }\n\n    /**\n     * Opens the license dialog on top of the current dialog.\n     */\n    protected async _openLicense(): Promise<void> {\n        const upToDate = await this._ensureUpToDate();\n        if (!upToDate) {\n            return;\n        }\n        const dialogRef = await this.dialogs.openLicenseDialog({\n            kind: 'nodes',\n            nodes: this._nodes,\n        });\n        const updatedNodes = await dialogRef.afterClosed().toPromise();\n        if (updatedNodes) {\n            this._nodes = updatedNodes;\n        }\n    }\n\n    /**\n     * Saves changed data.\n     *\n     * @returns updated nodes if successful, `null` otherwise\n     */\n    private _save(): Observable<Node[] | null> {\n        if (!this.metadata.validate()) {\n            return rxjs.of(null);\n        }\n        this.dialogRef.patchState({ isLoading: true });\n        return this.metadata.save().pipe(\n            switchMap(() => this.invite.save()),\n            switchMap(() => this.license.save()),\n            switchMap(() =>\n                rxjs.forkJoin(\n                    this._nodes.map((n) =>\n                        this.nodeApi.getNodeMetadata(n.ref.id, [RestConstants.ALL]),\n                    ),\n                ),\n            ),\n            map((nodes) => {\n                this.toast.toast('SIMPLE_EDIT.SAVED' + (nodes.length === 1 ? '' : '_MULTIPLE'), {\n                    name: nodes[0].node.name,\n                    count: nodes.length,\n                });\n                this.dialogRef.patchState({ isLoading: false });\n                return nodes.map((n) => n.node);\n            }),\n            catchError((error) => {\n                this.toast.error(error);\n                this.dialogRef.patchState({ isLoading: false });\n                return rxjs.of(null);\n            }),\n        );\n    }\n\n    /**\n     * Checks if there are any unsaved changes and prompts the user to save any changes if so.\n     *\n     * When the user accepts, saves any data.\n     *\n     * @returns whether data is up-to-date\n     */\n    private async _ensureUpToDate(): Promise<boolean> {\n        if (!this._isDirty()) {\n            return true;\n        }\n        const dialogRef = await this.dialogs.openGenericDialog({\n            title: 'SIMPLE_EDIT.DIRTY.TITLE',\n            message: 'SIMPLE_EDIT.DIRTY.MESSAGE',\n            buttons: SAVE_OR_CANCEL,\n        });\n        const result = await dialogRef.afterClosed().toPromise();\n        if (result === 'SAVE') {\n            const updatedNodes = await this._save().toPromise();\n            if (updatedNodes) {\n                this._nodes = updatedNodes;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns true if there are unsaved changes.\n     */\n    private _isDirty(): boolean {\n        return this.metadata.isDirty() || this.invite.isDirty() || this.license.isDirty();\n    }\n\n    /**\n     * Sets the state for the given component to initialized.\n     *\n     * When all components are initialized, turns off the loading spinner.\n     */\n    protected _updateInitState(component: keyof SimpleEditDialogComponent['initState']) {\n        this.initState[component] = true;\n        if (this.initState.invite && this.initState.license) {\n            this.dialogRef.patchState({ isLoading: false });\n        }\n    }\n\n    /**\n     * Handles an error in a sub component.\n     */\n    protected _handleError(error: any): void {\n        if (error) {\n            this.toast.error(error);\n        }\n\n        // Before migration to standalone modules, this used to close the dialog on error. We copied\n        // the behavior, but keeping the dialog and just turning off the loading spinner might be\n        // the more sensible choice.\n\n        // this.dialogRef.patchState({ isLoading: false });\n        this.dialogRef.close(null);\n    }\n}\n","<div class=\"block\">\n  <div class=\"top\">\n    <h3 class=\"mat-heading-3\">\n      {{ 'SIMPLE_EDIT.METADATA.TITLE' | translate }}\n    </h3>\n    <div>\n      <button mat-button color=\"primary\" (click)=\"_openMetadata()\" data-test=\"more-metadata-button\">\n        <i esIcon=\"edit\"></i> {{ 'SIMPLE_EDIT.METADATA.MORE' | translate }}\n      </button>\n    </div>\n  </div>\n  <es-simple-edit-metadata\n    #metadata\n    [nodes]=\"_nodes\"\n    [fromUpload]=\"data.fromUpload\"\n    (onError)=\"_handleError($event)\"\n  ></es-simple-edit-metadata>\n</div>\n<div class=\"block\">\n  <div class=\"top\">\n    <h3 class=\"mat-heading-3\">\n      {{ 'SIMPLE_EDIT.INVITE.TITLE' | translate }}\n    </h3>\n    <div>\n      <button\n        mat-button\n        color=\"primary\"\n        [disabled]=\"!tpInvite || !(_nodes | hasPermission : 'ChangePermissions')\"\n        (click)=\"_openShare()\"\n      >\n        <i esIcon=\"group_add\"></i> {{ 'SIMPLE_EDIT.INVITE.MORE' | translate }}\n      </button>\n    </div>\n  </div>\n  <es-simple-edit-invite\n    #invite\n    [nodes]=\"_nodes\"\n    [fromUpload]=\"data.fromUpload\"\n    (onError)=\"_handleError($event)\"\n    (onInitFinished)=\"_updateInitState('invite')\"\n  ></es-simple-edit-invite>\n</div>\n<div class=\"block\">\n  <div class=\"top\">\n    <h3 class=\"mat-heading-3\">\n      {{ 'SIMPLE_EDIT.LICENSE.TITLE' | translate }}\n    </h3>\n    <div>\n      <button mat-button color=\"primary\" [disabled]=\"!tpLicense\" (click)=\"_openLicense()\">\n        <i esIcon=\"copyright\"></i> {{ 'SIMPLE_EDIT.LICENSE.MORE' | translate }}\n      </button>\n    </div>\n  </div>\n  <es-simple-edit-license\n    #license\n    [nodes]=\"_nodes\"\n    [fromUpload]=\"data.fromUpload\"\n    (onError)=\"_handleError($event)\"\n    (onInitFinished)=\"_updateInitState('license')\"\n  ></es-simple-edit-license>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { MdsModule } from '../../../mds/mds.module';\nimport { SimpleEditDialogComponent } from './simple-edit-dialog.component';\nimport { SimpleEditInviteComponent } from './simple-edit-invite/simple-edit-invite.component';\nimport { SimpleEditLicenseComponent } from './simple-edit-license/simple-edit-license.component';\nimport { SimpleEditMetadataComponent } from './simple-edit-metadata/simple-edit-metadata.component';\nimport { UserTileComponent } from './user-tile/user-tile.component';\nimport { HasPermissionPipe } from './has-permission.pipe';\n\nexport { SimpleEditDialogComponent };\n\n@NgModule({\n    declarations: [\n        SimpleEditDialogComponent,\n        SimpleEditInviteComponent,\n        SimpleEditLicenseComponent,\n        SimpleEditMetadataComponent,\n        UserTileComponent,\n        HasPermissionPipe,\n    ],\n    imports: [SharedModule, MdsModule],\n})\nexport class SimpleEditDialogModule {}\n","import { trigger } from '@angular/animations';\nimport { ApplicationRef, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatButtonToggleGroup } from '@angular/material/button-toggle';\nimport { AuthenticationService } from 'ngx-edu-sharing-api';\nimport { UIAnimation } from 'ngx-edu-sharing-ui';\nimport { Observable, forkJoin } from 'rxjs';\nimport {\n    AuthorityProfile,\n    ConfigurationService,\n    Group,\n    Node,\n    Organization,\n    Permission,\n    Permissions,\n    RestConnectorService,\n    RestConstants,\n    RestHelper,\n    RestIamService,\n    RestNodeService,\n    RestOrganizationService,\n} from '../../../../../core-module/core.module';\nimport { Helper } from '../../../../../core-module/rest/helper';\nimport { Toast } from '../../../../../services/toast';\nimport { UIHelper } from '../../../../../core-ui-module/ui-helper';\n\ntype Org = { organization: Organization; groups?: any };\n\nclass SimpleEditGroupConfig {\n    toolpermission?: string;\n    groups: string[];\n}\n\n@Component({\n    selector: 'es-simple-edit-invite',\n    templateUrl: 'simple-edit-invite.component.html',\n    styleUrls: ['simple-edit-invite.component.scss'],\n    animations: [\n        trigger('fade', UIAnimation.fade()),\n        trigger('cardAnimation', UIAnimation.cardAnimation()),\n    ],\n})\nexport class SimpleEditInviteComponent {\n    @ViewChild('orgGroup') orgGroup: MatButtonToggleGroup;\n    @ViewChild('globalGroup') globalGroup: MatButtonToggleGroup;\n    _nodes: Node[];\n    multipleParents: boolean;\n    dirty = false;\n    parentPermissions: Permission[];\n    parentAuthorities: Permission[] = [];\n    organizations: Org[];\n    /**\n     * When true, we know that we only handling with simple permissions\n     * this will cause that editing permission will REPLACE the permissions, rather than EXPAND them\n     */\n    stablePermissionState = false;\n    organizationGroups: string[];\n    globalGroups: Group[] | any = [];\n    private nodesPermissions: Permissions[];\n    private initialState: string;\n    recentAuthorities: AuthorityProfile[];\n    private currentPermissions: Permission[];\n    tpInvite: boolean;\n    tpInviteEveryone: boolean;\n    missingNodePermissions: boolean;\n    inherited: boolean;\n    @Input() set nodes(nodes: Node[]) {\n        this._nodes = nodes;\n        if (nodes) {\n            this.prepare();\n        }\n    }\n    @Input() fromUpload: boolean;\n    @Output() onInitFinished = new EventEmitter<boolean>();\n    @Output() onError = new EventEmitter<any>();\n\n    constructor(\n        private nodeApi: RestNodeService,\n        private connector: RestConnectorService,\n        private applicationRef: ApplicationRef,\n        private configService: ConfigurationService,\n        private iamApi: RestIamService,\n        private organizationApi: RestOrganizationService,\n        public authenticationService: AuthenticationService,\n        private toast: Toast,\n    ) {\n        this.configService\n            .get('simpleEdit.organization.groupTypes', [RestConstants.GROUP_TYPE_ADMINISTRATORS])\n            .subscribe(\n                (data) =>\n                    // only display non-empty groups\n                    (this.organizationGroups = data.filter((d: string) => !!d)),\n            );\n        this.configService\n            .get('simpleEdit.globalGroups', [{ groups: [RestConstants.AUTHORITY_EVERYONE] }])\n            .subscribe((data) => {\n                this.loadGlobalGroups(data);\n            });\n        this.connector\n            .hasToolPermission(RestConstants.TOOLPERMISSION_INVITE)\n            .subscribe((tp) => (this.tpInvite = tp));\n        this.connector\n            .hasToolPermission(RestConstants.TOOLPERMISSION_INVITE_ALLAUTHORITIES)\n            .subscribe((tp) => (this.tpInviteEveryone = tp));\n    }\n    isDirty() {\n        if (this.hasInvalidState()) {\n            return false;\n        }\n        if (this.dirty) {\n            return true;\n        }\n        return (\n            this.getSelectedAuthority() != null &&\n            !Helper.objectEquals(this.initialState, this.getSelectedAuthority())\n        );\n    }\n    save() {\n        return new Observable<void>((observer) => {\n            if (!this.isDirty()) {\n                observer.next();\n                observer.complete();\n                return;\n            }\n            const authority = this.getSelectedAuthority();\n            let addPermission: Permission = null;\n            const publish = authority === RestConstants.AUTHORITY_EVERYONE;\n            if (authority != null) {\n                addPermission = new Permission();\n                addPermission.authority = {\n                    authorityName: authority,\n                    authorityType: authority.startsWith(RestConstants.GROUP_PREFIX)\n                        ? RestConstants.AUTHORITY_TYPE_GROUP\n                        : RestConstants.AUTHORITY_TYPE_USER,\n                };\n                // if EVERYONE, we do a \"publishing\"\n                if (publish) {\n                    addPermission.permissions = [\n                        RestConstants.PERMISSION_CONSUMER,\n                        RestConstants.ACCESS_CC_PUBLISH,\n                    ];\n                } else {\n                    addPermission.permissions = [RestConstants.PERMISSION_CONSUMER];\n                }\n            }\n            forkJoin(\n                this._nodes.map((n, i) => {\n                    let permissions = this.nodesPermissions[i].localPermissions;\n                    // if currentPermissions available (single node mode), we will check the state and override if possible\n                    if (this.currentPermissions && this.currentPermissions.length) {\n                        permissions.permissions = [];\n                    }\n                    if (addPermission) {\n                        if (this.stablePermissionState) {\n                            permissions.permissions = [addPermission];\n                        } else {\n                            permissions.permissions =\n                                UIHelper.mergePermissionsWithHighestPermission(\n                                    permissions.permissions,\n                                    [addPermission],\n                                );\n                        }\n                    }\n                    if (this.currentPermissions && this.currentPermissions.length) {\n                        // all global groups will get removed\n                        this.currentPermissions = this.currentPermissions.filter(\n                            (p) =>\n                                this.getAvailableGlobalGroups().indexOf(\n                                    p.authority.authorityName,\n                                ) === -1,\n                        );\n                        permissions.permissions = UIHelper.mergePermissionsWithHighestPermission(\n                            permissions.permissions,\n                            this.currentPermissions,\n                        );\n                    }\n                    permissions = RestHelper.copyAndCleanPermissions(\n                        permissions.permissions,\n                        this.nodesPermissions[i].localPermissions.inherited,\n                    );\n                    return this.nodeApi.setNodePermissions(n.ref.id, permissions, false);\n                }),\n            ).subscribe(\n                () => {\n                    observer.next(null);\n                    observer.complete();\n                },\n                (error) => {\n                    observer.error(error);\n                    observer.complete();\n                },\n            );\n        });\n    }\n\n    private getSelectedAuthority() {\n        if (this.hasInvalidState()) {\n            return null;\n        }\n        let authority: string = null;\n        if (this.orgGroup.value) {\n            if (this.orgGroup.value === 'unset') {\n                // do nothing\n            } else {\n                authority = this.orgGroup.value;\n            }\n        } else if (this.globalGroup.value) {\n            authority = this.globalGroup.value;\n        } else {\n            console.warn('invalid value for button toggle in simple invite dialog');\n        }\n        return authority;\n    }\n\n    private prepare() {\n        const parents = Array.from(new Set(this._nodes.map((n) => n.parent.id)));\n        this.multipleParents = parents.length > 1;\n        if (this.multipleParents) {\n            this.setInitialState();\n            return;\n        }\n        if (\n            this._nodes.find(\n                (n) => n.access.indexOf(RestConstants.ACCESS_CHANGE_PERMISSIONS) === -1,\n            )\n        ) {\n            this.missingNodePermissions = true;\n            this.setInitialState();\n            return;\n        }\n        this.nodeApi.getNodePermissions(parents[0]).subscribe(\n            (parent) => {\n                this.parentPermissions = parent.permissions.localPermissions.permissions.concat(\n                    parent.permissions.inheritedPermissions,\n                );\n                // filter and distinct them first\n                const authorities = Array.from(\n                    new Set(\n                        this.parentPermissions\n                            .map((p) => p.authority.authorityName)\n                            .filter(\n                                (a) =>\n                                    a !== this.connector.getCurrentLogin().authorityName &&\n                                    a !== RestConstants.AUTHORITY_ROLE_OWNER,\n                            ),\n                    ),\n                );\n                // now, convert them back to objects\n                this.parentAuthorities = authorities.map((a) =>\n                    this.parentPermissions.find((p) => p.authority.authorityName === a),\n                );\n            },\n            (error) => {\n                if (error.status === RestConstants.HTTP_FORBIDDEN) {\n                    this.missingNodePermissions = true;\n                } else {\n                    this.onError.emit(error);\n                }\n            },\n        );\n        forkJoin(this._nodes.map((n) => this.nodeApi.getNodePermissions(n.ref.id))).subscribe(\n            (permissions) => {\n                this.nodesPermissions = permissions.map((p) => p.permissions);\n                this.inherited = permissions.some((p) => p.permissions.localPermissions.inherited);\n                // The amount of orgs is still limited to the maximum amount returned by default!\n                this.organizationApi.getOrganizations('', true).subscribe((orgs) => {\n                    const filter = this.configService.instant('simpleEdit.organizationFilter');\n                    if (filter) {\n                        const reg = new RegExp(filter);\n                        orgs.organizations = orgs.organizations.filter((o) => {\n                            return reg.exec(o.authorityName) != null;\n                        });\n                    }\n                    if (orgs.organizations.length >= 1) {\n                        this.organizations = orgs.organizations.map((o) => {\n                            return {\n                                organization: o,\n                                groups: {},\n                            };\n                        });\n                        forkJoin(\n                            this.organizations.map((o) => {\n                                return new Observable<Org>((observer) => {\n                                    if (this.organizationGroups?.length) {\n                                        forkJoin(\n                                            this.organizationGroups.map((g) =>\n                                                this.iamApi.getSubgroupByType(\n                                                    o.organization.authorityName,\n                                                    g,\n                                                ),\n                                            ),\n                                        ).subscribe(\n                                            (groups) => {\n                                                groups.forEach((g) => {\n                                                    o.groups[g.group.profile.groupType] = g.group;\n                                                });\n                                                observer.next(o);\n                                                observer.complete();\n                                            },\n                                            (error) => {\n                                                console.warn(\n                                                    'Some group roles could not be found',\n                                                    error,\n                                                );\n                                                observer.next(o);\n                                                observer.complete();\n                                            },\n                                        );\n                                    } else {\n                                        observer.next(o);\n                                        observer.complete();\n                                    }\n                                });\n                            }),\n                        ).subscribe((o) => {\n                            this.organizations = o;\n                            this.detectPermissionState();\n                        });\n                    } else {\n                        this.detectPermissionState();\n                    }\n                });\n            },\n            (error) => {\n                this.onError.emit(error);\n            },\n        );\n    }\n\n    private loadGlobalGroups(config: SimpleEditGroupConfig[]) {\n        const groupConfigs = config.filter(\n            (g) => !g.toolpermission || this.connector.hasToolPermissionInstant(g.toolpermission),\n        );\n        let groups: string[];\n        if (groupConfigs.length === 0) {\n            console.warn(\n                'Invalid config for simple edit / global groups. No matching entry was found',\n            );\n            groups = [];\n        } else {\n            groups = groupConfigs[0].groups || [];\n        }\n        this.globalGroups = [];\n        // filter group everyone and handle it seperately\n        if (groups.find((d) => d === RestConstants.AUTHORITY_EVERYONE)) {\n            groups = groups.filter((d) => d !== RestConstants.AUTHORITY_EVERYONE);\n            this.globalGroups.push({\n                authorityName: RestConstants.AUTHORITY_EVERYONE,\n                authorityType: RestConstants.AUTHORITY_TYPE_EVERYONE,\n            });\n        }\n        forkJoin(groups.map((d) => this.iamApi.getGroup(d))).subscribe(\n            (groups) => (this.globalGroups = groups.map((g) => g.group).concat(this.globalGroups)),\n        );\n    }\n\n    updateValue(mode: 'org' | 'global') {\n        if (mode === 'org') {\n            this.globalGroup.value = null;\n        } else {\n            this.orgGroup.value = null;\n        }\n    }\n\n    private async detectPermissionState() {\n        // wait 1 tick so that the mat toggle is ready to accept values\n        await this.applicationRef.tick();\n        if (this.hasInvalidState()) {\n            this.setInitialState();\n            return;\n        }\n        const availableToggleGroups = this.getAvailableGlobalGroups();\n        let unset = false;\n        let invalid = false;\n        let activeToggle: string;\n        for (const perm of this.nodesPermissions) {\n            const list = perm.localPermissions.permissions;\n            // filter((p) => p.authority.authorityName !== this.connector.getCurrentLogin().authorityName);\n            if (this._nodes.length === 1) {\n                this.currentPermissions = list;\n            } else {\n                this.currentPermissions = [];\n            }\n            if (list.length > 0) {\n                const consumers = list.filter(\n                    (p) => p.permissions.indexOf(RestConstants.PERMISSION_CONSUMER) !== -1,\n                );\n                const toggle = consumers.filter(\n                    (c) => availableToggleGroups.indexOf(c.authority.authorityName) !== -1,\n                );\n                if (\n                    toggle.length === 1 &&\n                    (!activeToggle || activeToggle === toggle[0].authority.authorityName)\n                ) {\n                    activeToggle = toggle[0].authority.authorityName;\n                } else {\n                    invalid = true;\n                }\n            } else {\n                unset = true;\n            }\n        }\n        this.stablePermissionState = !invalid;\n        if (unset || invalid) {\n            this.orgGroup.value = 'unset';\n        } else {\n            if (this.organizations?.length && activeToggle) {\n                const match = this.organizations.find(\n                    (o) => o.organization.authorityName === activeToggle,\n                );\n                if (match) {\n                    this.orgGroup.value = match.organization.authorityName;\n                    this.setInitialState();\n                    return;\n                }\n            }\n            if (this.organizations?.length) {\n                for (const org of this.organizations) {\n                    for (const key of Object.keys(org.groups)) {\n                        if (activeToggle === org.groups[key].authorityName) {\n                            this.orgGroup.value = activeToggle;\n                            this.setInitialState();\n                            return;\n                        }\n                    }\n                }\n            }\n            if (this.globalGroups) {\n                for (const globalGroup of this.globalGroups) {\n                    if (activeToggle === globalGroup.authorityName) {\n                        this.globalGroup.value = activeToggle;\n                        this.setInitialState();\n                        return;\n                    }\n                }\n            }\n            this.orgGroup.value = 'unset';\n        }\n        this.setInitialState();\n    }\n\n    private getAvailableGlobalGroups() {\n        let availableToggleGroups: string[] = [];\n        if (this.organizations?.length) {\n            availableToggleGroups = availableToggleGroups.concat(\n                this.organizations.map((o) => o.organization.authorityName),\n            );\n            for (const org of this.organizations) {\n                for (const key of Object.keys(org.groups)) {\n                    availableToggleGroups.push(org.groups[key].authorityName);\n                }\n            }\n        }\n        if (this.globalGroups) {\n            for (const globalGroup of this.globalGroups) {\n                availableToggleGroups.push(globalGroup.authorityName);\n            }\n        }\n        return availableToggleGroups;\n    }\n\n    hasInvalidState() {\n        return (\n            this.multipleParents ||\n            (this.inherited && this.parentAuthorities.length > 0) ||\n            !this.tpInvite ||\n            this.missingNodePermissions\n        );\n    }\n\n    private setInitialState() {\n        this.iamApi.getRecentlyInvited().subscribe(\n            (recent) => {\n                this.recentAuthorities = recent.authorities\n                    .filter((a) => this.getAvailableGlobalGroups().indexOf(a.authorityName) === -1)\n                    .slice(0, 6);\n                this.initialState = this.getSelectedAuthority();\n                this.onInitFinished.emit(true);\n            },\n            (error) => this.onError.emit(error),\n        );\n    }\n\n    isInvited(authority: AuthorityProfile): boolean {\n        return this.currentPermissions\n            ? !!this.currentPermissions.find(\n                  (p) => p.authority.authorityName === authority.authorityName,\n              )\n            : false;\n    }\n\n    toggleInvitation(authority: AuthorityProfile) {\n        this.dirty = true;\n        if (this.isInvited(authority)) {\n            this.currentPermissions = this.currentPermissions.filter(\n                (p) => p.authority.authorityName !== authority.authorityName,\n            );\n            console.log(this.currentPermissions);\n        } else {\n            const permission = new Permission();\n            permission.authority = {\n                authorityName: authority.authorityName,\n                authorityType: authority.authorityType,\n            };\n            permission.permissions = [RestConstants.PERMISSION_CONSUMER];\n            this.currentPermissions.push(permission);\n        }\n    }\n}\n","<es-info-message message=\"SIMPLE_EDIT.INVITE.ERROR_TOOLPERMISSION_MISSING\" *ngIf=\"!tpInvite\">\n</es-info-message>\n<es-info-message\n  message=\"SIMPLE_EDIT.INVITE.ERROR_PERMISSION_MISSING\"\n  *ngIf=\"missingNodePermissions && tpInvite\"\n>\n</es-info-message>\n<es-info-message message=\"SIMPLE_EDIT.INVITE.ERROR_MULTIPLE_PARENTS\" *ngIf=\"multipleParents\">\n  <div>{{ 'SIMPLE_EDIT.INVITE.ERROR_HELP' | translate }}</div>\n</es-info-message>\n<es-info-message\n  message=\"SIMPLE_EDIT.INVITE.ERROR_INHERIT\"\n  *ngIf=\"inherited && parentAuthorities.length > 0\"\n>\n  <div class=\"parent-authorities\">\n    <span *ngFor=\"let authority of parentAuthorities\" class=\"authorities\">{{\n      authority | authorityName\n    }}</span>\n  </div>\n  <div>{{ 'SIMPLE_EDIT.INVITE.ERROR_HELP' | translate }}</div>\n</es-info-message>\n\n<div *ngIf=\"!hasInvalidState()\" class=\"toggles\">\n  <div class=\"info field-group\">{{ 'SIMPLE_EDIT.INVITE.INFO' | translate }}</div>\n  <div class=\"field-group\">\n    <label id=\"global-groups-label\">\n      {{ 'SIMPLE_EDIT.INVITE.DEFAULT_GROUPS' | translate }}\n    </label>\n    <div role=\"group\" aria-labelledby=\"global-groups-label\">\n      <div>\n        <mat-button-toggle-group\n          #orgGroup=\"matButtonToggleGroup\"\n          class=\"toggle-full-size toggle-org\"\n          (change)=\"updateValue('org')\"\n        >\n          <mat-button-toggle class=\"button-toggle-org\" [value]=\"'unset'\">\n            {{ 'SIMPLE_EDIT.INVITE.UNSET' | translate }}\n          </mat-button-toggle>\n          <ng-container *ngFor=\"let organization of organizations\">\n            <mat-button-toggle\n              class=\"button-toggle-org\"\n              [value]=\"organization.groups[group]?.authorityName\"\n              [disabled]=\"!organization.groups[group]\"\n              *ngFor=\"let group of organizationGroups\"\n              >{{\n                'SIMPLE_EDIT.INVITE.GROUP_TYPES.' + group\n                  | translate : { school: organization.organization | authorityName }\n              }}</mat-button-toggle\n            >\n            <mat-button-toggle\n              class=\"button-toggle-org\"\n              [value]=\"organization.organization.authorityName\"\n              >{{ organization.organization | authorityName }}</mat-button-toggle\n            >\n          </ng-container>\n        </mat-button-toggle-group>\n      </div>\n      <div *ngIf=\"globalGroups.length > 0\">\n        <mat-button-toggle-group\n          class=\"toggle-full-size\"\n          #globalGroup=\"matButtonToggleGroup\"\n          (change)=\"updateValue('global')\"\n        >\n          <mat-button-toggle\n            class=\"button-toggle-global\"\n            *ngFor=\"let group of globalGroups\"\n            [disabled]=\"\n              (group.authorityName === 'GROUP_EVERYONE' && !tpInviteEveryone) ||\n              (authenticationService.observeLoginInfo() | async)?.currentScope !== null\n            \"\n            [value]=\"group.authorityName\"\n          >\n            <ng-container *ngIf=\"group.authorityName === 'GROUP_EVERYONE'\">{{\n              'SIMPLE_EDIT.INVITE.PUBLISH' | translate\n            }}</ng-container>\n            <ng-container *ngIf=\"group.authorityName !== 'GROUP_EVERYONE'\">{{\n              group | authorityName\n            }}</ng-container>\n          </mat-button-toggle>\n        </mat-button-toggle-group>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"recentAuthorities && recentAuthorities.length\" class=\"field-group\">\n    <label id=\"last-invitations-label\">{{\n      'SIMPLE_EDIT.INVITE.RECENT_AUTHORITIES' | translate\n    }}</label>\n    <div class=\"tiles\" aria-labelledby=\"last-invitations-label\">\n      <es-user-tile\n        *ngFor=\"let authority of recentAuthorities\"\n        [user]=\"authority\"\n        (click)=\"toggleInvitation(authority)\"\n        [active]=\"isInvited(authority)\"\n      ></es-user-tile>\n    </div>\n  </div>\n</div>\n","import { trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatButtonToggleGroup } from '@angular/material/button-toggle';\nimport { UIAnimation, VCard } from 'ngx-edu-sharing-ui';\nimport { Observable, forkJoin, from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport {\n    ConfigurationService,\n    Node,\n    RestConnectorService,\n    RestConstants,\n    RestIamService,\n    RestNodeService,\n    RestOrganizationService,\n} from '../../../../../core-module/core.module';\nimport { NodeHelperService } from '../../../../../services/node-helper.service';\nimport { Toast } from '../../../../../services/toast';\nimport { Values } from '../../../../../features/mds/types/types';\n\n@Component({\n    selector: 'es-simple-edit-license',\n    templateUrl: 'simple-edit-license.component.html',\n    styleUrls: ['simple-edit-license.component.scss'],\n    animations: [\n        trigger('fade', UIAnimation.fade()),\n        trigger('cardAnimation', UIAnimation.cardAnimation()),\n    ],\n})\nexport class SimpleEditLicenseComponent implements OnInit {\n    @ViewChild('modeGroup') modeGroup: MatButtonToggleGroup;\n    @ViewChild('licenseGroup') licenseGroup: MatButtonToggleGroup;\n    @Input() fromUpload: boolean;\n    @Output() onInitFinished = new EventEmitter<void>();\n    @Output() onError = new EventEmitter<any>();\n\n    _nodes: Node[];\n    allowedLicenses: string[];\n    authorFreetext: string;\n    invalid: boolean;\n    wasInvalid: boolean;\n    private initialLicense: string;\n    private initalAuthorFreetext: string;\n    private initialMode: string;\n    tpLicense: boolean;\n    ccTitleOfWork: string;\n    ccSourceUrl: string;\n    ccProfileUrl: string;\n    @Input() set nodes(nodes: Node[]) {\n        this._nodes = nodes;\n        if (nodes) {\n            this.prepare(true);\n        }\n    }\n    constructor(\n        private nodeApi: RestNodeService,\n        private connector: RestConnectorService,\n        private configService: ConfigurationService,\n        private iamApi: RestIamService,\n        private nodeHelper: NodeHelperService,\n        private organizationApi: RestOrganizationService,\n        private toast: Toast,\n    ) {\n        this.configService\n            .get('simpleEdit.licenses', ['NONE', 'COPYRIGHT_FREE', 'CC_BY', 'CC_0'])\n            .subscribe((licenses) => (this.allowedLicenses = licenses));\n        this.connector\n            .hasToolPermission(RestConstants.TOOLPERMISSION_LICENSE)\n            .subscribe((tp) => (this.tpLicense = tp));\n    }\n    async getESUID() {\n        return (await this.iamApi.getCurrentUserVCard()).uid;\n    }\n    isDirty() {\n        // state is untouched -> so not dirty\n        if (this.invalid || !this.tpLicense) {\n            return false;\n        }\n        // when was initialy invalid -> the invalid was changed, so it is touched\n        if (this.wasInvalid) {\n            return true;\n        }\n        return (\n            this.initialLicense !== this.licenseGroup.value ||\n            this.initalAuthorFreetext !== this.authorFreetext ||\n            this.initialMode !== this.modeGroup.value\n        );\n    }\n    save(): Observable<any> {\n        if (!this.isDirty()) {\n            return new Observable<void>((observer) => {\n                observer.next();\n                observer.complete();\n                return;\n            });\n        }\n        return forkJoin(\n            this._nodes.map((n) => {\n                return from(this.getProperties()).pipe(\n                    switchMap((props) =>\n                        this.nodeApi.editNodeMetadataNewVersion(\n                            n.ref.id,\n                            RestConstants.COMMENT_LICENSE_UPDATE,\n                            props,\n                        ),\n                    ),\n                );\n            }),\n        );\n    }\n\n    prepare(updateInvalid = false) {\n        forkJoin(\n            this._nodes.map((n) => this.nodeApi.getNodeMetadata(n.ref.id, [RestConstants.ALL])),\n        ).subscribe(\n            (nodes) => {\n                this._nodes = nodes.map((n) => n.node);\n                const license = this.nodeHelper.getValueForAll(\n                    this._nodes,\n                    RestConstants.CCM_PROP_LICENSE,\n                    null,\n                    'NONE',\n                    false,\n                );\n                this.authorFreetext = this.nodeHelper.getValueForAll(\n                    this._nodes,\n                    RestConstants.CCM_PROP_AUTHOR_FREETEXT,\n                    '',\n                    '',\n                    false,\n                );\n                this.ccTitleOfWork = this.nodeHelper.getValueForAll(\n                    this._nodes,\n                    RestConstants.CCM_PROP_LICENSE_TITLE_OF_WORK,\n                    '',\n                );\n                this.ccProfileUrl = this.nodeHelper.getValueForAll(\n                    this._nodes,\n                    RestConstants.CCM_PROP_LICENSE_PROFILE_URL,\n                    '',\n                );\n                this.ccSourceUrl = this.nodeHelper.getValueForAll(\n                    this._nodes,\n                    RestConstants.CCM_PROP_LICENSE_SOURCE_URL,\n                    '',\n                );\n                const vcard = new VCard(\n                    this.nodeHelper.getValueForAll(\n                        this._nodes,\n                        RestConstants.CCM_PROP_LIFECYCLECONTRIBUTER_AUTHOR,\n                        '',\n                        '',\n                        false,\n                    ),\n                );\n                let isValid = true;\n                if (license) {\n                    if (license.startsWith('CC_BY')) {\n                        const version = this.nodeHelper.getValueForAll(\n                            this._nodes,\n                            RestConstants.CCM_PROP_LICENSE_CC_VERSION,\n                            null,\n                            null,\n                            false,\n                        );\n                        isValid = version === '4.0';\n                    }\n                    if (this.allowedLicenses.indexOf(license) === -1) {\n                        isValid = false;\n                    }\n                } else {\n                    isValid = false;\n                }\n                this.initialLicense = license;\n                this.initalAuthorFreetext = this.authorFreetext;\n                setTimeout(async () => {\n                    if (updateInvalid) {\n                        this.invalid = !this.fromUpload && !isValid;\n                        this.wasInvalid = this.invalid;\n                    }\n                    if (this.tpLicense && this.modeGroup) {\n                        if (this.fromUpload) {\n                            this.modeGroup.value = 'own';\n                        } else {\n                            const esuid = await this.getESUID();\n                            if (this.modeGroup) {\n                                if (esuid && esuid === vcard.uid) {\n                                    this.modeGroup.value = 'own';\n                                } else {\n                                    this.modeGroup.value = 'foreign';\n                                }\n                            }\n                        }\n                        if (this.modeGroup) {\n                            this.initialMode = this.modeGroup.value;\n                            if (isValid) {\n                                this.licenseGroup.value = license;\n                            } else {\n                                this.licenseGroup.value = 'NONE';\n                            }\n                        }\n                    }\n                    this.onInitFinished.emit();\n                });\n            },\n            (error) => this.onError.emit(error),\n        );\n    }\n\n    private async getProperties(): Promise<Values> {\n        const properties: any = {};\n        if (this.modeGroup.value === 'own') {\n            const vcard = await this.iamApi.getCurrentUserVCard();\n            properties[RestConstants.CCM_PROP_LIFECYCLECONTRIBUTER_AUTHOR] = [\n                vcard.toVCardString(),\n            ];\n            properties[RestConstants.CCM_PROP_AUTHOR_FREETEXT] = null;\n        } else {\n            properties[RestConstants.CCM_PROP_LIFECYCLECONTRIBUTER_AUTHOR] = null;\n            properties[RestConstants.CCM_PROP_AUTHOR_FREETEXT] = [this.authorFreetext];\n        }\n        if (this.isCCAttributableLicense()) {\n            if (this.ccTitleOfWork) {\n                properties[RestConstants.CCM_PROP_LICENSE_TITLE_OF_WORK] = [this.ccTitleOfWork];\n            } else {\n                properties[RestConstants.CCM_PROP_LICENSE_TITLE_OF_WORK] = null;\n            }\n            if (this.ccSourceUrl) {\n                properties[RestConstants.CCM_PROP_LICENSE_SOURCE_URL] = [this.ccSourceUrl];\n            } else {\n                properties[RestConstants.CCM_PROP_LICENSE_SOURCE_URL] = null;\n            }\n            if (this.ccProfileUrl) {\n                properties[RestConstants.CCM_PROP_LICENSE_PROFILE_URL] = [this.ccProfileUrl];\n            } else {\n                properties[RestConstants.CCM_PROP_LICENSE_PROFILE_URL] = null;\n            }\n        }\n        properties[RestConstants.CCM_PROP_LICENSE] = [this.licenseGroup.value];\n        properties[RestConstants.CCM_PROP_LICENSE_CC_VERSION] =\n            this.licenseGroup.value === 'CC_BY' ? ['4.0'] : null;\n        return properties;\n    }\n\n    isCCAttributableLicense() {\n        return (\n            this.licenseGroup &&\n            this.licenseGroup.value &&\n            this.licenseGroup.value.startsWith('CC_BY')\n        );\n    }\n\n    async ngOnInit() {\n        if (!(await this.getESUID())) {\n            console.warn('Current user has no esuid, detecting owner of license is impossible');\n        }\n    }\n}\n","<es-info-message message=\"SIMPLE_EDIT.LICENSE.ERROR_TOOLPERMISSION_MISSING\" *ngIf=\"!tpLicense\">\n</es-info-message>\n<es-info-message message=\"SIMPLE_EDIT.LICENSE.INVALID_STATE\" *ngIf=\"invalid\">\n  <button mat-raised-button [color]=\"$any('white')\" (click)=\"invalid = false; prepare()\">\n    {{ 'SIMPLE_EDIT.LICENSE.REPLACE' | translate }}\n  </button>\n</es-info-message>\n<div class=\"license\" *ngIf=\"!invalid && tpLicense\">\n  <label id=\"material-source-label\">{{ 'SIMPLE_EDIT.LICENSE.SOURCE_TYPE' | translate }}</label>\n  <div class=\"field-group\">\n    <mat-button-toggle-group\n      #modeGroup=\"matButtonToggleGroup\"\n      aria-labelledby=\"material-source-label\"\n    >\n      <mat-button-toggle [value]=\"'own'\">{{\n        'SIMPLE_EDIT.LICENSE.SOURCE_OWN' | translate\n      }}</mat-button-toggle>\n      <mat-button-toggle [value]=\"'foreign'\">{{\n        'SIMPLE_EDIT.LICENSE.SOURCE_FOREIGN' | translate\n      }}</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <label id=\"material-license-label\">{{ 'SIMPLE_EDIT.LICENSE.SET_LICENSE' | translate }}</label>\n  <div class=\"field-group\">\n    <mat-button-toggle-group\n      #licenseGroup=\"matButtonToggleGroup\"\n      aria-labelledby=\"material-license-label\"\n    >\n      <mat-button-toggle *ngFor=\"let license of allowedLicenses\" [value]=\"license\">{{\n        'SIMPLE_EDIT.LICENSE.LICENSES.' + license | translate\n      }}</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <ng-container *ngIf=\"modeGroup.value === 'foreign'\">\n    <mat-form-field class=\"authorFreetext\">\n      <mat-label>{{ 'MDS.AUTHOR_FREETEXT_PLACEHOLDER' | translate }}</mat-label>\n      <textarea\n        matInput\n        cdkTextareaAutosize\n        id=\"authorFreetext\"\n        [(ngModel)]=\"authorFreetext\"\n        cdkAutosizeMinRows=\"3\"\n        cdkAutosizeMaxRows=\"5\"\n      ></textarea>\n    </mat-form-field>\n  </ng-container>\n  <es-license-source\n    *ngIf=\"isCCAttributableLicense() && modeGroup.value === 'foreign'\"\n    [(ccTitleOfWork)]=\"ccTitleOfWork\"\n    [(ccSourceUrl)]=\"ccSourceUrl\"\n    [(ccProfileUrl)]=\"ccProfileUrl\"\n    class=\"field-group\"\n  ></es-license-source>\n</div>\n","import { trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { UIAnimation } from 'ngx-edu-sharing-ui';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Node, RestConstants, RestNodeService } from '../../../../../core-module/core.module';\nimport { Toast } from '../../../../../services/toast';\nimport { MdsEditorWrapperComponent } from '../../../../../features/mds/mds-editor/mds-editor-wrapper/mds-editor-wrapper.component';\nimport { BulkBehavior } from '../../../../../features/mds/types/types';\n\n@Component({\n    selector: 'es-simple-edit-metadata',\n    templateUrl: 'simple-edit-metadata.component.html',\n    styleUrls: ['simple-edit-metadata.component.scss'],\n    animations: [\n        trigger('fade', UIAnimation.fade()),\n        trigger('cardAnimation', UIAnimation.cardAnimation()),\n    ],\n})\nexport class SimpleEditMetadataComponent {\n    readonly BulkBehaviour = BulkBehavior;\n\n    @ViewChild('mds') mds: MdsEditorWrapperComponent;\n\n    private _nodes: Node[];\n    @Input()\n    get nodes(): Node[] {\n        return this._nodes;\n    }\n    set nodes(value: Node[]) {\n        // If nodes are changed and the mds is already rendered, force an update of values.\n        if (this._nodes && this.mds) {\n            void this.mds.reInit();\n        }\n        this._nodes = value;\n    }\n    @Input() fromUpload: boolean;\n    @Output() onError = new EventEmitter<void>();\n\n    constructor(private nodeApi: RestNodeService, private toast: Toast) {}\n\n    isDirty() {\n        if (this.mds.mdsRef) {\n            return this.mds.mdsRef.isDirty();\n        }\n        return this.mds.mdsEditorInstance.getHasUserChanges();\n    }\n\n    /**\n     * validate the form data\n     * return true if data is valid, false otherwise\n     */\n    validate() {\n        if (!this.mds.mdsEditorInstance.getIsValid()) {\n            this.mds.mdsEditorInstance.showMissingRequiredWidgets();\n            return false;\n        }\n        return true;\n    }\n\n    save(): Observable<void> {\n        if (!this.isDirty()) {\n            // emit null so that next and complete get's called\n            return of(null);\n        }\n        return forkJoin(\n            this.nodes.map((n) =>\n                from(this.mds.getValues(n)).pipe(\n                    switchMap((props) => {\n                        delete props[RestConstants.CM_NAME];\n                        return this.nodeApi.editNodeMetadataNewVersion(\n                            n.ref.id,\n                            RestConstants.COMMENT_METADATA_UPDATE,\n                            props,\n                        );\n                    }),\n                ),\n            ),\n        ).pipe(map(() => {}));\n    }\n}\n","<es-mds-editor-wrapper\n  #mds\n  class=\"mds-simple-editor\"\n  [embedded]=\"true\"\n  [allowReplacing]=\"!fromUpload\"\n  [bulkBehaviour]=\"fromUpload ? BulkBehaviour.Replace : BulkBehaviour.Default\"\n  groupId=\"io_simple\"\n  [nodes]=\"nodes\"\n  (onCancel)=\"onError.emit()\"\n></es-mds-editor-wrapper>\n","/**\n * Created by Torsten on 13.01.2017.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthorityProfile } from '../../../../../core-module/core.module';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'es-user-tile',\n    templateUrl: 'user-tile.component.html',\n    styleUrls: ['user-tile.component.scss'],\n})\nexport class UserTileComponent {\n    @Input() user: AuthorityProfile;\n    @Input() active = false;\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private sanitizer: DomSanitizer,\n    ) {}\n}\n","<div class=\"tile\" [class.active]=\"active\" matRipple>\n  <es-user-avatar size=\"xsmall\" [user]=\"user\"></es-user-avatar>\n  <div class=\"name\">{{ user | authorityName }}</div>\n</div>\n"],"names":["HasPermissionPipe","transform","nodes","permission","every","node","access","includes","_","_2","pure","SimpleEditDialogData","rxjs","catchError","map","switchMap","DialogButton","RestConstants","CARD_DIALOG_DATA","SAVE_OR_CANCEL","SimpleEditDialogComponent","constructor","data","dialogRef","connector","dialogs","localEvents","nodeApi","toast","_nodes","initState","license","invite","patchState","isLoading","hasToolPermission","TOOLPERMISSION_INVITE","subscribe","tp","tpInvite","TOOLPERMISSION_LICENSE","tpLicense","_initButtons","patchConfig","buttons","color","_cancel","_saveAndClose","_save","length","nodesChanged","next","close","_openMetadata","_this","_asyncToGenerator","upToDate","_ensureUpToDate","openMdsEditorDialogForNodes","updatedNodes","afterClosed","toPromise","_openShare","_this2","openShareDialog","forkJoin","n","getNodeMetadata","ref","id","ALL","_openLicense","_this3","openLicenseDialog","kind","metadata","validate","of","save","pipe","name","count","error","_this4","_isDirty","openGenericDialog","title","message","result","isDirty","_updateInitState","component","_handleError","i0","ɵɵdirectiveInject","i1","CardDialogRef","i2","RestConnectorService","i3","DialogsService","i4","LocalEventsService","RestNodeService","i5","Toast","selectors","viewQuery","SimpleEditDialogComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SimpleEditDialogComponent_Template_button_click_6_listener","ɵɵelement","SimpleEditDialogComponent_Template_es_simple_edit_metadata_onError_10_listener","$event","SimpleEditDialogComponent_Template_button_click_18_listener","SimpleEditDialogComponent_Template_es_simple_edit_invite_onError_23_listener","SimpleEditDialogComponent_Template_es_simple_edit_invite_onInitFinished_23_listener","SimpleEditDialogComponent_Template_button_click_31_listener","SimpleEditDialogComponent_Template_es_simple_edit_license_onError_35_listener","SimpleEditDialogComponent_Template_es_simple_edit_license_onInitFinished_35_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty","fromUpload","ɵɵpipeBind2","SharedModule","MdsModule","SimpleEditInviteComponent","SimpleEditLicenseComponent","SimpleEditMetadataComponent","UserTileComponent","SimpleEditDialogModule","_3","declarations","imports","trigger","EventEmitter","UIAnimation","Observable","Permission","RestHelper","Helper","UIHelper","ɵɵtextInterpolate","authority_r6","ɵɵtemplate","SimpleEditInviteComponent_es_info_message_3_span_2_Template","ctx_r3","parentAuthorities","organization_r11","groups","group_r13","authorityName","ɵɵpureFunction1","_c2","organization","ɵɵelementContainerStart","SimpleEditInviteComponent_div_4_ng_container_15_mat_button_toggle_1_Template","ɵɵelementContainerEnd","ctx_r8","organizationGroups","group_r17","SimpleEditInviteComponent_div_4_div_16_mat_button_toggle_3_ng_container_2_Template","SimpleEditInviteComponent_div_4_div_16_mat_button_toggle_3_ng_container_3_Template","ctx_r16","tpInviteEveryone","tmp_0_0","authenticationService","observeLoginInfo","currentScope","SimpleEditInviteComponent_div_4_div_16_Template_mat_button_toggle_group_change_1_listener","ɵɵrestoreView","_r22","ctx_r21","ɵɵnextContext","ɵɵresetView","updateValue","SimpleEditInviteComponent_div_4_div_16_mat_button_toggle_3_Template","ctx_r9","globalGroups","SimpleEditInviteComponent_div_4_div_17_es_user_tile_5_Template_es_user_tile_click_0_listener","restoredCtx","_r26","authority_r24","$implicit","ctx_r25","toggleInvitation","ctx_r23","isInvited","SimpleEditInviteComponent_div_4_div_17_es_user_tile_5_Template","ctx_r10","recentAuthorities","SimpleEditInviteComponent_div_4_Template_mat_button_toggle_group_change_10_listener","_r28","ctx_r27","SimpleEditInviteComponent_div_4_ng_container_15_Template","SimpleEditInviteComponent_div_4_div_16_Template","SimpleEditInviteComponent_div_4_div_17_Template","ctx_r4","organizations","SimpleEditGroupConfig","prepare","applicationRef","configService","iamApi","organizationApi","dirty","stablePermissionState","onInitFinished","onError","get","GROUP_TYPE_ADMINISTRATORS","filter","d","AUTHORITY_EVERYONE","loadGlobalGroups","TOOLPERMISSION_INVITE_ALLAUTHORITIES","hasInvalidState","getSelectedAuthority","objectEquals","initialState","observer","complete","authority","addPermission","publish","authorityType","startsWith","GROUP_PREFIX","AUTHORITY_TYPE_GROUP","AUTHORITY_TYPE_USER","permissions","PERMISSION_CONSUMER","ACCESS_CC_PUBLISH","i","nodesPermissions","localPermissions","currentPermissions","mergePermissionsWithHighestPermission","p","getAvailableGlobalGroups","indexOf","copyAndCleanPermissions","inherited","setNodePermissions","orgGroup","value","globalGroup","console","warn","parents","Array","from","Set","parent","multipleParents","setInitialState","find","ACCESS_CHANGE_PERMISSIONS","missingNodePermissions","getNodePermissions","parentPermissions","concat","inheritedPermissions","authorities","a","getCurrentLogin","AUTHORITY_ROLE_OWNER","status","HTTP_FORBIDDEN","emit","some","getOrganizations","orgs","instant","reg","RegExp","o","exec","g","getSubgroupByType","forEach","group","profile","groupType","detectPermissionState","config","groupConfigs","toolpermission","hasToolPermissionInstant","push","AUTHORITY_TYPE_EVERYONE","getGroup","mode","tick","availableToggleGroups","unset","invalid","activeToggle","perm","list","consumers","toggle","c","match","org","key","Object","keys","getRecentlyInvited","recent","slice","log","ApplicationRef","ConfigurationService","RestIamService","RestOrganizationService","AuthenticationService","SimpleEditInviteComponent_Query","SimpleEditInviteComponent_es_info_message_0_Template","SimpleEditInviteComponent_es_info_message_1_Template","SimpleEditInviteComponent_es_info_message_2_Template","SimpleEditInviteComponent_es_info_message_3_Template","SimpleEditInviteComponent_div_4_Template","fade","cardAnimation","VCard","SimpleEditLicenseComponent_es_info_message_1_Template_button_click_1_listener","_r4","license_r10","SimpleEditLicenseComponent_div_2_ng_container_20_Template_textarea_ngModelChange_5_listener","_r12","ctx_r11","authorFreetext","SimpleEditLicenseComponent_div_2_es_license_source_21_Template_es_license_source_ccTitleOfWorkChange_0_listener","_r14","ctx_r13","ccTitleOfWork","SimpleEditLicenseComponent_div_2_es_license_source_21_Template_es_license_source_ccSourceUrlChange_0_listener","ctx_r15","ccSourceUrl","SimpleEditLicenseComponent_div_2_es_license_source_21_Template_es_license_source_ccProfileUrlChange_0_listener","ccProfileUrl","SimpleEditLicenseComponent_div_2_mat_button_toggle_19_Template","SimpleEditLicenseComponent_div_2_ng_container_20_Template","SimpleEditLicenseComponent_div_2_es_license_source_21_Template","ctx_r2","allowedLicenses","_r5","isCCAttributableLicense","nodeHelper","licenses","getESUID","getCurrentUserVCard","uid","wasInvalid","initialLicense","licenseGroup","initalAuthorFreetext","initialMode","modeGroup","getProperties","props","editNodeMetadataNewVersion","COMMENT_LICENSE_UPDATE","updateInvalid","getValueForAll","CCM_PROP_LICENSE","CCM_PROP_AUTHOR_FREETEXT","CCM_PROP_LICENSE_TITLE_OF_WORK","CCM_PROP_LICENSE_PROFILE_URL","CCM_PROP_LICENSE_SOURCE_URL","vcard","CCM_PROP_LIFECYCLECONTRIBUTER_AUTHOR","isValid","version","CCM_PROP_LICENSE_CC_VERSION","setTimeout","esuid","properties","toVCardString","ngOnInit","NodeHelperService","SimpleEditLicenseComponent_Query","SimpleEditLicenseComponent_es_info_message_0_Template","SimpleEditLicenseComponent_es_info_message_1_Template","SimpleEditLicenseComponent_div_2_Template","BulkBehavior","mds","reInit","BulkBehaviour","mdsRef","mdsEditorInstance","getHasUserChanges","getIsValid","showMissingRequiredWidgets","getValues","CM_NAME","COMMENT_METADATA_UPDATE","SimpleEditMetadataComponent_Query","SimpleEditMetadataComponent_Template_es_mds_editor_wrapper_onCancel_0_listener","Replace","Default","router","translate","sanitizer","active","Router","TranslateService","DomSanitizer","inputs","user","decls","vars","consts","template","UserTileComponent_Template","ɵɵclassProp"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}