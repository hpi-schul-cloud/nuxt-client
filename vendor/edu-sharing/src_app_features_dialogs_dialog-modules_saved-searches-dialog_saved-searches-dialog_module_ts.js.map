{"version":3,"file":"src_app_features_dialogs_dialog-modules_saved-searches-dialog_saved-searches-dialog_module_ts.js","mappings":"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","sources":["./src/app/features/dialogs/dialog-modules/saved-searches-dialog/saved-searches-dialog.component.ts","./src/app/features/dialogs/dialog-modules/saved-searches-dialog/saved-searches-dialog.component.html","./src/app/features/dialogs/dialog-modules/saved-searches-dialog/saved-searches-dialog.module.ts"],"sourcesContent":["import {\n    Component,\n    Inject,\n    Injector,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Node, SavedSearch, SavedSearchesService } from 'ngx-edu-sharing-api';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { debounceTime, filter, first, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { DialogButton } from '../../../../core-module/core.module';\nimport { NodeHelperService } from '../../../../services/node-helper.service';\nimport { CARD_DIALOG_DATA } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport { DialogsService } from '../../dialogs.service';\nimport { SavedSearchesDialogData, SavedSearchesDialogResult } from './saved-searches-dialog-data';\nimport {\n    InteractionType,\n    ListItem,\n    NodeEntriesDisplayType,\n    NodeEntriesWrapperComponent,\n    notNull,\n    Scope,\n} from 'ngx-edu-sharing-ui';\nimport { NodeDataSourceRemote } from 'src/app/pages/search-page/node-data-source-remote';\n\n@Component({\n    selector: 'es-saved-searches-dialog',\n    templateUrl: './saved-searches-dialog.component.html',\n    styleUrls: ['./saved-searches-dialog.component.scss'],\n})\nexport class SavedSearchesDialogComponent implements OnInit, OnDestroy {\n    /** Template that includes the \"Save current search\" button. */\n    @ViewChild('saveCurrentSearch', { static: true })\n    saveCurrentSearchRef: TemplateRef<HTMLElement>;\n    private _nodeEntries = new BehaviorSubject<NodeEntriesWrapperComponent<Node>>(null);\n    /**\n     * The current node-entries component.\n     *\n     * Updates when tabs are switched.\n     */\n    @ViewChild(NodeEntriesWrapperComponent)\n    get nodeEntries(): NodeEntriesWrapperComponent<Node> {\n        return this._nodeEntries.value;\n    }\n    set nodeEntries(value: NodeEntriesWrapperComponent<Node>) {\n        this._nodeEntries.next(value);\n    }\n\n    readonly mySavedSearchesSource = new NodeDataSourceRemote(this.injector);\n    readonly sharedSavedSearchesSource = new NodeDataSourceRemote(this.injector);\n    readonly columns = [new ListItem('NODE', 'title')];\n    readonly displayType = NodeEntriesDisplayType.Table;\n    readonly scope = Scope.SavedSearches;\n    readonly interactionType = InteractionType.Emitter;\n    readonly searchInputControl = new UntypedFormControl('');\n\n    private destroyed = new Subject<void>();\n\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: SavedSearchesDialogData,\n        private dialogRef: CardDialogRef<SavedSearchesDialogData, SavedSearchesDialogResult>,\n        private dialogs: DialogsService,\n        private savedSearchesService: SavedSearchesService,\n        private nodeHelper: NodeHelperService,\n        private injector: Injector,\n    ) {\n        this.registerMySavedSearchesSource();\n        this.registerSharedSavedSearchesSource();\n    }\n\n    ngOnInit(): void {\n        this.dialogRef.patchConfig({\n            customHeaderBarContent: this.saveCurrentSearchRef,\n            buttons: this.getButtons(),\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    private registerMySavedSearchesSource(): void {\n        this.mySavedSearchesSource;\n        const subject = new BehaviorSubject<SavedSearch[]>(null);\n        this.savedSearchesService\n            .observeMySavedSearches()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(subject);\n        // `NodeDataSourceRemote` doesn't account for remote observables that emit multiple times.\n        // So we set a new remote each time `observeSavedSearches` emits.\n        subject.subscribe(() =>\n            this.mySavedSearchesSource.setRemote(({ range }) =>\n                subject.pipe(\n                    first(notNull),\n                    map((savedSearches) => ({\n                        data: savedSearches\n                            // TODO: Configure the data source / node entries to not use pagination\n                            // instead of simulating pagination like this.\n                            .slice(range.startIndex, range.endIndex)\n                            .map(({ node }) => node),\n                        total: savedSearches.length,\n                    })),\n                ),\n            ),\n        );\n    }\n\n    private registerSharedSavedSearchesSource(): void {\n        this.searchInputControl.valueChanges\n            .pipe(startWith(null as string), debounceTime(300))\n            .subscribe((value) => {\n                this.sharedSavedSearchesSource.setRemote((params) =>\n                    this.savedSearchesService.getSharedSavedSearchesNodes({\n                        searchString: value,\n                        ...params.range,\n                    }),\n                );\n            });\n    }\n\n    private getButtons(): DialogButton[] {\n        const buttons: DialogButton[] = [];\n        if (this.data.reUrl) {\n            buttons.push(\n                new DialogButton('SEARCH.SAVED_SEARCHES.EMBED_BUTTON', { color: 'standard' }, () =>\n                    this.embedSelectedSearch(),\n                ),\n            );\n        }\n        buttons.push(\n            new DialogButton('SEARCH.SAVED_SEARCHES.SEARCH_BUTTON', { color: 'primary' }, () =>\n                this.closeDialogWithResult(),\n            ),\n        );\n        this._nodeEntries\n            .pipe(\n                filter(notNull),\n                switchMap((nodeEntries) => nodeEntries.getSelection().changed),\n                startWith(void 0),\n            )\n            .subscribe(() => {\n                const buttonsEnabled = this.nodeEntries?.getSelection().selected.length === 1;\n                buttons.forEach((button) => (button.disabled = !buttonsEnabled));\n            });\n        return buttons;\n    }\n\n    onClick(node: Node): void {\n        if (this.data.reUrl) {\n            this.nodeEntries.getSelection().clear();\n            this.nodeEntries.getSelection().select(node);\n        } else {\n            this.closeDialogWithResult(node);\n        }\n    }\n\n    /**\n     * Closes the dialog and returns the given or the currently selected saved-search node as\n     * result.\n     */\n    closeDialogWithResult(node: Node = this.nodeEntries.getSelection().selected[0]): void {\n        const savedSearch = this.savedSearchesService.savedSearchNodeToSavedSearch(node);\n        this.dialogRef.close(savedSearch);\n    }\n\n    async openSaveSearchDialog(): Promise<void> {\n        const dialogRef = await this.dialogs.openSaveSearchDialog(this.data.saveSearchData);\n        dialogRef.afterClosed().subscribe((savedSearch) => {\n            this.nodeEntries.getSelection().clear();\n            this.nodeEntries.getSelection().select(savedSearch.node);\n        });\n    }\n\n    async embedSelectedSearch(): Promise<void> {\n        let savedSearch = this.nodeEntries.getSelection().selected[0];\n        this.nodeHelper.addNodeToLms(savedSearch, this.data.reUrl);\n    }\n}\n","<ng-template #saveCurrentSearch>\n  <button mat-raised-button (click)=\"openSaveSearchDialog()\">\n    <i esIcon=\"star_outline\"></i>\n    {{ 'SEARCH.SAVED_SEARCHES.SAVED_CURRENT_SEARCH' | translate }}\n  </button>\n</ng-template>\n\n<mat-tab-group>\n  <mat-tab [label]=\"'SEARCH.SAVED_SEARCHES.TAB_MY' | translate\">\n    <ng-template matTabContent>\n      <es-actionbar #actionbar class=\"actionbar\"></es-actionbar>\n      <!--\n        FIXME:\n          - Paginator active although we load all data at once\n          - \"Load more\" button appears again when switching tabs back, although there are no more\n            elements to load\n      -->\n      <es-node-entries-wrapper\n        [dataSource]=\"mySavedSearchesSource\"\n        [columns]=\"columns\"\n        [displayType]=\"displayType\"\n        [scope]=\"scope\"\n        [initConfig]=\"{actionbar}\"\n        (clickItem)=\"onClick($event.element)\"\n        [elementInteractionType]=\"interactionType\"\n        [singleClickHint]=\"data.reUrl ? 'static' : 'dynamic'\"\n      >\n        <ng-template #empty>\n          <p class=\"no-results-notice\">{{ 'SEARCH.SAVED_SEARCHES.NO_SAVED_SEARCH' | translate }}</p>\n        </ng-template>\n      </es-node-entries-wrapper>\n    </ng-template>\n  </mat-tab>\n  <mat-tab [label]=\"'SEARCH.SAVED_SEARCHES.TAB_SHARED' | translate\">\n    <!--\n      FIXME: We show shared and the user's own saved searches alike.\n     -->\n    <ng-template matTabContent>\n      <form class=\"search-input-form\">\n        <mat-form-field class=\"search-input-field\">\n          <mat-label>{{ 'SEARCH.SAVED_SEARCHES.SEARCH_INPUT' | translate }}</mat-label>\n          <input matInput [formControl]=\"searchInputControl\" />\n        </mat-form-field>\n      </form>\n      <es-actionbar #actionbar class=\"actionbar\"></es-actionbar>\n      <es-node-entries-wrapper\n        [dataSource]=\"sharedSavedSearchesSource\"\n        [columns]=\"columns\"\n        [displayType]=\"displayType\"\n        [scope]=\"scope\"\n        [initConfig]=\"{actionbar}\"\n        (clickItem)=\"onClick($event.element)\"\n        [elementInteractionType]=\"interactionType\"\n        [singleClickHint]=\"data.reUrl ? 'static' : 'dynamic'\"\n      >\n        <ng-template #empty>\n          <p class=\"no-results-notice\">\n            {{\n              (searchInputControl.value\n                ? 'SEARCH.SAVED_SEARCHES.NO_SAVED_SEARCH_FOUND'\n                : 'SEARCH.SAVED_SEARCHES.NO_SAVED_SEARCH'\n              ) | translate\n            }}\n          </p>\n        </ng-template>\n      </es-node-entries-wrapper>\n    </ng-template>\n  </mat-tab>\n</mat-tab-group>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { SavedSearchesDialogComponent } from './saved-searches-dialog.component';\nimport { NodeEntriesModule } from 'ngx-edu-sharing-ui';\n\nexport { SavedSearchesDialogComponent };\n\n@NgModule({\n    declarations: [SavedSearchesDialogComponent],\n    imports: [SharedModule, NodeEntriesModule],\n})\nexport class SavedSearchesDialogModule {}\n"],"names":["UntypedFormControl","BehaviorSubject","Subject","debounceTime","filter","first","map","startWith","switchMap","takeUntil","DialogButton","CARD_DIALOG_DATA","InteractionType","ListItem","NodeEntriesDisplayType","NodeEntriesWrapperComponent","notNull","Scope","NodeDataSourceRemote","i0","ɵɵelementStart","ɵɵlistener","SavedSearchesDialogComponent_ng_template_0_Template_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","openSaveSearchDialog","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtextInterpolate","SavedSearchesDialogComponent_ng_template_5_Template_es_node_entries_wrapper_clickItem_2_listener","$event","_r10","ctx_r9","onClick","element","ɵɵtemplate","SavedSearchesDialogComponent_ng_template_5_ng_template_3_Template","ɵɵtemplateRefExtractor","ɵɵproperty","ctx_r2","mySavedSearchesSource","columns","displayType","scope","ɵɵpureFunction1","_c1","_r6","interactionType","data","reUrl","ctx_r13","searchInputControl","value","SavedSearchesDialogComponent_ng_template_8_Template_es_node_entries_wrapper_clickItem_8_listener","_r15","ctx_r14","SavedSearchesDialogComponent_ng_template_8_ng_template_9_Template","ctx_r3","sharedSavedSearchesSource","_r11","SavedSearchesDialogComponent","nodeEntries","_nodeEntries","next","constructor","dialogRef","dialogs","savedSearchesService","nodeHelper","injector","Table","SavedSearches","Emitter","destroyed","registerMySavedSearchesSource","registerSharedSavedSearchesSource","ngOnInit","patchConfig","customHeaderBarContent","saveCurrentSearchRef","buttons","getButtons","ngOnDestroy","complete","subject","observeMySavedSearches","pipe","subscribe","setRemote","range","savedSearches","slice","startIndex","endIndex","node","total","length","valueChanges","params","getSharedSavedSearchesNodes","searchString","push","color","embedSelectedSearch","closeDialogWithResult","getSelection","changed","buttonsEnabled","selected","forEach","button","disabled","clear","select","savedSearch","savedSearchNodeToSavedSearch","close","_this","_asyncToGenerator","saveSearchData","afterClosed","_this2","addNodeToLms","_","ɵɵdirectiveInject","i1","CardDialogRef","i2","DialogsService","i3","SavedSearchesService","i4","NodeHelperService","Injector","_2","selectors","viewQuery","SavedSearchesDialogComponent_Query","rf","ctx","SavedSearchesDialogComponent_ng_template_0_Template","SavedSearchesDialogComponent_ng_template_5_Template","SavedSearchesDialogComponent_ng_template_8_Template","SharedModule","NodeEntriesModule","SavedSearchesDialogModule","_3","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}