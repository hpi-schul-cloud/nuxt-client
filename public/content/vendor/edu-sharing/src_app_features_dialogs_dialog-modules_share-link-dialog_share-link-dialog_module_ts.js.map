{"version":3,"file":"src_app_features_dialogs_dialog-modules_share-link-dialog_share-link-dialog_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ6C;AACG;AAEgB;AACQ;;;;;;;;;;;;;;;;;;ICPlEI,4DAAA,sBAKC;IAFCA,wDAAA,wBAAAG,kFAAAC,MAAA;MAAAJ,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAAAO,MAAA,CAAAG,UAAA,GAAAN,MAAA;IAAA,EAAqB;;IAEtBJ,0DAAA,EAAc;;;;IAHbA,mEAAA,UAAAA,yDAAA,4CAA6D;IAC7DA,wDAAA,SAAAe,MAAA,CAAAL,UAAA,CAAqB,YAAAK,MAAA,CAAAC,KAAA;;;;;;IAyBzBhB,4DAAA,4BAUC;IARCA,wDAAA,oBAAAiB,2FAAA;MAAAjB,2DAAA,CAAAkB,GAAA;MAAA,MAAAC,MAAA,GAAAnB,2DAAA;MAAA,OAAUA,yDAAA,CAAAmB,MAAA,CAAAC,WAAA,EAAa;IAAA,EAAC,yBAAAC,gGAAAjB,MAAA;MAAAJ,2DAAA,CAAAkB,GAAA;MAAA,MAAAI,MAAA,GAAAtB,2DAAA;MAAA,OAAAA,yDAAA,CAAAsB,MAAA,CAAAC,cAAA,GAAAnB,MAAA;IAAA;;IAS1BJ,0DAAA,EAAoB;;;;IAPlBA,mEAAA,UAAAA,yDAAA,OAAAwB,MAAA,CAAAC,kBAAA,mGAKG;IANHzB,wDAAA,UAAAwB,MAAA,CAAAD,cAAA,CAA0B;;;;;;;;;;IAkD9BvB,4DAAA,cAA4C;IAC1CA,oDAAA,GACF;;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,8CAAAA,6DAAA,IAAA+B,GAAA,EAAAC,MAAA,CAAAC,YAAA,CAAAC,aAAA,QACF;;;ADnEI,MAAOC,wBAAwB;EACjCC,YACqCC,IAAyB,EAClDC,SAAoE,EACpEC,WAA4B,EAC5BC,SAA2B,EAC3BC,KAAY;IAJa,KAAAJ,IAAI,GAAJA,IAAI;IAC7B,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,KAAK,GAALA,KAAK;IAWjB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,MAAM,GAAG,KAAK;IACd,KAAAC,eAAe,GAAG,KAAK;IAKvB,KAAA5B,KAAK,GAAG,IAAI6B,IAAI,EAAE;IAQlB,KAAAZ,YAAY,GAAc,EAAe;IAxBrC;IACA,IAAI,CAACK,SAAS,CAACQ,UAAU,CAAC;MAAEC,SAAS,EAAE;IAAI,CAAE,CAAC;EAClD;EAEAC,QAAQA,CAAA;IACJ,IAAI,CAACC,OAAO,CAAC,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAC;EAChC;EAWA,IAAIxC,UAAUA,CAACyC,IAAU;IACrB,IAAI,CAACC,WAAW,GAAGD,IAAI;IACvB,IAAI,CAACE,SAAS,CAAC,IAAI,CAAC;EACxB;EACA,IAAI3C,UAAUA,CAAA;IACV,OAAO,IAAI,CAAC0C,WAAW;EAC3B;EAIAE,aAAaA,CAAA;IACT,IAAI,CAAC,IAAI,CAACZ,OAAO,EAAE;IACnB,IAAI;MACA5C,+DAAQ,CAACyD,eAAe,CAAC,IAAI,CAACtB,YAAY,CAACuB,GAAG,CAAC;MAC/C,IAAI,CAACf,KAAK,CAACA,KAAK,CAAC,uCAAuC,CAAC;KAC5D,CAAC,OAAOgB,CAAC,EAAE;MACR,IAAI,CAAChB,KAAK,CAACiB,KAAK,CAAC,IAAI,EAAE,6CAA6C,CAAC;;EAE7E;EAEAC,MAAMA,CAAA;IACF,IAAI,CAACrB,SAAS,CAACsB,KAAK,EAAE;EAC1B;EAEAC,UAAUA,CAACC,KAAc;IACrB,IAAIA,KAAK,EAAE;MACP,IAAI,CAACC,WAAW,EAAE;MAClB;KACH,MAAM;MACH,IAAI,CAACC,WAAW,EAAE;MAClB,IAAI,CAACrB,MAAM,GAAG,KAAK;MACnB,IAAI,CAACC,eAAe,GAAG,KAAK;;EAEpC;EAEQK,OAAOA,CAACC,IAAU;IACtB,IAAI,CAACe,KAAK,GAAGf,IAAI;IACjB,IAAI,CAACZ,SAAS,CAACQ,UAAU,CAAC;MAAEC,SAAS,EAAE;IAAI,CAAE,CAAC;IAC9C,IAAI,CAACR,WAAW,CAAC2B,aAAa,CAAChB,IAAI,CAACiB,GAAG,CAACC,EAAE,EAAExE,mEAAa,CAACyE,UAAU,CAAC,CAACC,SAAS,CAC1EjC,IAAiB,IAAI;MAClB,IAAI,CAACe,WAAW,GAAG,IAAIP,IAAI,CAAC,IAAIA,IAAI,EAAE,CAAC0B,OAAO,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;MACpE,IAAIlC,IAAI,CAACmC,MAAM,EAAE;QACb,IAAI,CAACvC,YAAY,GAAGI,IAAI,CAAC,CAAC,CAAC;QAC3B,IAAI,CAACM,MAAM,GAAGN,IAAI,CAAC,CAAC,CAAC,CAAC3B,UAAU,GAAG,CAAC;QACpC,IAAI,CAACkC,eAAe,GAAGP,IAAI,CAAC,CAAC,CAAC,CAACoC,QAAQ;QACvC,IAAI,IAAI,CAAC7B,eAAe,EAAE;UACtB,IAAI,CAACnB,kBAAkB,GAAG,IAAI;;QAElC,IAAI,CAACiD,WAAW,GAAGrC,IAAI,CAAC,CAAC,CAAC,CAAC3B,UAAU;QACrC,IAAI,IAAI,CAACiC,MAAM,EAAE;UACb,IAAI,CAACjC,UAAU,GAAG,IAAImC,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC3B,UAAU,CAAC;;QAElD,IAAI2B,IAAI,CAAC,CAAC,CAAC,CAAC3B,UAAU,IAAI,CAAC,EAAE;UACzB,IAAI,CAACgC,OAAO,GAAG,KAAK;UACpB,IAAI,CAACJ,SAAS,CAACQ,UAAU,CAAC;YAAEC,SAAS,EAAE;UAAK,CAAE,CAAC;UAC/C,IAAI,CAACd,YAAY,CAACuB,GAAG,GAAG,IAAI,CAAChB,SAAS,CAACmC,OAAO,CAC1C,+BAA+B,CAClC;SACJ,MAAM;UACH,IAAI,CAACjC,OAAO,GAAG,IAAI;UACnB,IAAI,CAACJ,SAAS,CAACQ,UAAU,CAAC;YAAEC,SAAS,EAAE;UAAK,CAAE,CAAC;;OAEtD,MAAM;QACH,IAAI,CAACgB,WAAW,EAAE;;IAE1B,CAAC,EACAL,KAAU,IAAK,IAAI,CAACjB,KAAK,CAACiB,KAAK,CAACA,KAAK,CAAC,CAC1C;EACL;EAEQkB,WAAWA,CAACzB,IAAI,GAAG,IAAI,CAACuB,WAAW;IACvC,IAAI,CAACzC,YAAY,CAACuB,GAAG,GAAG,IAAI,CAAChB,SAAS,CAACmC,OAAO,CAAC,SAAS,CAAC;IACzD,IAAI,CAACpC,WAAW,CACXsC,eAAe,CACZ,IAAI,CAACZ,KAAK,CAACE,GAAG,CAACC,EAAE,EACjB,IAAI,CAACnC,YAAY,CAAC6C,OAAO,EACzB3B,IAAI,EACJ,IAAI,CAAC4B,oBAAoB,EAAE,CAC9B,CACAT,SAAS,CAAEjC,IAAe,IAAI;MAC3B,IAAI,CAACJ,YAAY,GAAGI,IAAI;MACxB,IAAIc,IAAI,IAAI,CAAC,EACT,IAAI,CAAClB,YAAY,CAACuB,GAAG,GAAG,IAAI,CAAChB,SAAS,CAACmC,OAAO,CAAC,+BAA+B,CAAC;IACvF,CAAC,CAAC;EACV;EAEQI,oBAAoBA,CAAA;IACxB,IAAI,IAAI,CAACnC,eAAe,IAAI,IAAI,CAACrB,cAAc,EAAE;MAC7C;MACA,OAAO,IAAI,CAACA,cAAc;KAC7B,MAAM,IAAI,IAAI,CAACqB,eAAe,IAAI,IAAI,CAACnB,kBAAkB,EAAE;MACxD;MACA,OAAO,IAAI;KACd,MAAM;MACH;MACA,OAAO,EAAE;;EAEjB;EAEA4B,SAASA,CAACS,KAAc;IACpB,IAAI,CAAC,IAAI,CAACpB,OAAO,EAAE;IACnB,IAAI,CAACgC,WAAW,GAAGZ,KAAK,GAClBjE,0DAAU,CAACmF,qBAAqB,CAAC,IAAI,CAACtE,UAAU,CAAC,CAAC6D,OAAO,EAAE,GAC3D3E,mEAAa,CAACqF,sBAAsB;IAC1C,IAAI,CAACL,WAAW,EAAE;EACtB;EAEAxD,WAAWA,CAAA;IACP,IAAI,CAAC,IAAI,CAACwB,eAAe,EAAE;MACvB,IAAI,CAACrB,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACE,kBAAkB,GAAG,KAAK;;IAEnC,IAAI,CAACmD,WAAW,EAAE;EACtB;EAEQb,WAAWA,CAAA;IACf,IAAI,CAACzB,SAAS,CAACQ,UAAU,CAAC;MAAEC,SAAS,EAAE;IAAI,CAAE,CAAC;IAC9C,IAAI,CAACR,WAAW,CAAC2C,eAAe,CAAC,IAAI,CAACjB,KAAK,CAACE,GAAG,CAACC,EAAE,CAAC,CAACE,SAAS,CACxDjC,IAAe,IAAI;MAChB,IAAI,CAACZ,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACQ,YAAY,GAAGI,IAAI;MACxB,IAAI,CAACC,SAAS,CAACQ,UAAU,CAAC;QAAEC,SAAS,EAAE;MAAK,CAAE,CAAC;MAC/C,IAAI,CAACL,OAAO,GAAG,IAAI;IACvB,CAAC,EACAgB,KAAU,IAAK,IAAI,CAACjB,KAAK,CAACiB,KAAK,CAACA,KAAK,CAAC,CAC1C;EACL;EAEQM,WAAWA,CAAA;IACf,IAAI,CAAC1B,SAAS,CAACQ,UAAU,CAAC;MAAEC,SAAS,EAAE;IAAI,CAAE,CAAC;IAC9C,IAAI,CAACR,WAAW,CACX4C,eAAe,CAAC,IAAI,CAAClB,KAAK,CAACE,GAAG,CAACC,EAAE,EAAE,IAAI,CAACnC,YAAY,CAAC6C,OAAO,CAAC,CAC7DR,SAAS,CAAC,MAAK;MACX,IAAI,CAACrC,YAAoB,GAAG,EAAE;MAC/B,IAAI,CAACK,SAAS,CAACQ,UAAU,CAAC;QAAEC,SAAS,EAAE;MAAK,CAAE,CAAC;IACnD,CAAC,CAAC;EACV;EAAC,QAAAqC,CAAA;qBAjKQjD,wBAAwB,EAAAnC,+DAAA,CAErBD,6EAAgB,GAAAC,+DAAA,CAAAsF,uEAAA,GAAAtF,+DAAA,CAAAwF,qEAAA,GAAAxF,+DAAA,CAAA0F,iEAAA,GAAA1F,+DAAA,CAAA4F,kDAAA;EAAA;EAAA,QAAAE,EAAA;UAFnB3D,wBAAwB;IAAA4D,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCrBrCrG,4DAAA,aAAmB;QAGQA,oDAAA,GAAqD;;QAAAA,0DAAA,EAAM;QAChFA,4DAAA,QAAG;QAAAA,oDAAA,GAAoD;;QAAAA,0DAAA,EAAI;QAC3DA,wDAAA,IAAAwG,+CAAA,yBAKe;QACjBxG,0DAAA,EAAM;QACNA,4DAAA,cAAwB;QAEpBA,wDAAA,2BAAAyG,6EAAArG,MAAA;UAAA,OAAAkG,GAAA,CAAA3D,MAAA,GAAAvC,MAAA;QAAA,EAAoB,oBAAAsG,sEAAA;UAAA,OACVJ,GAAA,CAAAjD,SAAA,CAAAiD,GAAA,CAAA3D,MAAA,CAAiB;QAAA,EADP;QAGrB3C,0DAAA,EAAmB;QAGxBA,4DAAA,cAAgC;QAEPA,oDAAA,IAAiD;;QAAAA,0DAAA,EAAM;QAC5EA,4DAAA,SAAG;QAAAA,oDAAA,IAAsD;;QAAAA,0DAAA,EAAI;QAG/DA,4DAAA,cAAwB;QAEpBA,wDAAA,2BAAA2G,6EAAAvG,MAAA;UAAA,OAAAkG,GAAA,CAAA1D,eAAA,GAAAxC,MAAA;QAAA,EAA6B,oBAAAwG,sEAAA;UAAA,OACnBN,GAAA,CAAAlF,WAAA,EAAa;QAAA,EADM;QAG9BpB,0DAAA,EAAmB;QAEtBA,wDAAA,KAAA6G,sDAAA,+BAWoB;QACtB7G,0DAAA,EAAM;QAGRA,4DAAA,cAAkB;QAGEA,wDAAA,2BAAA8G,yEAAA1G,MAAA;UAAA,OAAAkG,GAAA,CAAA5D,OAAA,GAAAtC,MAAA;QAAA,EAAqB,oBAAA2G,kEAAA;UAAA,OAAWT,GAAA,CAAAzC,UAAA,CAAAyC,GAAA,CAAA5D,OAAA,CAAmB;QAAA,EAA9B;QAAgC1C,oDAAA,IAEjE;;QAAAA,0DAAA,EAAe;QAGrBA,4DAAA,eAA6D;QAE9CA,oDAAA,IAA6C;;QAAAA,0DAAA,EAAY;QACpEA,4DAAA,qBAOE;QAHAA,wDAAA,mBAAAgH,0DAAA;UAAAhH,2DAAA,CAAAiH,GAAA;UAAA,MAAAC,GAAA,GAAAlH,yDAAA;UAAA,OAASA,yDAAA,CAAAkH,GAAA,CAAAE,MAAA,EAAiB;QAAA,EAAC,2BAAAC,kEAAAjH,MAAA;UAAA,OAAAkG,GAAA,CAAArE,YAAA,CAAAuB,GAAA,GAAApD,MAAA;QAAA;QAJ7BJ,0DAAA,EAOE;QAEJA,4DAAA,eAAsB;QAGlBA,wDAAA,mBAAAsH,2DAAA;UAAA,OAAShB,GAAA,CAAAhD,aAAA,EAAe;QAAA,EAAC,yBAAAiE,iEAAA;UAAA,OAEVjB,GAAA,CAAAhD,aAAA,EAAe;QAAA,EAFL;QAKzBtD,oDAAA,IACF;;QAAAA,0DAAA,EAAS;QAKfA,4DAAA,cAAmB;QAEfA,oDAAA,IACF;;QAAAA,0DAAA,EAAM;QACNA,wDAAA,KAAAwH,wCAAA,kBAEM;QACRxH,0DAAA,EAAM;;;QAtFqBA,uDAAA,GAAqD;QAArDA,+DAAA,CAAAA,yDAAA,6CAAqD;QACvEA,uDAAA,GAAoD;QAApDA,+DAAA,CAAAA,yDAAA,4CAAoD;QAEpDA,uDAAA,GAAY;QAAZA,wDAAA,SAAAsG,GAAA,CAAA3D,MAAA,CAAY;QAQb3C,uDAAA,GAAoB;QAApBA,wDAAA,YAAAsG,GAAA,CAAA3D,MAAA,CAAoB,cAAA2D,GAAA,CAAA5D,OAAA;QAQD1C,uDAAA,GAAiD;QAAjDA,+DAAA,CAAAA,yDAAA,0CAAiD;QACnEA,uDAAA,GAAsD;QAAtDA,+DAAA,CAAAA,yDAAA,+CAAsD;QAKvDA,uDAAA,GAA6B;QAA7BA,wDAAA,YAAAsG,GAAA,CAAA1D,eAAA,CAA6B,cAAA0D,GAAA,CAAA5D,OAAA;QAM9B1C,uDAAA,GAAqB;QAArBA,wDAAA,SAAAsG,GAAA,CAAA1D,eAAA,CAAqB;QAiBR5C,uDAAA,GAAqB;QAArBA,wDAAA,YAAAsG,GAAA,CAAA5D,OAAA,CAAqB;QAAgC1C,uDAAA,GAEjE;QAFiEA,+DAAA,CAAAA,yDAAA,0CAEjE;QAGsBA,uDAAA,GAAgC;QAAhCA,yDAAA,mBAAAsG,GAAA,CAAA5D,OAAA,CAAgC;QAE7C1C,uDAAA,GAA6C;QAA7CA,+DAAA,CAAAA,yDAAA,sCAA6C;QAItDA,uDAAA,GAAqB;QAArBA,wDAAA,cAAAsG,GAAA,CAAA5D,OAAA,CAAqB,YAAA4D,GAAA,CAAArE,YAAA,CAAAuB,GAAA;QAUrBxD,uDAAA,GAAqB;QAArBA,wDAAA,cAAAsG,GAAA,CAAA5D,OAAA,CAAqB;QAIrB1C,uDAAA,GACF;QADEA,gEAAA,MAAAA,yDAAA,qDACF;QAOFA,uDAAA,GACF;QADEA,gEAAA,MAAAA,yDAAA,6CAAAsG,GAAA,CAAArC,KAAA,CAAA0D,WAAA,yBACF;QAC6B3H,uDAAA,GAAa;QAAbA,wDAAA,SAAAsG,GAAA,CAAA5D,OAAA,CAAa;;;;;;;;;;;;;;;;;;;;;;;;ACrFoB;AACS;;AAErC;AAM9B,MAAOmF,qBAAqB;EAAA,QAAAzC,CAAA;qBAArByC,qBAAqB;EAAA;EAAA,QAAA/B,EAAA;UAArB+B;EAAqB;EAAA,QAAAC,EAAA;cAFpBF,+DAAY;EAAA;;;sHAEbC,qBAAqB;IAAAE,YAAA,GAHf5F,kFAAwB;IAAA6F,OAAA,GAC7BJ,+DAAY;EAAA;AAAA","sources":["./src/app/features/dialogs/dialog-modules/share-link-dialog/share-link-dialog.component.ts","./src/app/features/dialogs/dialog-modules/share-link-dialog/share-link-dialog.component.html","./src/app/features/dialogs/dialog-modules/share-link-dialog/share-link-dialog.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n    DialogButton,\n    Node,\n    NodeShare,\n    RestConstants,\n    RestNodeService,\n} from '../../../../core-module/core.module';\nimport { DateHelper } from 'ngx-edu-sharing-ui';\nimport { Toast } from '../../../../services/toast';\nimport { UIHelper } from '../../../../core-ui-module/ui-helper';\nimport { CARD_DIALOG_DATA } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport { ShareLinkDialogData, ShareLinkDialogResult } from './share-link-dialog-data';\n\n@Component({\n    selector: 'es-share-link-dialog',\n    templateUrl: './share-link-dialog.component.html',\n    styleUrls: ['./share-link-dialog.component.scss'],\n})\nexport class ShareLinkDialogComponent implements OnInit {\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: ShareLinkDialogData,\n        private dialogRef: CardDialogRef<ShareLinkDialogData, ShareLinkDialogResult>,\n        private nodeService: RestNodeService,\n        private translate: TranslateService,\n        private toast: Toast,\n    ) {\n        // Set `isLoading` before `ngOnInit`, so it won't cause a changed-after-checked error.\n        this.dialogRef.patchState({ isLoading: true });\n    }\n\n    ngOnInit(): void {\n        this.setNode(this.data.node);\n    }\n\n    _node: Node;\n    enabled = false;\n    expiry = false;\n    passwordEnabled = false;\n    passwordString: string;\n    _expiryDate: Date;\n    passwordAlreadySet: boolean;\n    buttons: DialogButton[];\n    today = new Date();\n    set expiryDate(date: Date) {\n        this._expiryDate = date;\n        this.setExpiry(true);\n    }\n    get expiryDate() {\n        return this._expiryDate;\n    }\n    currentShare: NodeShare = {} as NodeShare;\n    private currentDate: number;\n\n    copyClipboard() {\n        if (!this.enabled) return;\n        try {\n            UIHelper.copyToClipboard(this.currentShare.url);\n            this.toast.toast('WORKSPACE.SHARE_LINK.COPIED_CLIPBOARD');\n        } catch (e) {\n            this.toast.error(null, 'WORKSPACE.SHARE_LINK.COPIED_CLIPBOARD_ERROR');\n        }\n    }\n\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    setEnabled(value: boolean) {\n        if (value) {\n            this.createShare();\n            //this.updateShare(RestConstants.SHARE_EXPIRY_UNLIMITED);\n        } else {\n            this.deleteShare();\n            this.expiry = false;\n            this.passwordEnabled = false;\n        }\n    }\n\n    private setNode(node: Node) {\n        this._node = node;\n        this.dialogRef.patchState({ isLoading: true });\n        this.nodeService.getNodeShares(node.ref.id, RestConstants.SHARE_LINK).subscribe(\n            (data: NodeShare[]) => {\n                this._expiryDate = new Date(new Date().getTime() + 3600 * 24 * 1000);\n                if (data.length) {\n                    this.currentShare = data[0];\n                    this.expiry = data[0].expiryDate > 0;\n                    this.passwordEnabled = data[0].password;\n                    if (this.passwordEnabled) {\n                        this.passwordAlreadySet = true;\n                    }\n                    this.currentDate = data[0].expiryDate;\n                    if (this.expiry) {\n                        this.expiryDate = new Date(data[0].expiryDate);\n                    }\n                    if (data[0].expiryDate == 0) {\n                        this.enabled = false;\n                        this.dialogRef.patchState({ isLoading: false });\n                        this.currentShare.url = this.translate.instant(\n                            'WORKSPACE.SHARE_LINK.DISABLED',\n                        );\n                    } else {\n                        this.enabled = true;\n                        this.dialogRef.patchState({ isLoading: false });\n                    }\n                } else {\n                    this.createShare();\n                }\n            },\n            (error: any) => this.toast.error(error),\n        );\n    }\n\n    private updateShare(date = this.currentDate) {\n        this.currentShare.url = this.translate.instant('LOADING');\n        this.nodeService\n            .updateNodeShare(\n                this._node.ref.id,\n                this.currentShare.shareId,\n                date,\n                this.getPasswordParameter(),\n            )\n            .subscribe((data: NodeShare) => {\n                this.currentShare = data;\n                if (date == 0)\n                    this.currentShare.url = this.translate.instant('WORKSPACE.SHARE_LINK.DISABLED');\n            });\n    }\n\n    private getPasswordParameter(): string | null {\n        if (this.passwordEnabled && this.passwordString) {\n            // Set or update the password\n            return this.passwordString;\n        } else if (this.passwordEnabled && this.passwordAlreadySet) {\n            // Keep the password that was already set\n            return null;\n        } else {\n            // Remove the password\n            return '';\n        }\n    }\n\n    setExpiry(value: boolean) {\n        if (!this.enabled) return;\n        this.currentDate = value\n            ? DateHelper.getDateFromDatepicker(this.expiryDate).getTime()\n            : RestConstants.SHARE_EXPIRY_UNLIMITED;\n        this.updateShare();\n    }\n\n    setPassword() {\n        if (!this.passwordEnabled) {\n            this.passwordString = null;\n            this.passwordAlreadySet = false;\n        }\n        this.updateShare();\n    }\n\n    private createShare() {\n        this.dialogRef.patchState({ isLoading: true });\n        this.nodeService.createNodeShare(this._node.ref.id).subscribe(\n            (data: NodeShare) => {\n                this.passwordAlreadySet = false;\n                this.currentShare = data;\n                this.dialogRef.patchState({ isLoading: false });\n                this.enabled = true;\n            },\n            (error: any) => this.toast.error(error),\n        );\n    }\n\n    private deleteShare() {\n        this.dialogRef.patchState({ isLoading: true });\n        this.nodeService\n            .deleteNodeShare(this._node.ref.id, this.currentShare.shareId)\n            .subscribe(() => {\n                (this.currentShare as any) = {};\n                this.dialogRef.patchState({ isLoading: false });\n            });\n    }\n}\n","<div class=\"group\">\n  <div class=\"configuration-link\">\n    <div class=\"info-left\">\n      <div class=\"heading\">{{ 'WORKSPACE.SHARE_LINK.EXPIRY_TITLE' | translate }}</div>\n      <p>{{ 'WORKSPACE.SHARE_LINK.EXPIRY_INFO' | translate }}</p>\n      <es-calendar\n        *ngIf=\"expiry\"\n        label=\"{{ 'WORKSPACE.SHARE_LINK.EXPIRY_LABEL' | translate }}\"\n        [(date)]=\"expiryDate\"\n        [minDate]=\"today\"\n      ></es-calendar>\n    </div>\n    <div class=\"info-right\">\n      <mat-slide-toggle\n        [(ngModel)]=\"expiry\"\n        (change)=\"setExpiry(expiry)\"\n        [disabled]=\"!enabled\"\n      ></mat-slide-toggle>\n    </div>\n  </div>\n  <div class=\"configuration-link\">\n    <div class=\"info-left\">\n      <div class=\"heading\">{{ 'WORKSPACE.SHARE_LINK.PASSWORD' | translate }}</div>\n      <p>{{ 'WORKSPACE.SHARE_LINK.PASSWORD_INFO' | translate }}</p>\n    </div>\n\n    <div class=\"info-right\">\n      <mat-slide-toggle\n        [(ngModel)]=\"passwordEnabled\"\n        (change)=\"setPassword()\"\n        [disabled]=\"!enabled\"\n      ></mat-slide-toggle>\n    </div>\n    <es-input-password\n      *ngIf=\"passwordEnabled\"\n      (change)=\"setPassword()\"\n      [(value)]=\"passwordString\"\n      label=\"{{\n        (passwordAlreadySet\n          ? 'WORKSPACE.SHARE_LINK.PASSWORD_PLACEHOLDER_EDIT'\n          : 'WORKSPACE.SHARE_LINK.PASSWORD_PLACEHOLDER'\n        ) | translate\n      }}\"\n    >\n    </es-input-password>\n  </div>\n</div>\n\n<div class=\"link\">\n  <div class=\"info\">\n    <div class=\"info-checkbox\">\n      <mat-checkbox [(ngModel)]=\"enabled\" (change)=\"setEnabled(enabled)\">{{\n        'WORKSPACE.SHARE_LINK.ACTIVATE' | translate\n      }}</mat-checkbox>\n    </div>\n  </div>\n  <div class=\"info link-info\" [class.link-disabled]=\"!enabled\">\n    <mat-form-field class=\"linkInput info-left\">\n      <mat-label>{{ 'WORKSPACE.SHARE_LINK.LINK' | translate }}</mat-label>\n      <input\n        matInput\n        #shareUrl\n        [disabled]=\"!enabled\"\n        (click)=\"shareUrl.select()\"\n        readonly=\"true\"\n        [(ngModel)]=\"currentShare.url\"\n      />\n    </mat-form-field>\n    <div class=\"copyLink\">\n      <button\n        mat-raised-button\n        (click)=\"copyClipboard()\"\n        [disabled]=\"!enabled\"\n        (keyup.enter)=\"copyClipboard()\"\n        class=\"link-copy\"\n      >\n        {{ 'WORKSPACE.SHARE_LINK.COPY_CLIPBOARD' | translate }}\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"group\">\n  <div class=\"link-info\">\n    {{ 'WORKSPACE.SHARE_LINK.LINK_INFO' + (_node.isDirectory ? '_FOLDER' : '') | translate }}\n  </div>\n  <div class=\"link-downloads\" *ngIf=\"enabled\">\n    {{ 'WORKSPACE.SHARE_LINK.LINK_DOWNLOADS' | translate : { count: currentShare.downloadCount } }}\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { ShareLinkDialogComponent } from './share-link-dialog.component';\n\nexport { ShareLinkDialogComponent };\n\n@NgModule({\n    declarations: [ShareLinkDialogComponent],\n    imports: [SharedModule],\n})\nexport class ShareLinkDialogModule {}\n"],"names":["RestConstants","DateHelper","UIHelper","CARD_DIALOG_DATA","i0","ɵɵelementStart","ɵɵlistener","ShareLinkDialogComponent_es_calendar_9_Template_es_calendar_dateChange_0_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","expiryDate","ɵɵelementEnd","ɵɵpropertyInterpolate","ɵɵpipeBind1","ɵɵproperty","ctx_r0","today","ShareLinkDialogComponent_es_input_password_22_Template_es_input_password_change_0_listener","_r7","ctx_r6","setPassword","ShareLinkDialogComponent_es_input_password_22_Template_es_input_password_valueChange_0_listener","ctx_r8","passwordString","ctx_r1","passwordAlreadySet","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵpureFunction1","_c0","ctx_r3","currentShare","downloadCount","ShareLinkDialogComponent","constructor","data","dialogRef","nodeService","translate","toast","enabled","expiry","passwordEnabled","Date","patchState","isLoading","ngOnInit","setNode","node","date","_expiryDate","setExpiry","copyClipboard","copyToClipboard","url","e","error","cancel","close","setEnabled","value","createShare","deleteShare","_node","getNodeShares","ref","id","SHARE_LINK","subscribe","getTime","length","password","currentDate","instant","updateShare","updateNodeShare","shareId","getPasswordParameter","getDateFromDatepicker","SHARE_EXPIRY_UNLIMITED","createNodeShare","deleteNodeShare","_","ɵɵdirectiveInject","i1","CardDialogRef","i2","RestNodeService","i3","TranslateService","i4","Toast","_2","selectors","decls","vars","consts","template","ShareLinkDialogComponent_Template","rf","ctx","ɵɵtemplate","ShareLinkDialogComponent_es_calendar_9_Template","ShareLinkDialogComponent_Template_mat_slide_toggle_ngModelChange_11_listener","ShareLinkDialogComponent_Template_mat_slide_toggle_change_11_listener","ShareLinkDialogComponent_Template_mat_slide_toggle_ngModelChange_21_listener","ShareLinkDialogComponent_Template_mat_slide_toggle_change_21_listener","ShareLinkDialogComponent_es_input_password_22_Template","ShareLinkDialogComponent_Template_mat_checkbox_ngModelChange_26_listener","ShareLinkDialogComponent_Template_mat_checkbox_change_26_listener","ShareLinkDialogComponent_Template_input_click_34_listener","_r9","_r2","ɵɵreference","select","ShareLinkDialogComponent_Template_input_ngModelChange_34_listener","ShareLinkDialogComponent_Template_button_click_37_listener","ShareLinkDialogComponent_Template_button_keyup_enter_37_listener","ShareLinkDialogComponent_div_44_Template","ɵɵtextInterpolate","ɵɵclassProp","isDirectory","SharedModule","ShareLinkDialogModule","_3","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}