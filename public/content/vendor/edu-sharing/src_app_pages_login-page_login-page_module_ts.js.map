{"version":3,"file":"src_app_pages_login-page_login-page_module_ts.js","mappings":"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","sources":["./src/app/pages/login-page/login-page-routing.module.ts","./src/app/pages/login-page/login-page.component.ts","./src/app/pages/login-page/login-page.component.html","./src/app/pages/login-page/login-page.module.ts","./src/app/pages/login-page/url.pipe.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginPageComponent } from './login-page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginPageComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { trigger } from '@angular/animations';\nimport { PlatformLocation } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { delay, first, map, startWith, switchMap } from 'rxjs/operators';\nimport { BridgeService } from '../../services/bridge.service';\nimport {\n    ConfigurationService,\n    DialogButton,\n    LoginResult,\n    RestConnectorService,\n    RestConstants,\n    RestHelper,\n} from '../../core-module/core.module';\nimport { Helper } from '../../core-module/rest/helper';\nimport { InputPasswordComponent } from '../../shared/components/input-password/input-password.component';\nimport { RouterHelper } from '../../util/router.helper';\nimport { Toast } from '../../services/toast';\nimport { OPEN_URL_MODE, TranslationsService, UIAnimation, UIConstants } from 'ngx-edu-sharing-ui';\nimport { UIHelper } from '../../core-ui-module/ui-helper';\nimport { AuthenticationService, LoginInfo } from 'ngx-edu-sharing-api';\nimport { LoadingScreenService } from '../../main/loading-screen/loading-screen.service';\nimport { MainNavService } from '../../main/navigation/main-nav.service';\nimport { Subject } from 'rxjs';\nimport { ThemeService } from '../../services/theme.service';\n\n@Component({\n    selector: 'es-login-page',\n    templateUrl: 'login-page.component.html',\n    styleUrls: ['login-page.component.scss'],\n    animations: [trigger('dialog', UIAnimation.switchDialog(UIAnimation.ANIMATION_TIME_FAST))],\n})\nexport class LoginPageComponent implements OnInit, OnDestroy, AfterViewInit {\n    readonly ROUTER_PREFIX = UIConstants.ROUTER_PREFIX;\n    @ViewChild('loginForm') loginForm: ElementRef;\n    @ViewChild('passwordInput') passwordInput: InputPasswordComponent;\n    @ViewChild('usernameInput') usernameInput: ElementRef;\n\n    buttons: DialogButton[];\n    caption = 'LOGIN.TITLE';\n    config: any = {};\n    currentProvider: any;\n    disabled = false;\n    isSafeLogin = false;\n    filteredProviders: any;\n    isLoading = true;\n    loginUrl: any;\n    password = '';\n    providerControl = new UntypedFormControl();\n    showProviders = false;\n    username = '';\n\n    private next = '';\n    private providers: any;\n    private scope = '';\n    private destroyed = new Subject<void>();\n\n    constructor(\n        private connector: RestConnectorService,\n        private toast: Toast,\n        private platformLocation: PlatformLocation,\n        private router: Router,\n        private http: HttpClient,\n        private translations: TranslationsService,\n        private configService: ConfigurationService,\n        private route: ActivatedRoute,\n        private bridge: BridgeService,\n        private authentication: AuthenticationService,\n        private themeService: ThemeService,\n        private loadingScreen: LoadingScreenService,\n        private mainNav: MainNavService,\n    ) {\n        // reset the theme in case user was in safe previously\n        this.themeService.initWithDefaults();\n        const loadingTask = this.loadingScreen.addLoadingTask({ until: this.destroyed });\n        this.isLoading = true;\n        this.updateButtons();\n        this.translations\n            .waitForInit()\n            .pipe(switchMap(() => this.configService.getAll()))\n            .subscribe((data: any) => {\n                this.config = data;\n                if (!this.config.register) {\n                    // default register mode: allow local registration if not disabled\n                    this.config.register = { local: true };\n                }\n                if (this.bridge.getCordova().isRunningCordova()) {\n                    this.router.navigate([UIConstants.ROUTER_PREFIX, 'app'], {\n                        replaceUrl: true,\n                    });\n                    return;\n                }\n                this.updateButtons();\n                this.username = this.configService.instant('defaultUsername', '');\n                this.password = this.configService.instant('defaultPassword', '');\n                this.route.queryParams.forEach((params: Params) => {\n                    if (params.username) {\n                        this.username = params.username;\n                    }\n                    this.next = params.next;\n                    this.connector.onAllRequestsReady().subscribe(() => {\n                        setTimeout(() => {\n                            if (this.username && this.passwordInput) {\n                                this.passwordInput.nativeInput.nativeElement.focus();\n                            } else if (this.usernameInput) {\n                                this.usernameInput.nativeElement.focus();\n                            }\n                        }, 100);\n                    });\n                    this.scope = params.scope;\n                    if (!this.scope) {\n                        this.scope = null;\n                    }\n                    this.connector.isLoggedIn().subscribe(async (data: LoginResult) => {\n                        if (data.currentScope) {\n                            // just to make sure there is no scope still set // NO: We need a valid session when login to scope!!!\n                            try {\n                                await this.connector.logout().toPromise();\n                            } catch (e) {\n                                console.warn(e);\n                            }\n                            data.statusCode = null;\n                        } else if (data.currentScope === this.scope) {\n                            if (\n                                data.statusCode === RestConstants.STATUS_CODE_OK &&\n                                params.local !== 'true'\n                            ) {\n                                this.goToNext(data);\n                            }\n                        }\n                        // when there is a request to go into safe mode, first, the user needs to log in regularly\n                        else if (data.statusCode !== RestConstants.STATUS_CODE_OK && this.scope) {\n                            // RestHelper.goToLogin()\n                        }\n                        this.loginUrl = configService.instant('loginUrl');\n                        const allowLocal = configService.instant('loginAllowLocal', false);\n                        if (\n                            params.local !== 'true' &&\n                            !allowLocal &&\n                            this.loginUrl &&\n                            data.statusCode !== RestConstants.STATUS_CODE_OK\n                        ) {\n                            this.openLoginUrl();\n                            return;\n                        }\n                        this.isLoading = false;\n                        loadingTask.done();\n                        if (configService.instant('loginProvidersUrl')) {\n                            this.showProviders = true;\n                            this.updateButtons();\n                            // delay to make sure animation of card has finished\n                            // otherwise, overlay gets aligned wrongly\n                            const providers = await this.http\n                                .get(configService.instant('loginProvidersUrl'))\n                                .pipe(delay(UIAnimation.ANIMATION_TIME_NORMAL))\n                                .toPromise();\n                            this.processProviders(providers);\n                        }\n                    });\n                    this.isSafeLogin = this.scope == RestConstants.SAFE_SCOPE;\n                    if (this.scope === RestConstants.SAFE_SCOPE) {\n                        this.connector.isLoggedIn(true).subscribe(\n                            (data: LoginResult) => {\n                                if (data.statusCode !== RestConstants.STATUS_CODE_OK) {\n                                    RestHelper.goToLogin(this.router, this.configService);\n                                } else {\n                                    this.authentication\n                                        .observeHasAccessToScope(RestConstants.SAFE_SCOPE)\n                                        .pipe(first())\n                                        .subscribe((hasAccess) => {\n                                            if (hasAccess) {\n                                                this.username = data.authorityName;\n                                            } else {\n                                                this.toast.error(null, 'LOGIN.NO_ACCESS');\n                                                this.router.navigate([\n                                                    UIConstants.ROUTER_PREFIX + 'workspace',\n                                                ]);\n                                                // window.history.back();\n                                            }\n                                        });\n                                }\n                            },\n                            (error: any) => RestHelper.goToLogin(this.router, this.configService),\n                        );\n                    }\n\n                    if (this.scope === RestConstants.SAFE_SCOPE) {\n                        this.caption = 'LOGIN.TITLE_SAFE';\n                    } else {\n                        this.caption = 'LOGIN.TITLE';\n                    }\n                });\n            });\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 100);\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    canRegister(): boolean {\n        return (\n            this.config.register && (this.config.register.local || this.config.register.registerUrl)\n        );\n    }\n\n    checkConditions() {\n        this.disabled = !this.username || this.currentProvider; // || !this.password;\n        this.updateButtons();\n    }\n\n    currentProviderDisplay(provider: any) {\n        return provider ? provider.name : '';\n    }\n\n    goToProvider() {\n        if (!this.currentProvider) {\n            this.toast.error(null, 'LOGIN.NO_PROVIDER_SELECTED');\n        }\n        let url = this.configService.instant('loginProviderTargetUrl');\n        if (!url) {\n            this.toast.error(null, 'No configuration for loginProviderTargetUrl found.');\n            return;\n        }\n        const target =\n            this.connector.getAbsoluteServerUrl() + this.configService.instant('loginUrl');\n        url = url\n            .replace(':target', encodeURIComponent(target))\n            // remove invalid parameters for multiple universities using the same idp\n            .replace(\n                ':entity',\n                encodeURIComponent(this.currentProvider.url.replace(/@_.*?_@/, '')),\n            );\n        // @TODO: Redirect to shibboleth provider\n        UIHelper.openUrl(url, this.bridge, OPEN_URL_MODE.Current);\n    }\n\n    login() {\n        this.isLoading = true;\n        this.connector.login(this.username, this.password, this.scope).subscribe(\n            (data) => {\n                if (data.statusCode === RestConstants.STATUS_CODE_OK) {\n                    this.goToNext(data);\n                } else {\n                    if (\n                        data.statusCode === RestConstants.STATUS_CODE_PREVIOUS_SESSION_REQUIRED ||\n                        data.statusCode === RestConstants.STATUS_CODE_PREVIOUS_USER_WRONG\n                    ) {\n                        this.toast.error(null, 'LOGIN.SAFE_PREVIOUS');\n                    } else if (data.statusCode === RestConstants.STATUS_CODE_PASSWORD_EXPIRED) {\n                        this.toast.error(\n                            null,\n                            'LOGIN.PASSWORD_EXPIRED' + (this.isSafeLogin ? '_SAFE' : ''),\n                        );\n                    } else if (data.statusCode === RestConstants.STATUS_CODE_PERSON_BLOCKED) {\n                        this.toast.error(null, 'LOGIN.PERSON_BLOCKED');\n                    } else {\n                        this.toast.error(null, 'LOGIN.ERROR' + (this.isSafeLogin ? '_SAFE' : ''));\n                    }\n                    this.password = '';\n                    this.isLoading = false;\n                }\n            },\n            (error: any) => {\n                this.toast.error(error);\n                this.isLoading = false;\n            },\n        );\n    }\n\n    ngOnInit() {\n        this.mainNav.setMainNavConfig({\n            currentScope: 'login',\n            title: 'SIDEBAR.LOGIN',\n        });\n    }\n\n    openLoginUrl() {\n        window.location.href = this.loginUrl;\n    }\n\n    register() {\n        if (this.config.register.local) {\n            this.router.navigate([UIConstants.ROUTER_PREFIX + 'register']);\n        } else {\n            window.location.href = this.config.register.registerUrl;\n        }\n    }\n\n    private filterProviders(filter: any = '') {\n        const filtered = [];\n        if (!this.providers) {\n            return null;\n        }\n        // an object was detected, abort\n        if (filter.name) {\n            return this.providers;\n        }\n        this.currentProvider = null;\n        for (const p of Helper.deepCopy(this.providers)) {\n            p.providers = p.providers.filter(\n                (p: any) =>\n                    p.name.toLowerCase().includes(filter.toLowerCase()) ||\n                    p.data?.toLowerCase().includes(filter.toLowerCase()),\n            );\n            if (p.providers.length) {\n                filtered.push(p);\n            }\n        }\n        return filtered;\n    }\n\n    private goToNext(data: LoginInfo) {\n        if (this.next) {\n            this.next = Helper.addGetParameter('fromLogin', 'true', this.next);\n            RouterHelper.navigateToAbsoluteUrl(this.platformLocation, this.router, this.next);\n        } else if (data.currentScope === RestConstants.SAFE_SCOPE) {\n            this.router.navigate([UIConstants.ROUTER_PREFIX, 'workspace', 'safe']);\n        } else {\n            UIHelper.goToDefaultLocation(this.router, this.platformLocation, this.configService);\n        }\n    }\n\n    private processProviders(providers: any) {\n        const data: any = {};\n        for (const provider of Object.keys(providers.wayf_idps)) {\n            const object = providers.wayf_idps[provider];\n            if (object) {\n                object.url = provider;\n                const type = object.type;\n                if (!data[type]) {\n                    data[type] = {\n                        group: providers.wayf_categories[type],\n                        providers: [],\n                    };\n                }\n                data[type].providers.push(object);\n            }\n        }\n        this.providers = [];\n        for (const key of Object.keys(data)) {\n            this.providers.push(data[key]);\n        }\n\n        // register observer for autocomplete\n        this.filteredProviders = this.providerControl.valueChanges.pipe(\n            startWith(''),\n            map((value: string) => this.filterProviders(value)),\n        );\n    }\n\n    private updateButtons(): any {\n        this.buttons = [];\n        if (this.showProviders) {\n            return;\n        }\n        if (this.canRegister()) {\n            this.buttons.push(\n                new DialogButton('LOGIN.REGISTER_TEXT', { color: 'standard' }, () =>\n                    this.register(),\n                ),\n            );\n        }\n        const login = new DialogButton('LOGIN.LOGIN', { color: 'primary' }, () => this.login());\n        login.disabled = this.disabled;\n        this.buttons.push(login);\n    }\n}\n","<es-global-progress *ngIf=\"isLoading\"></es-global-progress>\n<div *ngIf=\"!isLoading\">\n  <es-card\n    role=\"main\"\n    esSkipTarget=\"MAIN_CONTENT\"\n    title=\"{{ caption | translate }}\"\n    avatar=\"assets/images/app-icon.svg\"\n    subtitle=\"{{ 'LOGIN.SUBTITLE' | translate }}\"\n    [isCancelable]=\"false\"\n    [priority]=\"-30\"\n    modal=\"auto\"\n    [buttons]=\"buttons\"\n    [width]=\"showProviders ? 'xxlarge' : 'normal'\"\n    [height]=\"showProviders ? '' : 'large'\"\n    [attr.showProviders]=\"showProviders\"\n  >\n    <div class=\"login-content\">\n      <h1 esTitle class=\"cdk-visually-hidden\">{{ 'LOGIN.TITLE' | translate }}</h1>\n      <div class=\"branding\">\n        <img\n          [src]=\"'assets/images/logo.svg' | esAssetsPath\"\n          esImageConfig\n          alt=\"{{ 'LOGIN.APP_LOGO' | translate }}\"\n        />\n      </div>\n      <div class=\"groups\">\n        <div class=\"providers-select\" *ngIf=\"showProviders\">\n          <div class=\"group-heading\">{{ 'LOGIN.PROVIDER_SELECT_GROUP' | translate }}</div>\n          <div class=\"group-description\">\n            {{ 'LOGIN.PROVIDER_SELECT_GROUP_DESCRIPTION' | translate }}\n          </div>\n          <mat-form-field floatLabel=\"always\">\n            <mat-label>{{ 'LOGIN.PROVIDER_LABEL' | translate }}</mat-label>\n            <input\n              type=\"text\"\n              matInput\n              placeholder=\"{{ 'LOGIN.PROVIDER_PLACEHOLDER' | translate }}\"\n              (keydown.enter)=\"goToProvider()\"\n              [formControl]=\"providerControl\"\n              [matAutocomplete]=\"autoProvider\"\n            />\n            <mat-autocomplete\n              #autoProvider=\"matAutocomplete\"\n              [displayWith]=\"currentProviderDisplay\"\n            >\n              <mat-optgroup\n                *ngFor=\"let group of filteredProviders | async\"\n                [label]=\"group.group.name\"\n              >\n                <mat-option\n                  *ngFor=\"let option of group.providers\"\n                  [value]=\"option\"\n                  (onSelectionChange)=\"currentProvider = option\"\n                >\n                  <div class=\"mat-option-primary\">{{ option.name }}</div>\n                  <div class=\"mat-option-secondary\">\n                    {{ option.url | esUrl : { mode: 'domain' } }}\n                  </div>\n                </mat-option>\n              </mat-optgroup>\n            </mat-autocomplete>\n          </mat-form-field>\n          <div class=\"sso-group\">\n            <img class=\"sso-logo\" [src]=\"'assets/images/sso_logo.svg' | esAssetsPath\" />\n            <div class=\"group-actions\">\n              <button mat-raised-button color=\"primary\" (click)=\"goToProvider()\">\n                {{ 'LOGIN.GO_TO_PROVIDER' | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"login-form\">\n          <div class=\"group-heading\" *ngIf=\"showProviders\">\n            {{ 'LOGIN.LOGIN_GROUP' | translate }}\n          </div>\n          <div class=\"group-description\" *ngIf=\"showProviders\">\n            {{ 'LOGIN.LOGIN_GROUP_DESCRIPTION' | translate }}\n          </div>\n          <form (ngSubmit)=\"login()\" #loginForm>\n            <mat-form-field floatLabel=\"always\" *ngIf=\"!isSafeLogin\">\n              <mat-label>{{ 'LOGIN.USERNAME' | translate }}</mat-label>\n              <input\n                matInput\n                #usernameInput\n                required\n                name=\"username\"\n                id=\"username\"\n                (keydown.enter)=\"login()\"\n                (keyup)=\"checkConditions()\"\n                [(ngModel)]=\"username\"\n                autofocus\n                autocapitalize=\"none\"\n              />\n            </mat-form-field>\n            <div class=\"password-field\">\n              <es-input-password\n                #passwordInput\n                inputId=\"password\"\n                label=\"{{ 'LOGIN.PASSWORD' | translate }}\"\n                floatLabel=\"always\"\n                [required]=\"true\"\n                (keydown.enter)=\"login()\"\n                [(value)]=\"password\"\n              ></es-input-password>\n              <div\n                class=\"forgot-password\"\n                *ngIf=\"\n                  (config.register.local && config.register.recoverPassword !== false) ||\n                  config.register.recoverPassword === true ||\n                  config.register.recoverUrl\n                \"\n              >\n                <a\n                  *ngIf=\"config.register.local || config.register.recoverPassword === true\"\n                  cdkMonitorElementFocus\n                  [routerLink]=\"['/' + ROUTER_PREFIX + 'register', 'request']\"\n                >\n                  {{ 'LOGIN.RECOVER_PASSWORD' | translate }}\n                </a>\n                <a\n                  *ngIf=\"!(config.register.local || config.register.recoverPassword === true)\"\n                  [href]=\"config.register.recoverUrl\"\n                  cdkMonitorElementFocus\n                >\n                  {{ 'LOGIN.RECOVER_PASSWORD' | translate }}\n                </a>\n              </div>\n            </div>\n          </form>\n          <div class=\"useUrl\" *ngIf=\"config.loginUrl && !showProviders && !isSafeLogin\">\n            <div>{{ 'LOGIN.USE_URL_TEXT' | translate }}</div>\n            <es-mat-link (click)=\"openLoginUrl()\" class=\"goto\">\n              <span>{{ 'LOGIN.USE_URL_LINK' | translate }}</span>\n              <i class=\"material-icons\">arrow_forward</i>\n            </es-mat-link>\n          </div>\n          <div class=\"group-actions\" *ngIf=\"showProviders\">\n            <button mat-button color=\"primary\" *ngIf=\"canRegister()\" (click)=\"register()\">\n              {{ 'LOGIN.REGISTER_TEXT' | translate }}\n            </button>\n            <button mat-raised-button color=\"primary\" [class.disabled]=\"disabled\" (click)=\"login()\">\n              {{ 'LOGIN.LOGIN' | translate }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"login-help\" *ngIf=\"showProviders\">\n      <div innerHTML=\"{{ 'LOGIN.ACTION_HELP' | translate }}\"></div>\n    </div>\n  </es-card>\n  <es-powered-by\n    mode=\"color\"\n    [ngClass]=\"{ 'powered-down': config.register.local || config.register.registerUrl }\"\n  ></es-powered-by>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { LoginPageRoutingModule } from './login-page-routing.module';\nimport { LoginPageComponent } from './login-page.component';\nimport { UrlPipe } from './url.pipe';\n\n@NgModule({\n    declarations: [LoginPageComponent, UrlPipe],\n    imports: [SharedModule, LoginPageRoutingModule],\n})\nexport class LoginPageModule {}\n","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({ name: 'esUrl' })\nexport class UrlPipe implements PipeTransform {\n    transform(value: any, args: any): any {\n        let url = new URL(value);\n        if (args['mode'] == 'domain') {\n            return url.host;\n        } else {\n            return 'unknown or unspecified mode: ' + args['mode'];\n        }\n    }\n}\n"],"names":["RouterModule","LoginPageComponent","routes","path","component","LoginPageRoutingModule","_","_2","_3","forChild","imports","i1","exports","trigger","UntypedFormControl","delay","first","map","startWith","switchMap","DialogButton","RestConstants","RestHelper","Helper","RouterHelper","OPEN_URL_MODE","UIAnimation","UIConstants","UIHelper","Subject","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","LoginPageComponent_div_1_div_13_mat_optgroup_15_mat_option_1_Template_mat_option_onSelectionChange_0_listener","restoredCtx","ɵɵrestoreView","_r18","option_r16","$implicit","ctx_r17","ɵɵnextContext","ɵɵresetView","currentProvider","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","ɵɵpipeBind2","url","ɵɵpureFunction0","_c3","ɵɵtemplate","LoginPageComponent_div_1_div_13_mat_optgroup_15_mat_option_1_Template","group_r14","group","providers","LoginPageComponent_div_1_div_13_Template_input_keydown_enter_11_listener","_r20","ctx_r19","goToProvider","LoginPageComponent_div_1_div_13_mat_optgroup_15_Template","LoginPageComponent_div_1_div_13_Template_button_click_21_listener","ctx_r21","ɵɵpipeBind1","ɵɵpropertyInterpolate","ctx_r2","providerControl","_r12","currentProviderDisplay","filteredProviders","ɵɵsanitizeUrl","LoginPageComponent_div_1_mat_form_field_19_Template_input_keydown_enter_4_listener","_r24","ctx_r23","login","LoginPageComponent_div_1_mat_form_field_19_Template_input_keyup_4_listener","ctx_r25","checkConditions","LoginPageComponent_div_1_mat_form_field_19_Template_input_ngModelChange_4_listener","$event","ctx_r26","username","ctx_r6","ɵɵpureFunction1","_c4","ctx_r27","ROUTER_PREFIX","ctx_r28","config","register","recoverUrl","LoginPageComponent_div_1_div_24_a_1_Template","LoginPageComponent_div_1_div_24_a_2_Template","ctx_r8","local","recoverPassword","LoginPageComponent_div_1_div_25_Template_es_mat_link_click_4_listener","_r30","ctx_r29","openLoginUrl","LoginPageComponent_div_1_div_26_button_1_Template_button_click_0_listener","_r33","ctx_r32","LoginPageComponent_div_1_div_26_button_1_Template","LoginPageComponent_div_1_div_26_Template_button_click_2_listener","_r35","ctx_r34","ctx_r10","canRegister","ɵɵclassProp","disabled","ɵɵsanitizeHtml","LoginPageComponent_div_1_div_13_Template","LoginPageComponent_div_1_div_15_Template","LoginPageComponent_div_1_div_16_Template","LoginPageComponent_div_1_Template_form_ngSubmit_17_listener","_r37","ctx_r36","LoginPageComponent_div_1_mat_form_field_19_Template","LoginPageComponent_div_1_Template_es_input_password_keydown_enter_21_listener","ctx_r38","LoginPageComponent_div_1_Template_es_input_password_valueChange_21_listener","ctx_r39","password","LoginPageComponent_div_1_div_24_Template","LoginPageComponent_div_1_div_25_Template","LoginPageComponent_div_1_div_26_Template","LoginPageComponent_div_1_div_27_Template","ctx_r1","caption","buttons","showProviders","ɵɵattribute","isSafeLogin","loginUrl","_c5","registerUrl","constructor","connector","toast","platformLocation","router","http","translations","configService","route","bridge","authentication","themeService","loadingScreen","mainNav","_this","isLoading","next","scope","destroyed","initWithDefaults","loadingTask","addLoadingTask","until","updateButtons","waitForInit","pipe","getAll","subscribe","data","getCordova","isRunningCordova","navigate","replaceUrl","instant","queryParams","forEach","params","onAllRequestsReady","setTimeout","passwordInput","nativeInput","nativeElement","focus","usernameInput","isLoggedIn","_ref","_asyncToGenerator","currentScope","logout","toPromise","e","console","warn","statusCode","STATUS_CODE_OK","goToNext","allowLocal","done","get","ANIMATION_TIME_NORMAL","processProviders","_x","apply","arguments","SAFE_SCOPE","goToLogin","observeHasAccessToScope","hasAccess","authorityName","error","ngAfterViewInit","window","dispatchEvent","Event","ngOnDestroy","complete","provider","target","getAbsoluteServerUrl","replace","encodeURIComponent","openUrl","Current","STATUS_CODE_PREVIOUS_SESSION_REQUIRED","STATUS_CODE_PREVIOUS_USER_WRONG","STATUS_CODE_PASSWORD_EXPIRED","STATUS_CODE_PERSON_BLOCKED","ngOnInit","setMainNavConfig","title","location","href","filterProviders","filter","filtered","p","deepCopy","toLowerCase","includes","length","push","addGetParameter","navigateToAbsoluteUrl","goToDefaultLocation","Object","keys","wayf_idps","object","type","wayf_categories","key","valueChanges","value","color","ɵɵdirectiveInject","RestConnectorService","i2","Toast","i3","PlatformLocation","i4","Router","i5","HttpClient","i6","TranslationsService","ConfigurationService","ActivatedRoute","i7","BridgeService","i8","AuthenticationService","i9","ThemeService","i10","LoadingScreenService","i11","MainNavService","selectors","viewQuery","LoginPageComponent_Query","rf","ctx","LoginPageComponent_es_global_progress_0_Template","LoginPageComponent_div_1_Template","switchDialog","ANIMATION_TIME_FAST","SharedModule","UrlPipe","LoginPageModule","declarations","transform","args","URL","host","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}