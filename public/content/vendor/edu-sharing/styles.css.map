{"version":3,"file":"styles.css","mappings":";;;AAAA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,gBAAgB;IAChB,mCAAmC,EAAE,cAAc;IACnD;;;yDAGqD;AACzD;;AAEA;IACI,6BAA6B;IAC7B,mBAAmB;IACnB,kBAAkB;IAClB,eAAe,EAAE,wBAAwB;IACzC,qBAAqB;IACrB,UAAU;IACV,WAAW;IACX,cAAc;IACd,oBAAoB;IACpB,sBAAsB;IACtB,iBAAiB;IACjB,mBAAmB;IACnB,cAAc;;IAEd,qCAAqC;IACrC,mCAAmC;IACnC,mCAAmC;IACnC,kCAAkC;;IAElC,yBAAyB;IACzB,kCAAkC;;IAElC,oBAAoB;IACpB,6BAA6B;AACjC;;;;;ACpCA;IACI,wBAAwB;IACxB,yBAAyB;IACzB;qFACiF;IACjF,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,+EAA+E;IAC/E,mCAAmC;IACnC,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,cAAc;;IAEd,sCAAsC;IACtC,iBAAiB;IAIjB,mCAAmC;IACnC,6BAA6B;IAE7B,+CAA+C;;IAE/C,sCAAsC;IACtC,mCAAmC;IACnC,kCAAkC;AACtC;;;;;AC/BA;;;;CAAA;ACKA;ADEA;EACI;AEEJ;;AFAA;EACI;AEGJ;;AFDA;;;;;;EAMI;EACA;EACA;AEIJ;AFHI;;;;;;EACI;AEUR;AFRI;;;;;;EACI;AEeR;;AFZA;EACI,uBCdQ;EDeR;AEeJ;;AFbA;EACI,uBClBQ;EDmBR;AEgBJ;;AFdA;EACI,uBCtBQ;EDuBR;AEiBJ;;AFfA;EACI,uBC1BQ;ED2BR;EACA;AEkBJ;;AFhBA;EACI,uBC/BQ;EDgCR;EACA;EACA;AEmBJ;;AFjBA;EACI,uBCrCQ;EDsCR;EACA;AEoBJ;;AFlBA;EACI;EACA;AEqBJ;;AFnBA;EACI;EACA;EACA;EACA;EACA;EACA;AEsBJ;;AFpBA;EGeI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADSJ;;AF7BI;EACI;EACA;AEgCR;AF/BQ;EACI,uBC7DA;ED8DA;AEiCZ;AF/BQ;EACI;EACA;AEiCZ;AF/BQ;EACI;EACA,uBCtEA;EDuEA;AEiCZ;;AF5BI;EACI;EACA;AE+BR;AF7BI;EACI,gCIjGE;AFgIV;AF7BI;EACI,gCIpGE;AFmIV;AF7BI;EACI,4CInGM;AFkId;AF7BI;EACI,4CIzGa;AFwIrB;AF7BI;EACI,iCIzGM;AFwId;AF7BI;EACI;EACA,iCI7GM;AF4Id;;AF3BI;EACI,cC9FQ;AC4HhB;AF5BI;EACI;AE8BR;AF5BI;EACI;EACA;EACA;AE8BR;AF5BI;EACI;EACA;;;aAAA;AEiCR;;AGnKA;;;EAAA;AAIA;EACI;EAOA;AHgKJ;;AI5KA;;;EAAA;AAIA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;;;;;eAAA;AJsLJ;;ADzMA;AMgCW;EAKH;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAFA,0DCtBA;EDsBA,8DCtBA;EDsBA,wDCtBA;EDsBA,oDCtBA;EDsBA,4DCtBA;EDsBA,kDCtBA;EDsBA,gDCtBA;EDsBA,4DCtBA;EDsBA,gECtBA;EDsBA,0DCtBA;EDsBA,sDCtBA;EDsBA,8DCtBA;EDsBA,oDCtBA;EDsBA,kDCtBA;AN4NR;;AKzMW;EAKH;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAFA,qECSN;EDTM,sECSN;EDTM,sECSN;EDTM,sECSN;EDTM,sECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,wECSN;EDTM,wECSN;EDTM,wECSN;EDTM,wECSN;EDTM,mDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,uDCSN;EDTM,uDCSN;EDTM,uDCSN;EDTM,uDCSN;EDTM,qECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,yECSN;EDTM,yECSN;EDTM,yECSN;EDTM,yECSN;EDPM;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAFA,mECSN;EDTM,oECSN;EDTM,oECSN;EDTM,oECSN;EDTM,oECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,sECSN;EDTM,sECSN;EDTM,sECSN;EDTM,sECSN;EDTM,iDCSN;EDTM,mDCSN;EDTM,mDCSN;EDTM,mDCSN;EDTM,mDCSN;EDTM,mDCSN;EDTM,mDCSN;EDTM,mDCSN;EDTM,mDCSN;EDTM,mDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,qDCSN;EDTM,mECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,qECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDTM,uECSN;EDPM;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAFA,+DCSN;EDTM,gECSN;EDTM,gECSN;EDTM,gECSN;EDTM,gECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,kECSN;EDTM,kECSN;EDTM,kECSN;EDTM,kECSN;EDTM,6CCSN;EDTM,+CCSN;EDTM,+CCSN;EDTM,+CCSN;EDTM,+CCSN;EDTM,+CCSN;EDTM,+CCSN;EDTM,+CCSN;EDTM,+CCSN;EDTM,+CCSN;EDTM,iDCSN;EDTM,iDCSN;EDTM,iDCSN;EDTM,iDCSN;EDTM,+DCSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,mECSN;EDTM,mECSN;EDTM,mECSN;EDTM,mECSN;EDTM,+DCSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,iECSN;EDTM,mECSN;EDTM,mECSN;EDTM,mECSN;EDTM,mECSN;EDTM,2DCSN;EDTM,4DCSN;EDTM,4DCSN;EDTM,4DCSN;EDTM,4DCSN;EDTM,6DCSN;EDTM,6DCSN;EDTM,6DCSN;EDTM,6DCSN;EDTM,6DCSN;EDTM,8DCSN;EDTM,8DCSN;EDTM,8DCSN;EDTM,8DCSN;EDTM,6DCSN;EDTM,+DCSN;EDTM,+DCSN;EDTM,+DCSN;EDTM,+DCSN;EDTM,+DCSN;EDTM,+DCSN;EDTM,+DCSN;EDTM,+DCSN;EDTM,+DCSN;EDTM,0DCSN;EDTM,0DCSN;EDTM,0DCSN;EDTM,0DCSN;EDTM,yDCSN;EDTM,0DCSN;EDTM,0DCSN;EDTM,0DCSN;EDTM,0DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,4DCSN;EDTM,4DCSN;EDTM,4DCSN;EDTM,4DCSN;EDTM,yDCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,2DCSN;EDTM,6DCSN;EDTM,6DCSN;EDTM,6DCSN;EDTM,6DCSN;EDTM,qDCSN;EDTM,sDCSN;EDTM,sDCSN;EDTM,sDCSN;EDTM,sDCSN;EDTM,uDCSN;EDTM,uDCSN;EDTM,uDCSN;EDTM,uDCSN;EDTM,uDCSN;EDTM,wDCSN;EDTM,wDCSN;EDTM,wDCSN;EDTM,wDCSN;AN4bF;;AOxeE;EACE;EAIA;APweJ;AOjeI;EACE;APmeN;;AO/dE;EACE;APkeJ;;AO/dE;EACE;EACA;EACA;EAEA;EAIA;AP8dJ;AQ/cI;EDXE;AP6dN;;AQjgBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAGA;EAGA;EACA;EAMA;ARwfJ;AQtfI;EACE;EACA;ARwfN;;ASxgBE;EAEE;EAGA;EACA;EACA;EACA;ATwgBJ;;ASpgBE;EACE;EACA,aA3BwB;ATkiB5B;ASrgBI;EAGE;ATqgBN;;AS7fE;EACE;EACA;EACA,aA1Cc;AT0iBlB;;AS5fE;EAGE;EACA;EACA;EACA,aApDc;EAwDd;EACA;EACA;AT0fJ;;ASvfE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApEuB;EAqEvB;EACA;EACA;EACA;ATwfJ;AStfI;EACE;ATwfN;ASnfM;EAGE;ATmfR;;AS9eE;EACE,+BAtFqB;ATukBzB;;AS9eE;EAEE;EACA;EACA;ATgfJ;AS1eI;EACE;EACA;AT4eN;;ASxeE;EACE;AT2eJ;;ASteE;EACE;EACA,aArHc;EA0Hd;EAIA;EAGA;EACA;ATgeJ;;AS5dE;EACE;EAKA;EAKA;ATudJ;;AUxmBE;EACE;AV2mBJ;;AUrmBE;EAyCA;EACA;EAxCE;EACA;AVymBJ;;AUhmBE;EA6BA;EACA;EA5BE;AVomBJ;;AU1lBE;AACA;AAEA;EAEE;AV2lBJ;;AUxlBE;EAEE;AV0lBJ;;AWznBE;EACE;AX4nBJ;AW1nBI;ECfF;EACA;EACA;EACA;EACA;EDaI;EACA;EACA;EACA;EAYA;AXqnBN;AW7mBI;EACE;AX+mBN;;AQpkBM;EG7BA;AXqmBN;;AWhpBE;EACE;AXmpBJ;AWjpBI;ECfF;EACA;EACA;EACA;EACA;EDaI;EACA;EACA;EACA;EAYA;AX4oBN;AWpoBI;EACE;AXsoBN;;AQ3lBM;EG7BA;AX4nBN;;Aa1qBE;EAII;Ab0qBN;;Ac9qBW;ECmEP;EAAA;EAAA;EAAA;EAAA;AfmnBJ;;AgB/qBI;ED4DA;AfunBJ;;AgB9qBI;EDuDA;Af2nBJ;;Ac9rBW;ECmEP;Af+nBJ;;AiBtqBE;EACE,0BAXe;AjBorBnB;AiBxqBI;EACE,cANa;AjBgrBnB;;AiB9sBI;;EACE,iCAkBM;AjBgsBZ;AiB9sBI;;EAKE,sCASM;AjBosBZ;AiBjtBM;;EACE,cAeO;AjBqsBf;;AiB3tBI;;EACE,gCAmBK;AjB4sBX;AiB3tBI;;EAKE,qCAUK;AjBgtBX;AiB9tBM;;EACE,cAeO;AjBktBf;;AiBxuBI;;EACE,gCAmBK;AjBytBX;AiBxuBI;;EAKE,qCAUK;AjB6tBX;AiB3uBM;;EACE,cAeO;AjB+tBf;;AiBrvBI;;EACE,8BAoBG;AjBquBT;AiBrvBI;;EAKE,mCAWG;AjByuBT;AiBxvBM;;EACE,cAeO;AjB4uBf;;AiBtsBI;;EACE,cA/Ba;AjByuBnB;AiBvsBI;;EACE,mBAnCa;AjB6uBnB;;AkB5vBE;EAIE;EACA;AlB4vBJ;;AkBlvBI;EH0CA;Af4sBJ;;AkBtvBI;EH0CA;AfgtBJ;;AkB1vBI;EH0CA;AfotBJ;;AkB9vBI;EH0CA;AfwtBJ;;AkBlwBI;EH0CA;Af4tBJ;;AkBtwBI;EH0CA;AfguBJ;;AkB1wBI;EH0CA;AfouBJ;;AkB9wBI;EH0CA;AfwuBJ;;AkBlxBI;EH0CA;Af4uBJ;;AkBtxBI;EH0CA;AfgvBJ;;AkB1xBI;EH0CA;AfovBJ;;AkB9xBI;EH0CA;AfwvBJ;;AkBlyBI;EH0CA;Af4vBJ;;AkBtyBI;EH0CA;AfgwBJ;;AkB1yBI;EH0CA;AfowBJ;;AkB9yBI;EH0CA;AfwwBJ;;AkBlzBI;EH0CA;Af4wBJ;;AkBtzBI;EH0CA;AfgxBJ;;AkB1zBI;EH0CA;AfoxBJ;;AkB9zBI;EH0CA;AfwxBJ;;AkBl0BI;EH0CA;Af4xBJ;;AkBt0BI;EH0CA;AfgyBJ;;AkB10BI;EH0CA;AfoyBJ;;AkB90BI;EH0CA;AfwyBJ;;AkBl1BI;EH0CA;Af4yBJ;;AkB/0BI;EACE;AlBk1BN;;Acn3BW;ECmEP;EAAA;EAAA;EAAA;EAAA;AfwzBJ;;Ac33BW;ECmEP;EAAA;EAAA;EAAA;EAAA;Afg0BJ;;AmBr3BE;EJqDE;EAAA;EAAA;EAAA;EAAA;EAAA;Afy0BJ;;AmB/2BE;EJsCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afs1BJ;;AoBz4BE;ELmDE;EAAA;Af21BJ;AqB7uBI;EACE;IClIF;EtBk3BF;AACF;AqBjyBE;EN3EI;EOZF;EPwBA;Afq2BJ;AqBlyBM;EAJJ;IAKM;ErBqyBN;AACF;AuBr2BE;EF0DA;IASM;INxEJ;Ef+2BF;AACF;AqB3xBE;ENjGI;EOZF;EPwBA;Afq3BJ;AoBr6BI;ELgDA;EAAA;Afy3BJ;AqB3wBI;EACE;IClIF;EtBg5BF;AACF;AqB/zBE;EN3EI;EOZF;EPwBA;Afm4BJ;AqBh0BM;EAJJ;IAKM;ErBm0BN;AACF;AuBn4BE;EF0DA;IASM;INxEJ;Ef64BF;AACF;AqBzzBE;ENjGI;EOZF;EPwBA;Afm5BJ;AoB/7BI;EL4CA;EAAA;Afu5BJ;AqBzyBI;EACE;IClIF;EtB86BF;AACF;AqB71BE;EN3EI;EOZF;EPwBA;Afi6BJ;AqB91BM;EAJJ;IAKM;ErBi2BN;AACF;AuBj6BE;EF0DA;IASM;INxEJ;Ef26BF;AACF;AqBv1BE;ENjGI;EOZF;EPwBA;Afi7BJ;AwBr/BE;EToEE;EAAA;Afq7BJ;;AwB9+BE;ETyDE;EAAA;EAAA;EAAA;Af47BJ;;Ac//BW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afo+BJ;;AyBj/BE;EVaE;Afw+BJ;;AyB/+BE;;ECkQE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;Afm/BJ;;A2BziCE;EACE,qCCHwB;A5B+iC5B;;A2BziCE;EACE,aAPc;A3BmjClB;;A2BziCE;EACE,aAZc;A3BwjClB;;A6Bv+BM;EACE,0BAtBkB;A7BggC1B;A6Br+BU;EACE;A7Bu+BZ;A6Bl+BU;EACE;A7Bo+BZ;A6B/9BU;EACE;A7Bi+BZ;A6B39BQ;EACE,0BA9CyB;A7B2gCnC;;A8B1jCM;Ef2CF;EAAA;EAAA;EAAA;EAAA;EAAA;AfwhCJ;;A8B5jCM;EfoCF;EAAA;EAAA;EAAA;EAAA;EAAA;AfiiCJ;;A8BpjCQ;EACE;A9BujCV;;A8BjjCU;EACE;EACA;A9BojCZ;;A+BhjCE;EACE,gBA7BO;A/BglCX;;A+B5iCE;EACE;A/B+iCJ;;A+BziCE;EAEE;;qEAAA;EAGA;A/B2iCJ;;A+B3mCE;EACE;EACA;A/B8mCJ;;A+BhoCE;EACE;EACA;A/BmoCJ;;A+BhoCE;EAEE;EACA;A/BkoCJ;;Ac3oCW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af8lCJ;;AcjqCW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfymCJ;AgCtqCI;EjB6DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfmnCJ;AgCzqCI;EjBsDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af6nCJ;;AchsCW;ECmEP;EAAA;EAAA;EAAA;EAAA;AfqoCJ;;AcxsCW;ECmEP;AfyoCJ;;AiC/sCE;ElBsEE;EAAA;EAAA;Af+oCJ;;AiC5sCE;ElB6DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af4pCJ;;AkCxsCE;EnB4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af0qCJ;AkC9sCM;EnBoCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfurCJ;AkCttCM;EnB+BF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfosCJ;AkC7tCM;EnByBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfitCJ;;AkCntCE;EnBEE;AfqtCJ;;AkC/tCE;EnBUE;EAAA;EAAA;EAAA;EAAA;Af6tCJ;;AmCrxCI;EpBwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfkwCJ;AoC1yCE;ErBwCE;AfqwCJ;AmCxzCM;EACE;AnC0zCR;AmCtzCM;EpB8CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfqxCJ;AmC5zCM;EpBuCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfkyCJ;;AmC5yCE;EpBUE;AfsyCJ;;AmC5zCE;EpBsBE;EAAA;EAAA;EAAA;EAAA;Af8yCJ;AoCt1CE;EVmSE;EACA;EXxQE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;UAAA;EAZE;EOZF;EPwBA;Afu0CJ;;AoC/2CE;ErBwCE;Af20CJ;;AqCj4CI;EtBsDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af01CJ;AqCz4CI;EtB+CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afw2CJ;AqCh5CI;EtBwCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afs3CJ;;AqCv4CE;EtBiBE;Af03CJ;;AoCl6CE;EVmSE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;Afs4CJ;;AsCr8CI;EvB+DA;EAAA;EAAA;EAAA;EAAA;EAAA;EuB/CE;AtC+7CN;AsC77CM;EvB6CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EuBsBF;EACA;EACA;AtCo4CF;AsCr8CM;EvByCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EuBsBF;EACA;EACA;AtCg5CF;AsC78CM;EvBqCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EuBsBF;EACA;EACA;AtC45CF;;AsC98CI;EvB0BA;EAAA;EAAA;EAAA;EAAA;Af47CJ;;Ac//CW;ECmEP;EAAA;EAAA;EAAA;EAAA;Afo8CJ;;AcvgDW;ECmEP;EAAA;EAAA;EAAA;EAAA;Af48CJ;;AuCjgDE;ExBqDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afg+CJ;;AuCjhDE;;ExBiDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af6+CJ;;AuCxhDI;;ExB2CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af0/CJ;;AuC9hDI;;ExBoCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfugDJ;;AuCriDE;ExB8BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af2hDJ;;AuCtjDE;ExB2BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af+iDJ;;AuCvkDE;ExBwBE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfmkDJ;;AwCz2BE;;EzB1tBE;AfwkDJ;AwC/LI;;EzBz4CA;Af4kDJ;;AuCtlDI;;;EAGE;AvCylDN;;AuC/kDE;ExBHE;EAAA;EAAA;AfwlDJ;;AuCzkDM;EACE;AvC4kDR;AuClkDM;EACE;AvCokDR;;AuCjjDE;ExB9CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfinDJ;;AuC7jDE;EE1BA;EACA;EACA;EACA;EAEA;AzC0lDF;;Ac5rDW;ECmEP;EAAA;EAAA;EAAA;AfgoDJ;;AcnsDW;ECmEP;AfooDJ;;A+B1oDE;EACE,gBA7BO;A/B0qDX;A+BtoDE;EACE;A/BwoDJ;A+BloDE;EAEE;;qEAAA;EAGA;A/BmoDJ;A+BnsDE;EACE;EACA;A/BqsDJ;A+BvtDE;EACE;EACA;A/BytDJ;A+BttDE;EAEE;EACA;A/ButDJ;A+BhoDI;EACI;A/BkoDR;;AcnuDW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;AfyqDJ;;A0CxuDE;E3B+DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfyrDJ;A0CrvDI;E3B4DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfwsDJ;A0ChwDI;E3BwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfutDJ;A0C3wDI;E3BoDA;EAAA;Af2tDJ;A0C3wDI;E3BgDA;EAAA;Af+tDJ;A0C3wDI;E3B4CA;EAAA;AfmuDJ;;A0CvuDE;E3BIE;AfuuDJ;;A0CzvDE;E3BkBE;EAAA;EAAA;EAAA;EAAA;Af+uDJ;;AclzDW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfmwDJ;;A2C7zDI;E5B0DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfuxDJ;A2C50DI;E5BqDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af0yDJ;AoCl1DE;ErBwCE;Af6yDJ;A2Cx1DI;EAEE;A3Cy1DN;;Acn3DW;ECmEP;AfozDJ;;AoC51DE;EVmSE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;Afg0DJ;;A4Ct1DM;E7BsBF;Afo0DJ;A4Ct1DM;E7BkBF;Afu0DJ;A4Cr1DM;E7BcF;Af00DJ;A4Cp1DM;E7BUF;Af60DJ;A6Ct2DE;E9ByBE;EAAA;Afi1DJ;;A4C50DM;E7BLF;EAAA;Afs1DJ;A4C70DM;E7BTF;EAAA;Af01DJ;A4C70DM;E7BbF;EAAA;Af81DJ;A4C70DM;E7BjBF;EAAA;Afk2DJ;A6C33DE;E9ByBE;EAAA;EAAA;EAAA;Afw2DJ;;A4Ct0DM;E7BlCF;EAAA;Af62DJ;A4Cv0DM;E7BtCF;EAAA;Afi3DJ;A4Cv0DM;E7B1CF;EAAA;Afq3DJ;A4Cv0DM;E7B9CF;EAAA;Afy3DJ;A6Cl5DE;E9ByBE;EAAA;EAAA;EAAA;EAAA;Afg4DJ;;A4Cj0DI;E7B/DA;Afo4DJ;A4Ch0DM;E7BpEF;Afu4DJ;A4C/zDM;E7BxEF;Af04DJ;A4C9zDM;E7B5EF;Af64DJ;A4C7zDM;E7BhFF;Afg5DJ;A6Cz6DE;E9ByBE;EAAA;EAAA;EAAA;Afs5DJ;;A4CrzDI;ECxKF;EACA;A7Ci+DF;A6Cz9DE;EACE;A7C29DJ;A6Ct9DI;EACE;A7Cw9DN;A6Cp9DE;EACE;A7Cs9DJ;A6Cj9DE;EA1BA;EACA;A7C8+DF;A6Cj9DE;EA9BA;EACA;A7Ck/DF;A6Cj9DE;EAlCA;EACA;A7Cs/DF;;A4C30DI;EC5KF;EACA;A7C2/DF;A6Cn/DE;EACE;A7Cq/DJ;A6Ch/DI;EACE;A7Ck/DN;A6C9+DE;EACE;A7Cg/DJ;A6C3+DE;EA1BA;EACA;A7CwgEF;A6C3+DE;EA9BA;EACA;A7C4gEF;A6C3+DE;EAlCA;EACA;A7CghEF;;A4Ch1DI;;;;E7B1HA;Afi9DJ;;A8Cr4DE;EpB+KE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;Af69DJ;;A+C1gEE;EF1BA;EACA;E9BsEE;EgCjEF;EACA;A/CqiEF;A6CniEE;EACE;A7CqiEJ;A6ChiEI;EACE;A7CkiEN;A6C9hEE;EACE;A7CgiEJ;A6C3hEE;EA1BA;EACA;A7CwjEF;A6C3hEE;EA9BA;EACA;A7C4jEF;A6C3hEE;EAlCA;EACA;A7CgkEF;A+CliEI;EhCwCA;EgCjEF;EACA;A/C+jEF;A+CjiEI;EhCkCA;EgCjEF;EACA;A/CokEF;A+ChiEI;EhC4BA;EgCjEF;EACA;A/CykEF;A6CliEE;E9ByBE;EAAA;Af6gEJ;;A+CrgEE;EhCRE;EgCoBA;EACA;EACA;A/C8/DJ;;AgD/iEE;;EH5CA;EACA;A7CgmEF;A6CxlEE;;EACE;A7C2lEJ;A6CtlEI;;;EACE;A7C0lEN;A6CtlEE;;EACE;A7CylEJ;A6CplEE;;EA1BA;EACA;A7CknEF;A6CrlEE;;EA9BA;EACA;A7CunEF;A6CtlEE;;EAlCA;EACA;A7C4nEF;A6C/kEE;;E9ByBE;EAAA;EiCrDF;AhDinEF;AgD1kEI;;EjCcA;EAAA;EiCrDF;AhDunEF;AgD5kEI;;EjCUA;EAAA;EiCrDF;AhD6nEF;AgD9kEI;;EjCMA;EAAA;EiCrDF;AhDmoEF;AgDhlEI;;EjCEA;EAAA;EiCrDF;AhDyoEF;;AiD/lEE;EvBsQE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AfgmEJ;AgDllEE;EjCdE;EAAA;EAAA;EAAA;AfsmEJ;;AkDzqEE;EnCmEE;EAAA;EAAA;Af4mEJ;;AkDlqEE;EnCsDE;EAAA;EAAA;EAAA;AfmnEJ;;AmDvrEI;EpCoEA;EAAA;EAAA;EAAA;Af0nEJ;;AmD9rEI;EpCoEA;EAAA;EAAA;AfgoEJ;;AmDpsEI;EpCoEA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfkpEJ;;AoDvtEE;ErCqEE;AfspEJ;AoDxtEI;ErCkEA;AfypEJ;AoDttEI;ErC6DA;Af4pEJ;;AqD9oEE;EACE;ArDipEJ;AqD3oEI;EACE;ArD6oEN;;AqDzoEE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EtCpCA;EAAA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;Af2rEJ;AQvtEI;E6C2EE;EACA;ArD+oEN;;AqD3oEE;EtCpDE;EAAA;AfosEJ;;AqDzoEE;EACE;ArD4oEJ;;AqDzoEE;;EAEE;ArD4oEJ;;AqDvoEE;EAEE;ArDyoEJ;;AqDnwEE;EACE,WAdS;EAeT,YAfS;EAgBT,iBAhBS;EtCmDP;EOZF;EPwBA;Af0tEJ;AqD/vEE;EACE;ArDiwEJ;AqD9vEE;EACE;ArDgwEJ;AqD7vEE;EACE;ArD+vEJ;AqD5vEE;EACE;EACA;ArD8vEJ;AqD3vEE;EACE;ArD6vEJ;AqD1vEE;EACE;EACA;ArD4vEJ;AqDxvEI;EACE;ArD0vEN;AqDvvEI;EACE;EACA;ArDyvEN;AqDtvEI;EACE;ArDwvEN;AqDrvEI;EACE;EACA;ArDuvEN;;AqD9yEE;EACE,WAfW;EAgBX,YAhBW;EAiBX,iBAjBW;ArDk0Ef;AqDvyEE;EACE;ArDyyEJ;AqDtyEE;EACE;ArDwyEJ;AqDryEE;EACE;ArDuyEJ;AqDpyEE;EACE;EACA;ArDsyEJ;AqDnyEE;EACE;ArDqyEJ;AqDlyEE;EACE;EACA;ArDoyEJ;AqDhyEI;EACE;ArDkyEN;AqD/xEI;EACE;EACA;ArDiyEN;AqD9xEI;EACE;ArDgyEN;AqD7xEI;EACE;EACA;ArD+xEN;;AqDt1EE;EACE,WAbS;EAcT,YAdS;EAeT,iBAfS;EtCkDP;EOZF;EPwBA;Af6yEJ;AqDl1EE;EACE;ArDo1EJ;AqDj1EE;EACE;ArDm1EJ;AqDh1EE;EACE;ArDk1EJ;AqD/0EE;EACE;EACA;ArDi1EJ;AqD90EE;EACE;ArDg1EJ;AqD70EE;EACE;EACA;ArD+0EJ;AqD30EI;EACE;ArD60EN;AqD10EI;EACE;EACA;ArD40EN;AqDz0EI;EACE;ArD20EN;AqDx0EI;EACE;EACA;ArD00EN;;Acl5EW;ECmEP;EAAA;EAAA;EAAA;Afs1EJ;;AqDpvEE;EtClGE;EAAA;Af21EJ;;AqDpvEE;EtCvGE;EAAA;Afg2EJ;;Acn6EW;ECmEP;EAAA;EAAA;EAAA;EAAA;Afw2EJ;;Ac36EW;ECmEP;EAAA;Af62EJ;;Ach7EW;ECmEP;EAAA;EAAA;EAAA;EAAA;Afq3EJ;;Acx7EW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afy4EJ;;Ac58EW;ECmEP;Af64EJ;;Ach9EW;ECmEP;EAAA;Afk5EJ;;Acr9EW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afi7EJ;;AsDv9EI;EvCsCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af87EJ;AsDh+EI;EvCkCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af08EJ;;AsDt+EI;EvC4BA;Af88EJ;AsDp+EI;EvCsBA;Afi9EJ;;A+Cz8EE;EhCRE;EgCoBA;EACA;EACA;A/Ck8EJ;A6Cz+EI;EACE;A7C2+EN;;Ac9hFW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afs+EJ;;AcziFW;ECmEP;Af0+EJ;;Ac7iFW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afs/EJ;;AczjFW;ECmEP;EAAA;Af2/EJ;;Ac9jFW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfwgFJ;;Ac3kFW;ECmEP;EAAA;EAAA;EAAA;Af+gFJ;;AcllFW;ECmEP;AfmhFJ;;AuD3kFI;ExCwDA;AfuhFJ;AuD3kFI;ExCoDA;Af0hFJ;AuD1kFI;ExCgDA;Af6hFJ;;AchmFW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;AfsiFJ;;AczmFW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af2jFJ;AwDxnFI;EzC6DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfokFJ;AwD5nFI;EzCwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af6kFJ;;AchpFW;ECmEP;AfilFJ;;AcppFW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af2lFJ;;AyD/pFE;EAYI;AzDupFN;;AclqFW;ECmEP;EAAA;AfomFJ;;A0DxpFI;E3CoDA;EAAA;AfymFJ;A0DzpFI;E3CgDA;EAAA;Af6mFJ;A0DzpFI;E3C4CA;EAAA;AfinFJ;;AcprFW;ECmEP;EAAA;AfsnFJ;;AczrFW;ECmEP;EAAA;EAAA;EAAA;EAAA;Af8nFJ;;A2DhsFE;EACE;A3DmsFJ;;A2DhsFE;;EAEE;A3DmsFJ;;A2D3qFI;EACE,gBALK;A3DmrFX;;A2DhsFE;EACE;A3DmsFJ;;A2DhsFE;;EAEE;EACA;A3DmsFJ;;A4Dh4EE;;;;;EnB3PA;EACA;EACA;EACA;EAEA;EmB4PE;A5Du4EJ;;A4Dp4EE;;;;;EnBpQA;EACA;EACA;EACA;EAEA;EmBqQE;A5D24EJ;;A4Dx4EE;;;;;EnB7QA;EACA;EACA;EACA;EAEA;EmB8QE;A5D+4EJ;;A4D54EE;;;;;EnBtRA;EACA;EACA;EACA;EAEA;EmBuRE;A5Dm5EJ;;A4D74EE;;;EnB7SE;EmBwTA;A5Dy4EJ;;A4Dt4EE;;;EnB3TE;EmBsUA;A5Dk4EJ;;A4D/3EE;;;;EnB9TA;EACA;EACA;EACA;EAEA;AzCmsFF;;A4Dn4EE;;;;;EnBrUA;EACA;EACA;EACA;EAEA;AzC+sFF;A4Dx4EI;;;;;EACE;A5D84EN;;A4D14EE;;;;EnBjVA;EACA;EACA;EACA;EAEA;AzCiuFF;;A4D94EE;;EnBxVA;EACA;EACA;EACA;EAEA;EmBsVE;A5Dq5EJ;;A4Dl5EE;;EnB9VA;EACA;EACA;EACA;EAEA;EmB4VE;A5Dy5EJ;;A4Dt5EE;;EnBpWA;EACA;EACA;EACA;EAEA;EmBkWE;A5D65EJ;;A4D15EE;;EnB1WA;EACA;EACA;EACA;EAEA;EmBwWE;A5Di6EJ;;A6Dh0FI;E9CwBA;EAAA;EAAA;EAAA;Af+yFJ;Aal3FE;EAII;Abi3FN;Acr3FW;ECmEP;EAAA;EAAA;EAAA;EAAA;AfyzFJ;;AgBr3FI;ED4DA;Af6zFJ;AgBp3FI;EDuDA;Afg0FJ;Acn4FW;ECmEP;Afm0FJ;;AiB12FE;EACE,+BAXe;AjBw3FnB;AiB52FI;EACE,cANa;AjBo3FnB;AiBl5FI;;EACE,iCAkBM;AjBm4FZ;AiBj5FI;;EAKE,sCASM;AjBu4FZ;AiBp5FM;;EACE,cAeO;AjBw4Ff;AiB95FI;;EACE,gCAmBK;AjB84FX;AiB75FI;;EAKE,qCAUK;AjBk5FX;AiBh6FM;;EACE,cAeO;AjBo5Ff;AiB16FI;;EACE,gCAmBK;AjB05FX;AiBz6FI;;EAKE,qCAUK;AjB85FX;AiB56FM;;EACE,cAeO;AjBg6Ff;AiBt7FI;;EACE,8BAoBG;AjBq6FT;AiBr7FI;;EAKE,mCAWG;AjBy6FT;AiBx7FM;;EACE,cAeO;AjB46Ff;AiBt4FI;;EACE,cA/Ba;AjBw6FnB;AiBt4FI;;EACE,mBAnCa;AjB46FnB;AkB37FE;EAIE;EACA;AlB07FJ;AkBh7FI;EH0CA;Afy4FJ;AkBn7FI;EH0CA;Af44FJ;AkBt7FI;EH0CA;Af+4FJ;AkBz7FI;EH0CA;Afk5FJ;AkB57FI;EH0CA;Afq5FJ;AkB/7FI;EH0CA;Afw5FJ;AkBl8FI;EH0CA;Af25FJ;AkBr8FI;EH0CA;Af85FJ;AkBx8FI;EH0CA;Afi6FJ;AkB38FI;EH0CA;Afo6FJ;AkB98FI;EH0CA;Afu6FJ;AkBj9FI;EH0CA;Af06FJ;AkBp9FI;EH0CA;Af66FJ;AkBv9FI;EH0CA;Afg7FJ;AkB19FI;EH0CA;Afm7FJ;AkB79FI;EH0CA;Afs7FJ;AkBh+FI;EH0CA;Afy7FJ;AkBn+FI;EH0CA;Af47FJ;AkBt+FI;EH0CA;Af+7FJ;AkBz+FI;EH0CA;Afk8FJ;AkB5+FI;EH0CA;Afq8FJ;AkB/+FI;EH0CA;Afw8FJ;AkBl/FI;EH0CA;Af28FJ;AkBr/FI;EH0CA;Af88FJ;AkBx/FI;EH0CA;Afi9FJ;AkBp/FI;EACE;AlBs/FN;;AmBzgGE;EJqDE;EAAA;EAAA;EAAA;EAAA;EAAA;Af69FJ;AoBhhGE;ELmDE;EAAA;Afi+FJ;AqBn3FI;EACE;IClIF;EtBw/FF;AACF;AqBv6FE;EN3EI;EOZF;EPwBA;Af2+FJ;AqBx6FM;EAJJ;IAKM;ErB26FN;AACF;AuB3+FE;EF0DA;IASM;INxEJ;Efq/FF;AACF;AqBj6FE;ENjGI;EOZF;EPwBA;Af2/FJ;AoB3iGI;ELgDA;EAAA;Af+/FJ;AqBj5FI;EACE;IClIF;EtBshGF;AACF;AqBr8FE;EN3EI;EOZF;EPwBA;AfygGJ;AqBt8FM;EAJJ;IAKM;ErBy8FN;AACF;AuBzgGE;EF0DA;IASM;INxEJ;EfmhGF;AACF;AqB/7FE;ENjGI;EOZF;EPwBA;AfyhGJ;AoBrkGI;EL4CA;EAAA;Af6hGJ;AqB/6FI;EACE;IClIF;EtBojGF;AACF;AqBn+FE;EN3EI;EOZF;EPwBA;AfuiGJ;AqBp+FM;EAJJ;IAKM;ErBu+FN;AACF;AuBviGE;EF0DA;IASM;INxEJ;EfijGF;AACF;AqB79FE;ENjGI;EOZF;EPwBA;AfujGJ;AwB3nGE;EToEE;EAAA;Af2jGJ;Ac9nGW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfkmGJ;;AyB/mGE;EVaE;AfsmGJ;AyB7mGE;;ECkQE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;AfgnGJ;A2BtqGE;EACE,2CCHwB;A5B2qG5B;A2BrqGE;EACE,aAPc;A3B8qGlB;A2BpqGE;EACE,aAZc;A3BkrGlB;A6B5mGQ;EACE,0BiChEU;A9D8qGpB;A6B3mGQ;EACE,0BiClEW;A9D+qGrB;A6BvmGM;EACE,gCAtBkB;A7B+nG1B;A6BpmGU;EACE;A7BsmGZ;A6BjmGU;EACE;A7BmmGZ;A6B9lGU;EACE;A7BgmGZ;A6B1lGQ;EACE,gCA9CyB;A7B0oGnC;A8BzrGM;Ef2CF;EAAA;EAAA;EAAA;EAAA;EAAA;AfspGJ;A8B1rGM;EfoCF;EAAA;EAAA;EAAA;EAAA;EAAA;Af8pGJ;A8BjrGQ;EACE;A9BmrGV;A8B7qGU;EACE;EACA;A9B+qGZ;AcxuGW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af+qGJ;AgC5uGI;EjB6DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfyrGJ;AgC/uGI;EjBsDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfmsGJ;;ActwGW;ECmEP;AfusGJ;;AiC7wGE;ElBsEE;EAAA;EAAA;Af6sGJ;AkCzvGE;EnB4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af0tGJ;AkC9vGM;EnBoCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfuuGJ;AkCtwGM;EnB+BF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfovGJ;AkC7wGM;EnByBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfiwGJ;AmCzzGI;EpBwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfqyGJ;AoC70GE;ErBwCE;AfwyGJ;AmC31GM;EACE;AnC61GR;AmCz1GM;EpB8CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfwzGJ;AmC/1GM;EpBuCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afq0GJ;AoC72GE;ErBwCE;Afw0GJ;AqC93GI;EtBsDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afs1GJ;AqCr4GI;EtB+CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afo2GJ;AqC54GI;EtBwCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afk3GJ;AsCj7GI;EvB+DA;EAAA;EAAA;EAAA;EAAA;EAAA;EuB/CE;AtC06GN;AsCx6GM;EvB6CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EuBsBF;EACA;EACA;AtC+2GF;AsCh7GM;EvByCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EuBsBF;EACA;EACA;AtC23GF;AsCx7GM;EvBqCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EuBsBF;EACA;EACA;AtCu4GF;Acl+GW;ECmEP;EAAA;EAAA;EAAA;EAAA;Afs6GJ;;AuC39GE;ExBqDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af07GJ;AuC3+GE;;ExBiDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afs8GJ;AuCj/GI;;ExB2CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afk9GJ;AuCt/GI;;ExBoCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af89GJ;AuC5/GE;ExB8BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afi/GJ;AuC5gHE;ExB2BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfogHJ;AuC5hHE;ExBwBE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfuhHJ;AwC7zFE;;EzB1tBE;Af2hHJ;AwClpEI;;EzBz4CA;Af+hHJ;AuCziHI;;;EAGE;AvC2iHN;AcvmHW;ECmEP;EAAA;EAAA;EAAA;Af0iHJ;;A0CzmHE;E3B+DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af0jHJ;A0CtnHI;E3B4DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfykHJ;A0CjoHI;E3BwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfwlHJ;A0C5oHI;E3BoDA;EAAA;Af4lHJ;A0C5oHI;E3BgDA;EAAA;AfgmHJ;A0C5oHI;E3B4CA;EAAA;AfomHJ;AcvqHW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfunHJ;;A2CjrHI;E5B0DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af2oHJ;A2ChsHI;E5BqDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af8pHJ;AoCtsHE;ErBwCE;AfiqHJ;A2C5sHI;EAEE;A3C6sHN;A4C1rHM;E7BsBF;AfuqHJ;A4CzrHM;E7BkBF;Af0qHJ;A4CxrHM;E7BcF;Af6qHJ;A4CvrHM;E7BUF;AfgrHJ;A6CzsHE;E9ByBE;EAAA;AforHJ;A4C/qHM;E7BLF;EAAA;AfwrHJ;A4C/qHM;E7BTF;EAAA;Af4rHJ;A4C/qHM;E7BbF;EAAA;AfgsHJ;A4C/qHM;E7BjBF;EAAA;AfosHJ;A6C7tHE;E9ByBE;EAAA;EAAA;EAAA;Af0sHJ;A4CxqHM;E7BlCF;EAAA;Af8sHJ;A4CxqHM;E7BtCF;EAAA;AfktHJ;A4CxqHM;E7B1CF;EAAA;AfstHJ;A4CxqHM;E7B9CF;EAAA;Af0tHJ;A6CnvHE;E9ByBE;EAAA;EAAA;EAAA;EAAA;AfiuHJ;A4ClqHI;E7B/DA;AfouHJ;A4ChqHM;E7BpEF;AfuuHJ;A4C/pHM;E7BxEF;Af0uHJ;A4C9pHM;E7B5EF;Af6uHJ;A4C7pHM;E7BhFF;AfgvHJ;A6CzwHE;E9ByBE;EAAA;EAAA;EAAA;AfsvHJ;A4CrpHI;ECxKF;EACA;A7Cg0HF;A6CxzHE;EACE;A7C0zHJ;A6CrzHI;EACE;A7CuzHN;A6CnzHE;EACE;A7CqzHJ;A6ChzHE;EA1BA;EACA;A7C60HF;A6ChzHE;EA9BA;EACA;A7Ci1HF;A6ChzHE;EAlCA;EACA;A7Cq1HF;A4C1qHI;EC5KF;EACA;A7Cy1HF;A6Cj1HE;EACE;A7Cm1HJ;A6C90HI;EACE;A7Cg1HN;A6C50HE;EACE;A7C80HJ;A6Cz0HE;EA1BA;EACA;A7Cs2HF;A6Cz0HE;EA9BA;EACA;A7C02HF;A6Cz0HE;EAlCA;EACA;A7C82HF;A+Cr1HE;EF1BA;EACA;E9BsEE;EgCjEF;EACA;A/C+2HF;A6C72HE;EACE;A7C+2HJ;A6C12HI;EACE;A7C42HN;A6Cx2HE;EACE;A7C02HJ;A6Cr2HE;EA1BA;EACA;A7Ck4HF;A6Cr2HE;EA9BA;EACA;A7Cs4HF;A6Cr2HE;EAlCA;EACA;A7C04HF;A+C52HI;EhCwCA;EgCjEF;EACA;A/Cy4HF;A+C32HI;EhCkCA;EgCjEF;EACA;A/C84HF;A+C12HI;EhC4BA;EgCjEF;EACA;A/Cm5HF;A6C52HE;E9ByBE;EAAA;Afu1HJ;AgDl3HE;;EH5CA;EACA;A7Ck6HF;A6C15HE;;EACE;A7C65HJ;A6Cx5HI;;;EACE;A7C45HN;A6Cx5HE;;EACE;A7C25HJ;A6Ct5HE;;EA1BA;EACA;A7Co7HF;A6Cv5HE;;EA9BA;EACA;A7Cy7HF;A6Cx5HE;;EAlCA;EACA;A7C87HF;A6Cj5HE;;E9ByBE;EAAA;EiCrDF;AhDm7HF;AgD54HI;;EjCcA;EAAA;EiCrDF;AhDy7HF;AgD94HI;;EjCUA;EAAA;EiCrDF;AhD+7HF;AgDh5HI;;EjCMA;EAAA;EiCrDF;AhDq8HF;AgDl5HI;;EjCEA;EAAA;EiCrDF;AhD28HF;AkDz9HE;EnCmEE;EAAA;EAAA;Af25HJ;AoDh+HE;ErCqEE;Af85HJ;AoDh+HI;ErCkEA;Afi6HJ;AoD99HI;ErC6DA;Afo6HJ;Acv+HW;ECmEP;EAAA;EAAA;EAAA;Af06HJ;;AqDx0HE;EtClGE;EAAA;Af+6HJ;AqDx0HE;EtCvGE;EAAA;Afm7HJ;Act/HW;ECmEP;EAAA;Afu7HJ;;Ac1/HW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af28HJ;;Ac9gIW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af0+HJ;;AsDhhII;EvCsCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afu/HJ;AsDzhII;EvCkCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfmgIJ;AsD/hII;EvC4BA;AfsgIJ;AsD5hII;EvCsBA;AfygIJ;Ac5kIW;ECmEP;Af4gIJ;;Ac/kIW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfwhIJ;;Ac3lIW;ECmEP;Af4hIJ;;AuDplII;ExCwDA;AfgiIJ;AuDplII;ExCoDA;AfmiIJ;AuDnlII;ExCgDA;AfsiIJ;AczmIW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;Af8iIJ;;AcjnIW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfmkIJ;AwDhoII;EzC6DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af4kIJ;AwDpoII;EzCwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfqlIJ;;AyDzpIE;EAYI;AzDipIN;Ac5pIW;ECmEP;EAAA;Af6lIJ;;A0DjpII;E3CoDA;EAAA;AfkmIJ;A0DlpII;E3CgDA;EAAA;AfsmIJ;A0DlpII;E3C4CA;EAAA;Af0mIJ;A2D5qIE;EACE;A3D8qIJ;A2D3qIE;;EAEE;A3D6qIJ;;A+DjqII;;EACE;EACA;EACA;A/DqqIN;A+DnqII;;EACE;EACA;EACA;A/DsqIN;A+DpqII;;EACE;EACA;EACA;A/DuqIN;;A+DvpII;;;EACE;A/D4pIN;A+D1pII;;;EACE;A/D8pIN;A+D5pII;;;EACE;A/DgqIN;;A+D3pII;;EACE;EACA;A/D+pIN;A+D7pII;;EACE;EACA;A/DgqIN;A+D9pII;;EACE;EACA;A/DiqIN;;A+DtpIM;EACE;A/DypIR;A+DrpIM;EACE;A/DupIR;A+DnpIM;EACE;A/DqpIR;;AgEvmIE;ED3BM;A/DsoIR;AgElnII;EDjBI;A/DsoIR;A+DnoII;EACE;EACA;EACA;A/DqoIN;A+DnoII;EACE;EACA;EACA;A/DqoIN;A+DnoII;EACE;EACA;EACA;EACA;A/DqoIN;;A+DvnII;EACE;A/D0nIN;A+DxnII;EACE;A/D0nIN;A+DxnII;EACE;A/D0nIN;;A+DnmIE;EACE;A/DsmIJ;A+DpmIE;EACE;A/DsmIJ;A+DpmIE;EAEE;A/DqmIJ;A+D7mIE;EACE;A/D+mIJ;A+D7mIE;EACE;A/D+mIJ;A+D7mIE;EAEE;A/D8mIJ;A+DtnIE;EACE;A/DwnIJ;A+DtnIE;EACE;A/DwnIJ;A+DtnIE;EAEE;A/DunIJ;;A+D9mII;EACE;A/DinIN;A+D/mII;EACE;A/DinIN;A+D/mII;EACE;A/DinIN;;A+DvmII;EACE;EACA;A/D0mIN;A+DxmII;EACE;EACA;A/D0mIN;A+DxmII;EACE;EACA;A/D0mIN;;Acr0IW;ECmEP;EAAA;EAAA;EAAA;EAAA;Af0wIJ;;A4Dr/HE;;;;;EnB3PA;EACA;EACA;EACA;EAEA;EmB4PE;A5D4/HJ;;A4Dz/HE;;;;;EnBpQA;EACA;EACA;EACA;EAEA;EmBqQE;A5DggIJ;;A4D7/HE;;;;;EnB7QA;EACA;EACA;EACA;EAEA;EmB8QE;A5DogIJ;;A4DjgIE;;;;;EnBtRA;EACA;EACA;EACA;EAEA;EmBuRE;A5DwgIJ;;A4DlgIE;;;EnB7SE;EmBwTA;A5D8/HJ;;A4D3/HE;;;EnB3TE;EmBsUA;A5Du/HJ;;A4Dp/HE;;;;EnB9TA;EACA;EACA;EACA;EAEA;AzCwzIF;;A4Dx/HE;;;;;EnBrUA;EACA;EACA;EACA;EAEA;AzCo0IF;A4D7/HI;;;;;EACE;A5DmgIN;;A4D//HE;;;;EnBjVA;EACA;EACA;EACA;EAEA;AzCs1IF;;A4DngIE;;EnBxVA;EACA;EACA;EACA;EAEA;EmBsVE;A5D0gIJ;;A4DvgIE;;EnB9VA;EACA;EACA;EACA;EAEA;EmB4VE;A5D8gIJ;;A4D3gIE;;EnBpWA;EACA;EACA;EACA;EAEA;EmBkWE;A5DkhIJ;;A4D/gIE;;EnB1WA;EACA;EACA;EACA;EAEA;EmBwWE;A5DshIJ;;Ach+IW;ECmEP;EAAA;EAAA;EAAA;EAAA;Afq6IJ;;Acx+IW;ECmEP;EAAA;Af06IJ;;Ac7+IW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afq7IJ;;Acx/IW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afk8IJ;;AcrgJW;ECmEP;EAAA;EAAA;EAAA;Afy8IJ;;Ac5gJW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Afm9IJ;;ActhJW;ECmEP;EAAA;EAAA;EAAA;EAAA;Af29IJ;;A2DhhJE;EACE;A3DmhJJ;;A2DhhJE;;EAEE;EACA;A3DmhJJ;;AcxiJW;ECmEP;EAAA;EAAA;EAAA;EAAA;Af6+IJ;;AchjJW;ECmEP;EAAA;EAAA;EAAA;EAAA;Afq/IJ;;AmB3hJE;EJsCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfkgJJ;;AwB3jJE;ETyDE;EAAA;EAAA;EAAA;AfygJJ;;Ac5kJW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af+hJJ;;AclmJW;ECmEP;EAAA;EAAA;EAAA;EAAA;AfuiJJ;;AiCpmJE;ElB6DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfojJJ;;AkC9jJE;EnBUE;EAAA;EAAA;EAAA;EAAA;Af4jJJ;;AmCllJE;EpBsBE;EAAA;EAAA;EAAA;EAAA;AfokJJ;AoC5mJE;EVmSE;EACA;EXxQE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;EAZE;EOZF;EPwBA;UAAA;EAZE;EOZF;EPwBA;Af6lJJ;;AoCroJE;EVmSE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AfymJJ;;AsCnoJI;EvB0BA;EAAA;EAAA;EAAA;EAAA;AfinJJ;;AcprJW;ECmEP;EAAA;EAAA;EAAA;EAAA;AfynJJ;;AuC3kJE;ExB9CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;Af2oJJ;;AuCvlJE;EE1BA;EACA;EACA;EACA;EAEA;AzConJF;;ActtJW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;Af4pJJ;;A0C9qJE;E3BkBE;EAAA;EAAA;EAAA;EAAA;AfoqJJ;;AoC5sJE;EVmSE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AfgrJJ;;A8CpmJE;EpB+KE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;Af4rJJ;;AiDvsJE;EvBsQE;EACA;EX5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AfwsJJ;AgD1rJE;EjCdE;EAAA;EAAA;EAAA;Af8sJJ;;AkDpwJE;EnCsDE;EAAA;EAAA;EAAA;AfqtJJ;;AmDzxJI;EpCoEA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AfuuJJ;;AiE/uJA;EACI;AjEkvJJ;;AiE9uJI;EACI;EACA;EACA;AjEivJR;;AiE3tJA;AAEI;EACI,gC/DvGE;E+DwGF;AjE6tJR;;AiE1tJA;;EAAA;AAGA;EAQI;;IAAA;AjEwtJJ;AiE/tJI;EACI,gC/D3GQ;E+D4GR,gC/DjHE;AFk1JV;AiE/tJI;EACI,gC/DpHE;AFq1JV;AiE5tJI;EACI;AjE8tJR;AiE5tJI;EACI;AjE8tJR;AiE7tJQ;EACI;AjE+tJZ;;AiE3tJA;EACI;EACA;EACA;AjE8tJJ;;AiE3tJI;EACI;EACA;AjE8tJR;;AiE1tJI;EACI,sBlEtHU;ACm1JlB;;AiEztJI;EACI,yB/D7IoB;AFy2J5B;AiE1tJI;EACI,kB/D/ImB;AF22J3B;AiE1tJI;EACI,yB/DnJoB;AF+2J5B;AiE3tJQ;EACI,W/DpJe;AFi3J3B;AiE5tJY;EACI;AjE8tJhB;AiE5tJY;EACI;AjE8tJhB;AiE1tJI;EACI,4C/DrKO;AFi4Jf;;AiEvtJI;EhE3KA;EACA;EAGA;EACA;EgEwKI;AjE+tJR;AiE9tJQ;EACI,2ClE1KO;AC04JnB;;AiE5tJA;;EAGI,qB/DvLM;AFq5JV;;AiEvtJI;;;;EAEI,yBlEpLE;EkEqLF;AjE4tJR;AiE1tJI;;;;EACI,yBlEzHc;EkE0Hd;AjE+tJR;AiE7tJI;;;;EACI,yBlE3LQ;EkE4LR;AjEkuJR;AiEhuJI;;;;EACI,yBlEnIc;EkEoId;AjEquJR;;AiEluJA;EACI;EACA;EACA;EACA;AjEquJJ;;AiEluJA;EACI;EACA;AjEquJJ;;AiEluJA;EACI;AjEquJJ;;AiEluJI;EACI;AjEquJR;;AiEjuJI;EACI;AjEouJR;;AiEhuJA;EACI;AjEmuJJ;;AiEhuJI;;EAEI,uC/D5OM;AF+8Jd;AiEjuJI;;EAEI;AjEmuJR;AiEhuJQ;;EAEI;AjEkuJZ;;AiE9tJA;EAKI;EACA;EACA;EACA;EAIA;AjE0tJJ;AiEruJI;;EAEI;AjEuuJR;AiEjuJI;EACI;AjEmuJR;;AiE/tJA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AjEkuJJ;AiEjuJI;EACI;AjEmuJR;;AiEhuJA;EhE1OI;EAMI;EACA;ADy8JR;;AiEjuJA;;;EAGI;AjEouJJ;;AiEluJA;EACI,clEpNe;ACy7JnB;;AiE/tJI;EACI;EACA;AjEkuJR;AiEhuJI;EACI;AjEkuJR;AiEhuJI;EAKI;AjE8tJR;;AiE1tJA;EACI;AjE6tJJ;;AiE3tJA;EACI;AjE8tJJ;;AiE5tJA;EACI;EAIA;AjE4tJJ;AiE/tJI;EACI;AjEiuJR;;AiE7tJA;EAEI;AjE+tJJ;;AiE3tJI;EACI;EACA;AjE8tJR;;AiE1tJI;EACI;EACA;AjE6tJR;AiE3tJQ;EACI;AjE6tJZ;AiEztJQ;EACI;AjE2tJZ;AiE1tJY;;EAEI;EACA;AjE4tJhB;;AiEttJI;EACI,4B/DzWE;AFkkKV;;AiEttJA;EACI;EACA;EACA,clE3VO;ACojKX;AiExtJI;EACI;AjE0tJR;;AiEntJQ;EACI,yBAJS;AjE0tJrB;AiEltJQ;EACI,qBATS;AjE6tJrB;;AiEhtJA;EhElVI;EAMI;EACA;ADiiKR;;AiEltJI;EACI;AjEqtJR;AiEntJI;EACI;AjEqtJR;;AiEltJA;EACI,6BlE7Xc;ACklKlB;AiEptJI;EACI,qB/DhZE;AFsmKV;;AiE3sJA;EACI;EACA;AjE8sJJ;;AiEtsJQ;EhErXJ;EAMI;EACA;AD0jKR;;AiEvsJA;EACI;AjE0sJJ;;AiExsJA;EACI;AjE2sJJ;;AiEzsJA;EACI;AjE4sJJ;AiE3sJI;EACI;EACA;AjE6sJR;AiE1sJI;EACI;EACA;EACA,uBlE1aI;ACsnKZ;AiE1sJI;;EAEI,+DlE9ZgB;AC0mKxB;AiE1sJI;EACI;AjE4sJR;AiE1sJI;EACI;EACA;EACA;EACA;EACA;EACA;EhEzZJ;EASI;AD8lKR;;AiEzsJA;EACI;EACA,uBlEhcQ;AC4oKZ;;AiE1sJA;EAAA;AAEA;EACI;EACA;EACA;EACA,gC/DndY;E+DodZ,yBlE9YkB;EkE+YlB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AjE6sJJ;;AiE3sJA;EACI;AjE8sJJ;AiE7sJI;;EAEI;EACA;EACA,uBlEzdI;ACwqKZ;;AiE5sJA;;;EAGI,uBlE/dQ;AC8qKZ;;AiE5sJA;;EAEI,clE5dY;EkE6dZ;AjE+sJJ;;AiE1sJI;EACI;EACA;AjE6sJR;;AiE1sJA;EACI;EACA;AjE6sJJ;AiE5sJI;EACI,uBlEnfI;EkEofJ;AjE8sJR;;AiE3sJA;EACI,clEhfY;EkEifZ,uBlEzfQ;ACusKZ;;AiE5sJA;AAEI;EACI;EACA;AjE8sJR;AiE7sJQ;EACI;AjE+sJZ;;AiE1sJI;EACI;EACA;EACA;AjE6sJR;AiE5sJQ;EACI,uBlE3gBA;EkE4gBA;AjE8sJZ;AiE3sJI;EACI;AjE6sJR;;AiEvsJI;;EACI,qB/DviBE;AFkvKV;AiEzsJI;;EACI,yBlE3ec;EkE4ed;AjE4sJR;;AiEzsJA;EACI;AjE4sJJ;AiE3sJI;EACI;EACA;AjE6sJR;;AiEzsJI;EACI;EACA,4C/DtjBO;E+DujBP;AjE4sJR;AiE3sJQ;EACI;EAOA,uBlEljBA;ACyvKZ;AiErsJQ;EhEphBJ;EAMI;EACA;ADutKR;AiEvsJQ;EAEI;EACA,qB/D1kBF;E+D2kBE;AjEwsJZ;;AiEpsJA;EACI;EACA;AjEusJJ;;AiEpsJA;EACI;EhE/jBA;ADuwKJ;;AiEpsJA;EACI;AjEusJJ;;AiEpsJA;EACI;AjEusJJ;;AiEnsJQ;EACI;EACA;EACA,uBlErlBA;EkEslBA;AjEssJZ;AiEjsJY;EACI,uBlE5lBJ;EkE6lBI;AjEmsJhB;;AiEzrJI;EACI;AjE4rJR;AiE1rJI;;;;EAII;AjE4rJR;;ADrzKA;AmEDA;EACI;EACA;EACA;EACA;EACA;AlE0zKJ;;AkExzKA;EACI;EACA;AlE2zKJ;;AkEzzKA;EACI;EACA;AlE4zKJ;;AkE1zKA;EACI;AlE6zKJ;;AkE3zKA;EC0DI,qCpEVU;EoEgBV;UAAA;AnEgwKJ;;AkE5zKA;ECyDI,qCpEZe;ACmxKnB;;AkE7zKA;EACI;EACA,cnEXO;EmEYP;EACA;AlEg0KJ;;AkE9zKA;EACI;EACA;EACA;EACA;EACA;EACA;AlEi0KJ;;AkE/zKA;AACA;EACI;EACA;AlEk0KJ;AkEh0KI;EACI;AlEk0KR;AkEh0KI;;;;;;EAMI;AlEk0KR;AkEh0KI;EACI;AlEk0KR;AkEh0KI;EACI;AlEk0KR;AkEh0KI;EACI;AlEk0KR;AkEh0KI;EACI;AlEk0KR;AkEh0KI;EACI;AlEk0KR;AkEh0KI;EACI;AlEk0KR;AkEh0KI;EACI;EACA;AlEk0KR;;AkE9zKI;EACI;AlEi0KR;AkE/zKI;EACI;AlEi0KR;;AkE5zKA;EACI;EACA;EACA;EACA,gBA9Fe;EA+Ff;EACA;AlE+zKJ;AkE9zKI;EACI;EACA;AlEg0KR;;AkE7zKA;EACI;EACA;AlEg0KJ;;AkE9zKA;EACI;EACA;EACA;AlEi0KJ;;AkEzzKA;EACI;EACA;AlE4zKJ;;AkElzKI;;EACI;EACA;EACA;AlEszKR;AkEpzKI;;;;EAEI;EACA;EACA;AlEwzKR;AkEvzKQ;;;;EjE7FJ;AD05KJ;AkE3zKY;;;;EjE/FR;EkEkBA;EACA;EACA;EAGI;EACA;AnE+4KR;;AkEj0KA;EACI;EACA;EACA;EACA;EACA;ECxIA;EACA;UAAA;AnE68KJ;AkEp0KI;EACI,qBhE9JE;EDCN;EACA;EAGA;EACA;EiE0JI;AlE20KR;AkEz0KI;EACI;EACA;EACA;EACA;EAGA;AlE20KR;;AkEx0KA;EACI;EACA;ECvJA;EACA;EDwJA,mBnExFU;EmEyFV;EACA,kBnE1FU;EmE2FV;EACA;EAEA;EACA;EACA,iBnEhGU;EmEiGV,oBnEjGU;AC46Kd;;AkEz0KA;EACI;AlE40KJ;;AkE10KA;EACI;EACA;AlE60KJ;;AkE10KA;EACI;AlE60KJ;AkEr0KI;EACI;EACA;EACA,uBnE/LI;EmEgMJ;EACA;AlEu0KR;AkEr0KQ;EACI;EACA;EACA;AlEu0KZ;AkEn0KI;EACI;EACA;AlEq0KR;;AkEl0KA;EACI;EACA;AlEq0KJ;;AkEn0KA;EACI;EACA;AlEs0KJ;;AkEp0KA;EACI;EACA;AlEu0KJ;;AkEr0KA;EACI;EACA;AlEw0KJ;;AkEt0KA;EACI;AlEy0KJ;;AkEv0KA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA,yBnEhM0B;AC0gL9B;AkEz0KI;EACI;EACA;EACA;EACA;EACA;AlE20KR;;AkEx0KA;;EAEI;EACA;AlE20KJ;;AkEz0KA;EACI;EACA;EjEzQA;EACA;EAGA;EACA;ADslLJ;;AkE/0KA;EACI;EACA;EACA;EACA;EACA;EACA,YnEpOe;EmEqOf;EACA;EACA;EjEnQA;ADslLJ;AkEj1KI;EACI;EACA;EACA;EACA;EACA,cnEzQG;EmE0QH,yBnEpOsB;EmEqOtB;AlEm1KR;AkEl1KQ;EACI;EACA;AlEo1KZ;AkEl1KQ;EACI;AlEo1KZ;AkEj1KI;EACI;EACA;EACA;EACA;EACA;AlEm1KR;;AkE10KA;EACI;IANA;IACA;IACA;IACA;ElEo1KF;AACF;AkE70KA;EACI;IAZA;IACA;IACA;IACA;ElE41KF;AACF;AkEh1KA;EACI;IAjBA;IACA;IACA;IACA;ElEo2KF;AACF;AkEn1KA;EACI;IAtBA;IACA;IACA;IACA;ElE42KF;AACF;AkEt1KA;EACI;IACI;IC7PJ,qCpEVU;ImEyQN;IACA;ElEw1KN;AACF;AkEh1KA;EACI;IAzCA;IACA;IACA;IACA;ElE43KF;EkEn1KE;IACI;IACA;ElEq1KN;EkEn1KE;;IAEI;IACA;ElEq1KN;AACF;AkEn1KA;EACI;;IAEI;ElEq1KN;AACF;AkEn1KA;EACI;;IAEI;IACA;ElEq1KN;EkEp1KM;;IACI;ElEu1KV;AACF;AkEp1KA;EACI;IACI;IACA;ElEs1KN;EkEr1KM;IACI;ElEu1KV;AACF;AD/sLA;AqEFI;EACI,yBrEsDsB;EqErDtB;EACA;ApEotLR;AoEltLI;EACI;ApEotLR;AoEltLI;EACI;ApEotLR;;AoEjtLA;;;EAGI;EACA;EACA;EACA;EACA;EACA;ApEotLJ;AoEntLI;;;EACI;EACA;ApEutLR;;AoEptLA;EACI;ApEutLJ;;AoErtLA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA,yBrEkB0B;ACssL9B;AoEvtLI;EACI;EACA;EACA;EACA;EACA;ApEytLR;;AoEttLA;EACI;ApEytLJ;;AoEvtLA;EACI;EACA;EACA;EACA;ApE0tLJ;AoEztLI;;EAEI;EACA;EACA;ApE2tLR;AoE1tLQ;;EACI;EACA;EACA;EACA;EACA;ApE6tLZ;AoE1tLI;EACI,WrErDQ;EqEsDR;ApE4tLR;AoE1tLI;EACI;ApE4tLR;AoE1tLI;EACI;ApE4tLR;AoE1tLI;EACI;EACA;ApE4tLR;AoE1tLI;EACI,uBrErEI;EqEsEJ;EACA;EACA;ApE4tLR;AoE1tLI;;EAEI;EACA;ApE4tLR;AoE1tLI;EACI;ApE4tLR;AoE1tLI;;EAEI;ApE4tLR;AoEztLI;EACI;ApE2tLR;AoE1tLQ;EACI;EACA;EACA;EACA;EACA;ApE4tLZ;AoE3tLY;EACI;ApE6tLhB;AoE3tLY;EACI;ApE6tLhB;AoE5tLgB;EACI;ApE8tLpB;AoE1tLQ;EACI;ApE4tLZ;AoEztLI;EACI;EACA;ApE2tLR;AoEztLI;EACI;EACA,qBlEnIE;AF81LV;AoEztLI;EACI;EACA;ApE2tLR;AoEztLI;EACI;EACA;ApE2tLR;AoEztLI;EACI;EACA;EACA;EACA;ApE2tLR;AoEztLI;EACI;EACA;ApE2tLR;AoEztLI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ApE2tLR;AoExtLI;EACI;ApE0tLR;AoExtLI;EACI;ApE0tLR;AoExtLI;;EAEI;ApE0tLR;AoExtLI;EACI;ApE0tLR;AoEztLQ;EACI;ApE2tLZ;AoEztLQ;EACI;ApE2tLZ;AoEztLQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;ApE2tLZ;AoE1tLY;EACI;ApE4tLhB;AoExtLI;EACI;EACA;ApE0tLR;AoExtLI;EACI;EACA;EACA;ApE0tLR;AoEvtLQ;EACI;EACA;EACA;EACA;ApEytLZ;AoExtLY;EACI;EACA;ApE0tLhB;AoEttLI;EACI;EACA;EACA;EACA;ApEwtLR;AoEttLI;EACI;ApEwtLR;AoEttLI;EACI;EACA;EACA;ApEwtLR;AoEttLI;EACI;EACA;ApEwtLR;AoEttLI;EACI;EACA;EACA;EACA;ApEwtLR;AoErtLQ;;EAEI;ApEutLZ;AoErtLQ;EACI;ApEutLZ;AoEttLY;EACI;ApEwtLhB;AoEttLY;;EAEI;ApEwtLhB;AoEttLY;EACI;EACA;EACA;EACA;ApEwtLhB;AoEntLQ;EACI;ApEqtLZ;AoEntLQ;EACI;ApEqtLZ;AoEltLI;;;EAGI;EACA;EACA;ApEotLR;AoEjtLQ;EACI,qClE9QE;EkE+QF;ApEmtLZ;AoEjtLQ;EACI;ApEmtLZ;AoE/sLQ;EACI;ApEitLZ;AoEhtLY;EACI;EACA;EACA;EACA;EACA;ApEktLhB;AoE9sLI;EACI;EACA;EACA;EACA;EACA;ApEgtLR;AoE/sLQ;EACI;ApEitLZ;AoE/sLQ;EACI;ApEitLZ;AoE9sLI;EACI;EACA;EACA;ApEgtLR;AoE9sLI;EACI;EACA;ApEgtLR;AoE9sLI;EACI;ApEgtLR;AoE9sLI;EACI;EACA;EACA;EACA;ApEgtLR;AoE9sLI;EACI;EACA;EACA;EACA;ApEgtLR;AoE/sLQ;EACI;ApEitLZ;AoE9sLI;EACI;EACA;EACA;EACA;ApEgtLR;AoE9sLI;EACI;EACA;ApEgtLR;AoE/sLQ;;EAEI;ApEitLZ;AoE/sLQ;EACI;EACA;EACA;ApEitLZ;AoE9sLI;EAII;EACA;EACA;EACA;EACA,yBrEjTsB;AC8/L9B;AoEptLQ;EACI;ApEstLZ;AoE/sLQ;EACI;EACA;EACA;ApEitLZ;AoEhtLY;EACI;EACA;ApEktLhB;AoEhtLY;EACI;EACA;EACA;ApEktLhB;AoEjtLgB;EACI;EACA;EACA;EACA;EACA;ApEmtLpB;AoEjtLgB;EACI,2CrE1XD;AC6kMnB;AoEjtLgB;EACI,erEtUJ;EqEuUI,WrEvUJ;EqEwUI,YrExUJ;EqEyUI;EACA;EACA;EACA;EACA;EACA;ApEmtLpB;AoEltLoB;EACI;ApEotLxB;AoEjtLgB;EACI;ED5YhB;EACA;EACA;EC4YgB;ApEqtLpB;AoEntLgB;;;EAGI;EACA,qBlEzZV;EkE0ZU;EACA;ApEqtLpB;AoEhtLI;EACI;EACA;ApEktLR;AoEjtLQ;EACI;EACA;EACA;EACA;ApEmtLZ;AoEltLY;EACI;EACA;EACA;EACA;EACA;EACA;ApEotLhB;AoEntLgB;EACI;EACA;ApEqtLpB;AoEjtLQ;EACI;EACA;ApEmtLZ;AoEjtLQ;EACI;EACA;EACA;ApEmtLZ;AoEjtLQ;;EAEI;EACA;EACA;EACA;ApEmtLZ;;AoE7sLI;EACI;EACA;EACA;ApEgtLR;AoE9sLI;EACI;EACA;EACA;ApEgtLR;AoE9sLI;EACI;EACA,iIrEhb4B;EqEib5B,2CrEhdW;EqEidX;WAAA;ApEitLR;AoE9sLI;EACI;EACA;EACA;EACA;EACA;ApEgtLR;AoE/sLQ;EACI,uBrEjdA;EqEkdA;ApEitLZ;AoE9sLI;EACI;ApEgtLR;;AoE7sLA;EACI;EACA;EACA;ApEgtLJ;AoE/sLI;EACI;ApEitLR;;AoE9sLA;EACI;ApEitLJ;;AoE9sLA;;EAAA;AAOI;;;EACI;EACA,qBlE9fE;EkE+fF;ApE+sLR;;AoE3sLI;EACI,qBlEpgBE;AFktMV;;AD7sMA;AsEHA;EpEiBI;EoEfA;ArEotMJ;AqEntMI;EACI;ArEqtMR;AqEntMI;EACI;ArEqtMR;AqEntMI;EACI;EACA;ArEqtMR;AqEntMI;;EAEI;EACA;ArEqtMR;AqEntMI;EACI;ArEqtMR;AqEntMI;EACI;EACA;EACA;EACA;ArEqtMR;AqEltMI;;EAEI;ArEotMR;AqEjtMQ;EACI;EACA;EACA;ArEmtMZ;AqEjtMQ;EACI;EACA;EACA;ArEmtMZ;;AsE9vMA,uD;;;;ACAA;IACI,+BAA+B;IAC/B,wCAAwC;IACxC;;;0EAGsE;IACtE,mBAAmB;IACnB,kBAAkB;AACtB;;;;;ACTA;IACI,4BAA4B;IAC5B,qCAAqC;IACrC;;;oEAGgE;IAChE,mBAAmB;IACnB,kBAAkB;AACtB;;;;;ACTA,8CAA8C;AAC9C;;IAEI,2BAA2B;IAC3B,wCAAwC;IACxC,yBAAyB;IAEzB,kBAAkB;IAGlB,iBAAiB;IAEjB,sBAAsB;AAC1B;AACA;IACI,kBAAkB;IAClB,cAAc;AAClB;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,UAAU;AACd;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,MAAM;IACN,OAAO;IACP,SAAS;AACb;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,QAAQ;AACZ;AACA;IACI,kBAAkB;IAClB,UAAU;AACd;AACA;;IAGI,wDAAwD;AAC5D;AACA;IACI,0BAA0B;AAC9B;AACA;;IAGI,+BAA+B;AACnC;AACA;IACI,YAAY;AAChB;AACA;IACI,WAAW;IACX,YAAY;IACZ,WAAW;IACX,SAAS;AACb;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;IACX,YAAY;IACZ,UAAU;IACV,UAAU;AACd;AACA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,yBAAyB;IACzB,wDAAwD;AAC5D;AACA;IACI,mBAAmB;IACnB,gDAAgD;IAEhD,4BAA4B;AAChC;AACA;IACI,iBAAiB;AACrB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,4EAA4E;AAChF;AACA;IACI,yEAAyE;AAC7E;AACA;;IAEI,WAAW;IACX,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,UAAU;IACV,mBAAmB;IACnB,UAAU;IACV,QAAQ;AACZ;AACA;IACI,UAAU;AACd;AACA;;IAEI,WAAW;IACX,WAAW;IACX,SAAS;IACT,SAAS;AACb;AACA;IACI,SAAS;AACb;AACA;IACI,mBAAmB;AACvB;AACA;;;IAGI,mBAAmB;AACvB;AACA;;IAGI,sBAAsB;AAC1B;AACA;IACI,kBAAkB;IAClB,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;AACA;IACI,WAAW;IACX,eAAe;AACnB;AACA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;AACA;;IAEI,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;AACf;AACA;IAEI,oCAAoC;AACxC;AACA;IACI,iBAAiB;IACjB,UAAU;IACV,WAAW;AACf;AACA;IACI,YAAY;AAChB;AACA;IACI,YAAY;AAChB;AACA;IACI,eAAe;IACf,YAAY;IACZ,MAAM;IACN,UAAU;AACd;AACA;IAEI,iCAAiC;IACjC,kBAAkB;AACtB;AACA;IACI,UAAU;IACV,WAAW;IACX,gBAAgB;AACpB;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;AACf;AACA;IACI,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,kBAAkB;IAClB,gBAAgB;IAChB,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;AACA;IAEI,6BAA6B;IAC7B,SAAS;IACT,YAAY;AAChB;AACA;IAEI,6BAA6B;IAC7B,QAAQ;IACR,WAAW;AACf;;;;;A1ExNA;A2EFA;;;EAGI;ACEJ;;ADCA;EACI;ACEJ;;ADCA;EzEZI;EACA;EAGA;EACA;A0EeJ;;ADLA;;;;CAAA;AAOA;;EAEI;EACA,e3EoFc;E2EnFd;EACA;ACMJ;;ADHA;EACI,sB3ENc;A4EYlB;;ADJA;EACI,qBxEnCM;AyE0CV;ADNI;EzEYA;EAMI;EACA;A0ERR;;ADPA;EACI,sB3EqBqB;A4EXzB;;ADRA;EACI;ACWJ;;ADTA;EACI,qBxE/CM;EwEgDN;EACA;ACYJ;;ADVA;EACI;EACA,6B3EpCc;A4EiDlB;ADZI;EAEI;EACA;EACA;EACA;EACA;EACA,yB3EKoB;E2EJpB;ACaR;ADXI;EACI;ACaR;ADXI;EACI;ACaR;;ADVA;EACI;ACaJ;;ADXA;EzE1BI;EAMI;EACA;A0EoCR;;ADdA;EACI;EACA;ACiBJ;ADhBI;EACI;EACA,uB3ElEI;E2EmEJ;EACA;ACkBR;;ADfA;EACI;EACA;EACA;EACA;EACA;EACA;ACkBJ;;ADhBA;EACI;EACA;ACmBJ;;ADjBA;;EAEI;EACA;ACoBJ;;ADlBA;EzErFI;EyEuFA;EACA;ACqBJ;;ADnBA;;EAEI;EACA;EACA;ACsBJ;;ADpBA;EACI;EACA;EACA;EACA;EACA;EACA;ACuBJ;;ADrBA;EACI;ACwBJ;;ADtBA;EACI;EACA,uB3EhHQ;E2EiHR;ACyBJ;;ADvBA;EACI;AC0BJ;ADzBI;EACI;EzEtFJ;EyEwFI;EACA;AC2BR;;ADxBA;EACI;EACA;EACA,qBxE/IM;EwEgJN;EACA;EzEhJA;EACA;EAGA;EACA;EAgBA;EyE8HA;EACA;ACgCJ;AD/BI;EzEtGA;EkELA;AQ8IJ;AR7II;EO0GA;IPzGI;EQgJN;AACF;ADrCI;EACI;EACA;ACuCR;;ADpCA;EACI;EACA;EACA;EACA;EACA;ACuCJ;;ADrCA;EACI;ACwCJ;;ADtCA;EACI,c3ExFe;E2E0Ff;ACwCJ;;ADtCA;EACI;IACI;ECyCN;AACF;ADpCI;;EACI;ACuCR;;ADnCA;EAGI;UAAA;ACoCJ;;ADlCA;EP1FI;AQgIJ;AR/HI;EACI;EACA;EACA;EACA;EACA;EACA;EOqFA;EACA;AC6CR;;AD1CA;EPhGI;AQ8IJ;AR7II;EACI;EACA;EACA;EACA;EACA;EACA;EO2FA;EACA;ACqDR;;AC7PA;;CAAA;AAIA;EACI;EACA;AD+PJ;;AErQA,qB;;;;ACAA,+E","sources":["./src/app/core-ui-module/styles/fonts/material-design-icons/material-icons.css","./src/app/core-ui-module/styles/fonts/edu-icons/edu-icons.css","./src/app/core-ui-module/styles/globals.scss","./src/app/core-ui-module/styles/variables.scss","./src/app/core-ui-module/styles/core-base.scss","./projects/edu-sharing-ui/assets/scss/mixins.scss","./src/app/core-ui-module/styles/branding.scss","./src/app/core-ui-module/styles/variables-root.scss","./projects/edu-sharing-ui/assets/scss/variables.scss","./node_modules/angular-material-css-vars/src/lib/_internal-helper.scss","./node_modules/angular-material-css-vars/src/lib/_variables.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_private.scss","./node_modules/@angular/material/core/style/_layout-common.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/style/_sass-utils.scss","./node_modules/@material/theme/_css.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@material/linear-progress/_linear-progress-theme.scss","./node_modules/@material/theme/_gss.scss","./node_modules/@material/dom/_dom.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/form-field/_form-field-subscript.scss","./node_modules/@material/typography/_typography.scss","./node_modules/@angular/material/form-field/_form-field-focus-overlay.scss","./node_modules/@angular/material/form-field/_mdc-text-field-theme-variable-refresh.scss","./node_modules/@angular/material/form-field/_form-field-native-select.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-density.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@material/form-field/_form-field.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@material/list/_list.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button/_button-theme-private.scss","./node_modules/@material/button/_button-base.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@angular/material/button/_fab-theme.scss","./node_modules/@material/fab/_fab.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/angular-material-css-vars/src/lib/_main.scss","./node_modules/@angular/material/core/theming/_palette.scss","./node_modules/angular-material-css-vars/src/lib/_mat-lib-overwrites.scss","./node_modules/angular-material-css-vars/src/lib/_public-util.scss","./src/app/core-ui-module/styles/material-theme.scss","./src/app/core-ui-module/styles/dialogs.scss","./src/app/core-ui-module/styles/mixins.scss","./src/app/core-ui-module/styles/mds.scss","./src/app/core-ui-module/styles/ng2-calendar.scss","./src/app/core-ui-module/styles/fonts/custom-icons/custom-icons.scss","./src/assets/fonts/opensans_regular/stylesheet.css","./src/assets/fonts/opensans_bold/stylesheet.css","./src/assets/css/nouislider.min.css","./src/styles/globals.scss","./src/styles/main.scss","./src/styles/override-core.scss","./src/styles/override.scss","./projects/app-as-web-component/src/styles.scss"],"sourcesContent":["@font-face {\n    font-family: 'Material Icons';\n    font-style: normal;\n    font-weight: 400;\n    src: url(MaterialIcons-Regular.eot); /* For IE6-8 */\n    src: local('Material Icons'), local('MaterialIcons-Regular'),\n        url(MaterialIcons-Regular.woff2) format('woff2'),\n        url(MaterialIcons-Regular.woff) format('woff'),\n        url(MaterialIcons-Regular.ttf) format('truetype');\n}\n\n.material-icons {\n    font-family: 'Material Icons';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 24px; /* Preferred icon size */\n    display: inline-block;\n    width: 1em;\n    height: 1em;\n    line-height: 1;\n    text-transform: none;\n    letter-spacing: normal;\n    word-wrap: normal;\n    white-space: nowrap;\n    direction: ltr;\n\n    /* Support for all WebKit browsers. */\n    -webkit-font-smoothing: antialiased;\n    /* Support for Safari and Chrome. */\n    text-rendering: optimizeLegibility;\n\n    /* Support for Firefox. */\n    -moz-osx-font-smoothing: grayscale;\n\n    /* Support for IE. */\n    font-feature-settings: 'liga';\n}\n","@font-face {\n    font-family: 'Edu-Icons';\n    src: url('Edu-Icons.eot');\n    src: local('Edu-Icons'), url('Edu-Icons.eot?1pib6e#iefix') format('embedded-opentype'),\n        url('Edu-Icons.ttf') format('truetype'), url('Edu-Icons.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n.edu-icons {\n    /* use !important to prevent issues with browser extensions that change fonts */\n    font-family: 'Edu-Icons' !important;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n\n    /* Enable Ligatures ================ */\n    letter-spacing: 0;\n    -webkit-font-feature-settings: 'liga';\n    -moz-font-feature-settings: 'liga=1';\n    -moz-font-feature-settings: 'liga';\n    -ms-font-feature-settings: 'liga' 1;\n    font-feature-settings: 'liga';\n    -webkit-font-variant-ligatures: discretionary-ligatures;\n    font-variant-ligatures: discretionary-ligatures;\n\n    /* Better Font Rendering =========== */\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n","/*\n  globally usable classes\n  carefully choose what to place here since this will be included in all projects\n  use non-common class names to prevent conflicts with other included files\n*/\n@import 'variables';\n\n.display-none {\n    display: none !important;\n}\n.opacity-invisible {\n    opacity: 0;\n}\n.mat-heading-1,\n.mat-heading-2,\n.mat-heading-3,\n.mat-heading-4,\n.mat-heading-5,\n.mat-heading-6 {\n    display: flex;\n    align-items: center;\n    font-weight: normal;\n    i {\n        margin: 0 5px;\n    }\n    > span {\n        flex-grow: 1;\n    }\n}\n.mat-heading-1 {\n    color: $textLight;\n    font-size: 220%;\n}\n.mat-heading-2 {\n    color: $textLight;\n    font-size: 180%;\n}\n.mat-heading-3 {\n    color: $textLight;\n    font-size: 150%;\n}\n.mat-heading-4 {\n    color: $textLight;\n    font-size: 120%;\n    font-weight: bold;\n}\n.mat-heading-5 {\n    color: $textLight;\n    font-size: 100%;\n    line-height: 1.3;\n    font-weight: bold;\n}\n.mat-heading-6 {\n    color: $textLight;\n    font-weight: bold;\n    font-size: 90%;\n}\n.mat-heading-underline {\n    width: 100%;\n    border-bottom: 1px solid $textVeryLight;\n}\n.profile-gradient {\n    background: linear-gradient(to bottom, transparent 0, rgba(0, 0, 0, 0.5) 100%);\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    position: absolute;\n}\n.blurred-image {\n    @include blurImage();\n}\n.authority-search-input-option {\n    > span {\n        display: flex;\n        align-items: center;\n        .material-icons {\n            color: $textLight;\n            margin-right: 10px;\n        }\n        div {\n            line-height: 100%;\n            font-size: 100%;\n        }\n        .small {\n            font-size: 90%;\n            color: $textLight;\n            padding-top: 3px;\n        }\n    }\n}\nngx-slider.ngx-slider {\n    .ngx-slider-bar {\n        background: #e1e1e1;\n        border-radius: 2px;\n    }\n    .ngx-slider-selection {\n        background-color: $primary;\n    }\n    .ngx-slider-pointer {\n        background-color: $primary;\n    }\n    .ngx-slider-pointer.ngx-slider-active:after {\n        background-color: $primaryDark;\n    }\n    .ngx-slider-tick.ngx-slider-selected {\n        background-color: $primaryMediumLight;\n    }\n    .ngx-slider-bubble {\n        color: $primaryDark;\n    }\n    .ngx-slider-bubble.ngx-slider-limit {\n        display: none;\n        color: $primaryDark;\n    }\n}\nngx-slider.ngx-slider-small {\n    .ngx-slider-bubble {\n        font-size: $fontSizeSmall;\n    }\n    .ngx-slider-bar {\n        height: 2px;\n    }\n    .ngx-slider-pointer {\n        width: 16px;\n        height: 16px;\n        top: -7px;\n    }\n    .ngx-slider-pointer:after {\n        display: none;\n        /*width: 4px;\n    height: 4px;\n    top: 6px;\n    left: 6px;*/\n    }\n}\n","@use 'sass:map';\n@use 'sass:color';\n@import 'branding';\n\n// All variables can be overridden in `branding.scss`.\n/* replace variables which are may not defined in the branding */\n$primaryVeryLight: var(--palette-primary-50) !default;\n$primaryMediumDark: var(--palette-primary-700) !default;\n\n$tabColor: var(--primary) !default;\n$tabColorDark: var(--primary) !default;\n$tabColorLight: $primaryMediumLight !default;\n$warning: #cd2457 !default;\n$warningMedium: #e98c1b !default;\n$toastLeftError: #c15d5d !default;\n$toastPrimary: #333333 !default;\n$textLight: var(--textLight) !default;\n$textMediumLight: var(--textMediumLight) !default;\n$textVeryLight: #aaa !default;\n// prefer using var(--textMain)\n$textMain: #383838 !default;\n$textRenderingLabels: #6f6f6f !default;\n$fontSizeXLarge: 120% !default;\n$fontSizeLarge: 110% !default;\n$fontSizeSmall: 90% !default;\n$fontSizeXSmall: var(--fontSizeXSmall) !default;\n$backgroundColor: #fff !default;\n$workspaceSidebarWidth: 300px !default;\n$workspaceInheritColor: #42ca8d !default;\n$editorialCollectionsBackground: #f5ec19 !default;\n$itemSelectedBackground: $primaryVeryLight !default;\n$itemSelectedTextColor: $primaryMediumDark !default;\n$buttonHoverBackground: rgba(var(--palette-primary-500-no-rgb), 0.08) !default;\n$workspaceNewBackground: $itemSelectedBackground !default;\n// the white bar height in search and es-workspace\n$secondaryBarHeight: 65px !default;\n$listItemSelectedBackground: var(--palette-primary-50) !default;\n$workspaceSelectedBackgroundEffect: linear-gradient(\n        to right,\n        var(--primary) 0,\n        var(--primary) 5px,\n        rgba(0, 0, 0, 0) 5px,\n        rgba(0, 0, 0, 0) 5px\n    )\n    no-repeat !default;\n$workspaceTreeBackground: #f7f7f7 !default;\n$workspaceTopBarSafeBackground: #963a3a;\n$dialogRightWidth: 320px !default;\n$workspaceTreeSelectedBackground: #fff !default;\n$workspaceTreeWidth: 300px !default;\n$workspaceBreadcrumbsHeight: $secondaryBarHeight !default;\n$workspaceTreeSelectedBackgroundEffect: linear-gradient(\n    to right,\n    var(--primary) 0,\n    var(--primary) 5px,\n    rgba(0, 0, 0, 0) 5px,\n    rgba(0, 0, 0, 0) 5px\n) !default;\n$workspaceMetadataBackground: #f7f7f7 !default;\n$buttonBorderRadius: 2px !default;\n$contextMenuWidth: 240px !default;\n$tableIconSize: 38px !default;\n$actionDialogBackground: #eee !default;\n$cardLightBackground: #f9f9f9 !default;\n$searchInputBorderColor: #ccc !default;\n$cardSeparatorLineColor: #ccc !default;\n$genericSeperatorLineColor: #ececec !default;\n$inputBorderColor: #9e9e9e !default;\n$commentsActionsSeperatorLineColor: $backgroundColor !default;\n$noResultsColor: rgba(black, 0.54) !default;\n$darkenColor: rgba(0, 0, 0, 0.75) !default;\n$darkenLightColor: rgba(0, 0, 0, 0.25) !default;\n// prefer using var(--$colorStatusPositive)\n$colorStatusPositive: #40bf8e !default;\n// prefer using var(--colorStatusNegative)\n$colorStatusNegative: #cd2457 !default;\n$colorStatusWarning: $warningMedium !default;\n$colorStatusRecommended: #acd331 !default;\n$colorStatusNeutral: #777 !default;\n$colorStarActive: var(--colorStarActive) !default;\n$focusColor: var(--palette-primary-300) !default;\n$placeholderColor: #767676 !default;\n$focusWidth: 2px !default;\n$cardWidth: var(--cardWidth) !default;\n$cardHeight: 300px !default;\n$listItemHeight: 70px !default;\n$listCardSmallHeight: 100px !default;\n$listHeadingHeight: 36px !default;\n$cardPadding: 25px !default;\n$transitionNormal: var(--transitionNormal) !default;\n// prefer using var(--mobileWidth)\n$mobileWidth: 700px !default;\n// prefer using var(--mobileStage)\n$mobileStage: 100px !default;\n$mobileHeight: 750px !default;\n$mobileHeightWithKeyboard: 550px !default;\n$mobileHeightLandscape: 400px !default;\n$mobileWidthPortrait: 400px !default;\n// this factor should be multiplied by a natural number, e.g. *3 means stage 3 (relatively early)\n$dialogZIndex: 130 !default;\n// before the top bar on mobile, but behind the mobile tabs and the top bar on desktop\n$dialogNonModalZIndex: 90 !default; // before the top bar on mobile, but behind the mobile tabs and the top bar on desktop\n$topBarZIndex: 98 !default;\n$topBarMobileZIndex: 80 !default;\n$workspaceTopBarInputBackground: #eee !default;\n$workspaceTopBarInputText: $textMain !default;\n$mobileTabsZIndex: 110 !default;\n$mobileTabSwitchWidth: $mobileWidth + $mobileStage * 2 !default;\n$mobileTabNavHeight: 62px !default;\n$primaryFontFamily: 'open_sansregular' !default;\n$primaryFontSize: 10pt !default;\n\n$default-chip-colors: (\n    'cclom_general_keyword': rgb(166, 214, 208),\n    'ccm_educationalcontext': rgb(214, 166, 166),\n    'ccm_educationallearningresourcetype': rgb(214, 193, 166),\n    'ccm_objecttype': rgb(166, 192, 214),\n    'ccm_taxonid': rgb(166, 214, 174),\n    'ccm_educationalintendedenduserrole': rgb(211, 214, 166),\n);\n$custom-chip-colors: () !default;\n$chip-colors: map.merge($default-chip-colors, $custom-chip-colors);\n\n@import 'mixins';\n","@import 'globals';\n@import 'variables-root';\n@import 'material-theme';\n@import 'dialogs';\n@import 'mds';\n@import 'ng2-calendar';\n@import 'fonts/material-design-icons/material-icons.css';\n@import 'fonts/edu-icons/edu-icons.css';\n@import 'fonts/custom-icons/custom-icons.scss';\n","@mixin clickable() {\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -webkit-tap-highlight-color: transparent;\n}\n@mixin limitLineCount($count, $lineHeight: 1) {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    line-height: $lineHeight + em;\n    max-height: $count * $lineHeight + em;\n    -webkit-line-clamp: $count; /* number of lines to show */\n    -webkit-box-orient: vertical;\n    /* autoprefixer: off */\n}\n@mixin materialShadow($important: false) {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3) if($important, !important, null);\n}\n@mixin materialShadowBottom($opacity: 0.1) {\n    box-shadow: 0 3px 3px rgba(0, 0, 0, $opacity);\n}\n@mixin materialShadowSmall($important: false) {\n    box-shadow: 0 0 3px rgba(0, 0, 0, 0.3) if($important, !important, null);\n}\n@mixin materialShadowMediumLarge($important: false, $opacity: 0.6) {\n    box-shadow: 0 0 25px rgba(0, 0, 0, $opacity) if($important, !important, null);\n}\n@mixin materialScrollbar() {\n    &::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\n        border-radius: 10px;\n        background-color: transparent;\n    }\n    &::-webkit-scrollbar {\n        height: 10px;\n        background-color: transparent;\n    }\n    &::-webkit-scrollbar-thumb {\n        max-width: 20px;\n        border-radius: 10px;\n        // -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n        background-color: var(--primary);\n    }\n}\n@mixin removeDefaultFocus() {\n    outline: none;\n}\n@mixin setGlobalKeyboardFocus($mode: 'outline') {\n    //respect element border radius\n    @include removeDefaultFocus();\n    @if $mode== 'outline' {\n        outline: var(--focusWidth) solid var(--palette-primary-300);\n        outline-offset: 2px;\n    } @else if $mode== 'border' {\n        border: var(--focusWidth) solid var(--palette-primary-300);\n    }\n}\n// Apply the content styles in contrast mode. This is just enough contrast to be WCAG complient ---\n// not a high-contrast mode.\n//\n// Call without arguments for use in encapsulated component styles, e.g.,\n//     @include contrastMode {\n//         // Styles to apply in contrast mode\n//     }\n// To us in global context, pass 'global' as first argument, e.g.,\n//     @include contrastMode(global) { /* ... */ }\n@mixin contrastMode($scope: encapsulated) {\n    $contrastModeSelector: 'body.es-contrast-mode';\n    @if $scope == encapsulated {\n        :host-context(#{$contrastModeSelector}) & {\n            @content;\n        }\n    } @else if $scope == global {\n        #{if(&, '#{$contrastModeSelector} &', $contrastModeSelector)} {\n            @content;\n        }\n    } @else {\n        @error \"Invalid scope #{$scope}.\";\n    }\n}\n@mixin blurImage($blurStrength: 25px) {\n    position: absolute;\n    left: -$blurStrength * 2;\n    top: -$blurStrength * 2;\n    width: calc(100% + #{$blurStrength * 4});\n    height: calc(100% + #{$blurStrength * 4});\n    z-index: 0;\n    overflow: hidden;\n    filter: blur($blurStrength);\n    object-fit: cover;\n    opacity: 0.7;\n}\n","$primary: var(--primary);\n$primaryMediumLight: var(--palette-primary-200);\n$primaryLight: var(--palette-primary-100);\n$primaryComplementary: var(--accent);\n$primaryDark: var(--palette-primary-900);\n$textOnPrimary: var(--light-primary-text);\n$textOnPrimaryLight: rgba(var(--light-primary-text), 0.75);\n$textPrimary: var(--palette-foreground-text);\n$workspaceTopBarBackground: #383838;\n$workspaceTopBarFontColor: #fff;\n","/**\n    declarations of dynamic css variabled\n    will only be included once via angular to prevent duplicate :root entries\n */\n:root {\n    --mainnavHeight: 70px;\n    // The updated height of the main nav panel if updated.\n    //\n    // Usually this will be the same value as --mainnavHeight. For custom navigation bars that\n    // change their height when scrolling, this value will indicate the current height. Note that it\n    // usually is sensible to use --mainnavHeight instead of this value for scrolling content to\n    // prevent stuttering when the navigation bar is expanded or collapsed.\n    --mainnavCurrentHeight: var(--mainnavHeight);\n}\n\n@import 'projects/edu-sharing-ui/assets/scss/variables';\n","/**\n    declarations of dynamic css variabled\n    will only be included once via angular to prevent duplicate :root entries\n */\n:root {\n    --primary: var(--palette-primary-500);\n    --warning: #cd2457;\n    --tableIconSize: 38px;\n    --textLight: #585858;\n    --textMediumLight: #888;\n    --textMain: #383838;\n    --cardWidth: 240px;\n    --colorStatusPositive: #40bf8e;\n    --colorStatusNegative: var(--warning);\n    --colorStarActive: #ba7c00;\n    --nodeVirtualColor: #42ca8d;\n    --nodeVirtualColorLight: #b8fcdd;\n    --transitionNormal: 0.2s;\n    --focusWidth: 2px;\n    --fontSizeXSmall: 85%;\n    --mobileWidth: 700px;\n    --mobileStage: 100px;\n    --itemSelectedTextColor: var(--palette-primary-700);\n    --listItemSelectedBackground: var(--palette-primary-50);\n    --listItemSelectedBackgroundEffect: linear-gradient(\n            to right,\n            var(--primary) 0,\n            var(--primary) 5px,\n            var(--palette-primary-50) 5px,\n            var(--palette-primary-50) 5px\n        )\n        no-repeat;\n}\n","// used to circumvent node sass issue: https://github.com/sass/node-sass/issues/2251\n@function rgb($r, $g: null, $b: null ) {\n  @if ($g == null) {\n    @return unquote(\"#{$r}\");\n  }\n\n  @if ($g and $b) {\n    @return unquote(\"#{$r}, #{$g}, #{$b}\");\n  }\n\n  @error \"wrong number of arguments\";\n}\n\n// used to circumvent node sass issue: https://github.com/sass/node-sass/issues/2251\n@function rgba($r, $g, $b: null, $a: null ) {\n  @if ($b == null) {\n    @return unquote(\"#{$r}, #{$g}\");\n  }\n\n  @if ($b and $a) {\n    @return unquote(\"#{$r}, #{$g}, #{$b}, #{$a}\");\n  }\n\n  @error \"wrong number of arguments\";\n}\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n@mixin root($varMap: null) {\n  @at-root :root {\n    @each $varName, $varValue in $varMap {\n      @if (type_of($varValue)==string) {\n        #{$varName}: $varValue // to prevent quotes interpolation\n      } @else {\n        #{$varName}: #{$varValue}\n      }\n    }\n  }\n}\n\n@function strip-variable($color) {\n  $var: $color;\n  @if (str-index($var, \"rgba(\")) {\n    $var: str-replace($var, \"rgba(\", \"\");\n  }\n  @if (str-index($var, \"rgb(\")) {\n    $var: str-replace($var, \"rgb(\", \"\");\n  }\n  @if (str-index($var, \"var(\")) {\n    $var: str-replace($var, \")\", \"\"); // remove excess \")\"\n    $var: $var + \")\";\n  }\n  @return $var;\n}\n","@use \"@angular/material\" as mat;\n@use \"public-color-util\";\n\n$dark-theme-selector: \".isDarkTheme\" !default;\n$light-theme-selector: \".isLightTheme\" !default;\n\n$dark-primary-text-no-rgb: 0, 0, 0, 0.87;\n$dark-secondary-text-no-rgb: 0, 0, 0, 0.54;\n$dark-disabled-text-no-rgb: 0, 0, 0, 0.38;\n$dark-dividers-no-rgb: 0, 0, 0, 0.12;\n$dark-focused-no-rgb: 0, 0, 0, 0.12;\n$light-primary-text-no-rgb: 255, 255, 255, 1;\n$light-secondary-text-no-rgb: 255, 255, 255, 0.7;\n$light-disabled-text-no-rgb: 255, 255, 255, 0.5;\n$light-dividers-no-rgb: 255, 255, 255, 0.12;\n$light-focused-no-rgb: 255, 255, 255, 0.12;\n\n$text:\n        ( --dark-primary-text-no-rgb: $dark-primary-text-no-rgb,\n          --dark-secondary-text-no-rgb: $dark-secondary-text-no-rgb,\n          --dark-accent-text-no-rgb: $dark-primary-text-no-rgb,\n          --dark-warn-text-no-rgb: $dark-primary-text-no-rgb,\n          --dark-disabled-text-no-rgb: $dark-disabled-text-no-rgb,\n          --dark-dividers-no-rgb: $dark-dividers-no-rgb,\n          --dark-focused-no-rgb: $dark-focused-no-rgb,\n          --light-primary-text-no-rgb: $light-primary-text-no-rgb,\n          --light-secondary-text-no-rgb: $light-secondary-text-no-rgb,\n          --light-accent-text-no-rgb: $light-primary-text-no-rgb,\n          --light-warn-text-no-rgb: $light-primary-text-no-rgb,\n          --light-disabled-text-no-rgb: $light-disabled-text-no-rgb,\n          --light-dividers-no-rgb: $light-dividers-no-rgb,\n          --light-focused-no-rgb: $light-focused-no-rgb,\n          --dark-primary-text: rgba(var(--dark-primary-text-no-rgb)),\n          --dark-secondary-text: rgba(var(--dark-secondary-text-no-rgb)),\n          --dark-accent-text: rgba(var(--dark-accent-text-no-rgb)),\n          --dark-warn-text: rgba(var(--dark-warn-text-no-rgb)),\n          --dark-disabled-text: rgba(var(--dark-disabled-text-no-rgb)),\n          --dark-dividers: rgba(var(--dark-dividers-no-rgb)),\n          --dark-focused: rgba(var(--dark-focused-no-rgb)),\n          --light-primary-text: rgba(var(--light-primary-text-no-rgb)),\n          --light-secondary-text: rgba(var(--light-secondary-text-no-rgb)),\n          --light-accent-text: rgba(var(--light-accent-text-no-rgb)),\n          --light-warn-text: rgba(var(--light-warn-text-no-rgb)),\n          --light-disabled-text: rgba(var(--light-disabled-text-no-rgb)),\n          --light-dividers: rgba(var(--light-dividers-no-rgb)),\n          --light-focused: rgba(var(--light-focused-no-rgb))\n          ) !default;\n\n$default-light-theme:\n  (\n    // PRIMARY\n\n    --palette-primary-50-no-rgb: public-color-util.hex-to-rgb(#e1f5fe),\n    --palette-primary-100-no-rgb: public-color-util.hex-to-rgb(#b3e5fc),\n    //lighter\n    --palette-primary-200-no-rgb: public-color-util.hex-to-rgb(#81d4fa),\n    --palette-primary-300-no-rgb: public-color-util.hex-to-rgb(#4fc3f7),\n    --palette-primary-400-no-rgb: public-color-util.hex-to-rgb(#29b6f6),\n    --palette-primary-500-no-rgb: public-color-util.hex-to-rgb(#03a9f4),\n    //default\n    --palette-primary-600-no-rgb: public-color-util.hex-to-rgb(#039be5),\n    --palette-primary-700-no-rgb: public-color-util.hex-to-rgb(#0288d1),\n    //darker\n    --palette-primary-800-no-rgb: public-color-util.hex-to-rgb(#0277bd),\n    --palette-primary-900-no-rgb: public-color-util.hex-to-rgb(#01579b),\n    --palette-primary-A100-no-rgb: public-color-util.hex-to-rgb(#80d8ff),\n    --palette-primary-A200-no-rgb: public-color-util.hex-to-rgb(#40c4ff),\n    --palette-primary-A400-no-rgb: public-color-util.hex-to-rgb(#00b0ff),\n    --palette-primary-A700-no-rgb: public-color-util.hex-to-rgb(#0091ea),\n    \n    --palette-primary-contrast-50-no-rgb: var(--dark-primary-text-no-rgb),\n    --palette-primary-contrast-100-no-rgb: var(--dark-primary-text-no-rgb),\n    --palette-primary-contrast-200-no-rgb: var(--dark-primary-text-no-rgb),\n    --palette-primary-contrast-300-no-rgb: var(--dark-primary-text-no-rgb),\n    --palette-primary-contrast-400-no-rgb: var(--dark-primary-text-no-rgb),\n    --palette-primary-contrast-500-no-rgb: var(--light-primary-text-no-rgb),\n    --palette-primary-contrast-600-no-rgb: var(--light-primary-text-no-rgb),\n    --palette-primary-contrast-700-no-rgb: var(--light-primary-text-no-rgb),\n    --palette-primary-contrast-800-no-rgb: var(--light-primary-text-no-rgb),\n    --palette-primary-contrast-900-no-rgb: var(--light-primary-text-no-rgb),\n    --palette-primary-contrast-A100-no-rgb: var(--light-primary-text-no-rgb),\n    --palette-primary-contrast-A200-no-rgb: var(--light-primary-text-no-rgb),\n    --palette-primary-contrast-A400-no-rgb: var(--light-primary-text-no-rgb),\n    --palette-primary-contrast-A700-no-rgb: var(--light-primary-text-no-rgb),\n\n    --palette-primary-50: var(--palette-primary-50-rgb),\n    --palette-primary-100: var(--palette-primary-100-rgb),\n    //lighter\n    --palette-primary-200: var(--palette-primary-200-rgb),\n    --palette-primary-300: var(--palette-primary-300-rgb),\n    --palette-primary-400: var(--palette-primary-400-rgb),\n    --palette-primary-500: var(--palette-primary-500-rgb),\n    //default\n    --palette-primary-600: var(--palette-primary-600-rgb),\n    --palette-primary-700: var(--palette-primary-700-rgb),\n    //darker\n    --palette-primary-800: var(--palette-primary-800-rgb),\n    --palette-primary-900: var(--palette-primary-900-rgb),\n    --palette-primary-A100: var(--palette-primary-A100-rgb),\n    --palette-primary-A200: var(--palette-primary-A200-rgb),\n    --palette-primary-A400: var(--palette-primary-A400-rgb),\n    --palette-primary-A700: var(--palette-primary-A700-rgb),\n    --palette-primary-contrast-50: var(--palette-primary-contrast-50-rgb),\n    --palette-primary-contrast-100: var(--palette-primary-contrast-100-rgb),\n    --palette-primary-contrast-200: var(--palette-primary-contrast-200-rgb),\n    --palette-primary-contrast-300: var(--palette-primary-contrast-300-rgb),\n    --palette-primary-contrast-400: var(--palette-primary-contrast-400-rgb),\n    --palette-primary-contrast-500: var(--palette-primary-contrast-500-rgb),\n    --palette-primary-contrast-600: var(--palette-primary-contrast-600-rgb),\n    --palette-primary-contrast-700: var(--palette-primary-contrast-700-rgb),\n    --palette-primary-contrast-800: var(--palette-primary-contrast-800-rgb),\n    --palette-primary-contrast-900: var(--palette-primary-contrast-900-rgb),\n    --palette-primary-contrast-A100: var(--palette-primary-contrast-A100-rgb),\n    --palette-primary-contrast-A200: var(--palette-primary-contrast-A200-rgb),\n    --palette-primary-contrast-A400: var(--palette-primary-contrast-A400-rgb),\n    --palette-primary-contrast-A700: var(--palette-primary-contrast-A700-rgb),\n    // ACCENT\n    \n    --palette-accent-50-no-rgb: public-color-util.hex-to-rgb(#fce4ec),\n    --palette-accent-100-no-rgb: public-color-util.hex-to-rgb(#f8bbd0),\n    --palette-accent-200-no-rgb: public-color-util.hex-to-rgb(#f48fb1),\n    --palette-accent-300-no-rgb: public-color-util.hex-to-rgb(#f06292),\n    --palette-accent-400-no-rgb: public-color-util.hex-to-rgb(#ec407a),\n    --palette-accent-500-no-rgb: public-color-util.hex-to-rgb(#e91e63),\n    --palette-accent-600-no-rgb: public-color-util.hex-to-rgb(#d81b60),\n    --palette-accent-700-no-rgb: public-color-util.hex-to-rgb(#c2185b),\n    --palette-accent-800-no-rgb: public-color-util.hex-to-rgb(#ad1457),\n    --palette-accent-900-no-rgb: public-color-util.hex-to-rgb(#880e4f),\n    --palette-accent-A100-no-rgb: public-color-util.hex-to-rgb(#ff80ab),\n    //lighter\n    --palette-accent-A200-no-rgb: public-color-util.hex-to-rgb(#ff4081),\n    //default\n    --palette-accent-A400-no-rgb: public-color-util.hex-to-rgb(#f50057),\n    //darker\n    --palette-accent-A700-no-rgb: public-color-util.hex-to-rgb(#c51162),\n\n    --palette-accent-contrast-50-no-rgb: var(--dark-accent-text-no-rgb),\n    --palette-accent-contrast-100-no-rgb: var(--dark-accent-text-no-rgb),\n    --palette-accent-contrast-200-no-rgb: var(--dark-accent-text-no-rgb),\n    --palette-accent-contrast-300-no-rgb: var(--dark-accent-text-no-rgb),\n    --palette-accent-contrast-400-no-rgb: var(--dark-accent-text-no-rgb),\n    --palette-accent-contrast-500-no-rgb: var(--light-accent-text-no-rgb),\n    --palette-accent-contrast-600-no-rgb: var(--light-accent-text-no-rgb),\n    --palette-accent-contrast-700-no-rgb: var(--light-accent-text-no-rgb),\n    --palette-accent-contrast-800-no-rgb: var(--light-accent-text-no-rgb),\n    --palette-accent-contrast-900-no-rgb: var(--light-accent-text-no-rgb),\n    --palette-accent-contrast-A100-no-rgb: var(--light-accent-text-no-rgb),\n    --palette-accent-contrast-A200-no-rgb: var(--light-accent-text-no-rgb),\n    --palette-accent-contrast-A400-no-rgb: var(--light-accent-text-no-rgb),\n    --palette-accent-contrast-A700-no-rgb: var(--light-accent-text-no-rgb),\n\n    --palette-accent-50: var(--palette-accent-50-rgb),\n    --palette-accent-100: var(--palette-accent-100-rgb),\n    --palette-accent-200: var(--palette-accent-200-rgb),\n    --palette-accent-300: var(--palette-accent-300-rgb),\n    --palette-accent-400: var(--palette-accent-400-rgb),\n    --palette-accent-500: var(--palette-accent-500-rgb),\n    --palette-accent-600: var(--palette-accent-600-rgb),\n    --palette-accent-700: var(--palette-accent-700-rgb),\n    --palette-accent-800: var(--palette-accent-800-rgb),\n    --palette-accent-900: var(--palette-accent-900-rgb),\n    --palette-accent-A100: var(--palette-accent-A100-rgb),\n    --palette-accent-A200: var(--palette-accent-A200-rgb),\n    --palette-accent-A400: var(--palette-accent-A400-rgb),\n    --palette-accent-A700: var(--palette-accent-A700-rgb),\n    --palette-accent-contrast-50: var(--palette-accent-contrast-50-rgb),\n    --palette-accent-contrast-100: var(--palette-accent-contrast-100-rgb),\n    --palette-accent-contrast-200: var(--palette-accent-contrast-200-rgb),\n    --palette-accent-contrast-300: var(--palette-accent-contrast-300-rgb),\n    --palette-accent-contrast-400: var(--palette-accent-contrast-400-rgb),\n    --palette-accent-contrast-500: var(--palette-accent-contrast-500-rgb),\n    --palette-accent-contrast-600: var(--palette-accent-contrast-600-rgb),\n    --palette-accent-contrast-700: var(--palette-accent-contrast-700-rgb),\n    --palette-accent-contrast-800: var(--palette-accent-contrast-800-rgb),\n    --palette-accent-contrast-900: var(--palette-accent-contrast-900-rgb),\n    --palette-accent-contrast-A100: var(--palette-accent-contrast-A100-rgb),\n    --palette-accent-contrast-A200: var(--palette-accent-contrast-A200-rgb),\n    --palette-accent-contrast-A400: var(--palette-accent-contrast-A400-rgb),\n    --palette-accent-contrast-A700: var(--palette-accent-contrast-A700-rgb),\n    // WARN\n    --palette-warn-50-no-rgb: public-color-util.hex-to-rgb(#ffebee),\n    --palette-warn-100-no-rgb: public-color-util.hex-to-rgb(#ffcdd2),\n    --palette-warn-200-no-rgb: public-color-util.hex-to-rgb(#ef9a9a),\n    --palette-warn-300-no-rgb: public-color-util.hex-to-rgb(#e57373),\n    --palette-warn-400-no-rgb: public-color-util.hex-to-rgb(#ef5350),\n    --palette-warn-500-no-rgb: public-color-util.hex-to-rgb(#f44336),\n    --palette-warn-600-no-rgb: public-color-util.hex-to-rgb(#e53935),\n    --palette-warn-700-no-rgb: public-color-util.hex-to-rgb(#d32f2f),\n    --palette-warn-800-no-rgb: public-color-util.hex-to-rgb(#c62828),\n    --palette-warn-900-no-rgb: public-color-util.hex-to-rgb(#b71c1c),\n    --palette-warn-A100-no-rgb: public-color-util.hex-to-rgb(#ff8a80),\n    --palette-warn-A200-no-rgb: public-color-util.hex-to-rgb(#ff5252),\n    --palette-warn-A400-no-rgb: public-color-util.hex-to-rgb(#ff1744),\n    --palette-warn-A700-no-rgb: public-color-util.hex-to-rgb(#d50000),\n\n    --palette-warn-contrast-50-no-rgb: var(--dark-warn-text-no-rgb),\n    --palette-warn-contrast-100-no-rgb: var(--dark-warn-text-no-rgb),\n    --palette-warn-contrast-200-no-rgb: var(--dark-warn-text-no-rgb),\n    --palette-warn-contrast-300-no-rgb: var(--dark-warn-text-no-rgb),\n    --palette-warn-contrast-400-no-rgb: var(--dark-warn-text-no-rgb),\n    --palette-warn-contrast-500-no-rgb: var(--light-warn-text-no-rgb),\n    --palette-warn-contrast-600-no-rgb: var(--light-warn-text-no-rgb),\n    --palette-warn-contrast-700-no-rgb: var(--light-warn-text-no-rgb),\n    --palette-warn-contrast-800-no-rgb: var(--light-warn-text-no-rgb),\n    --palette-warn-contrast-900-no-rgb: var(--light-warn-text-no-rgb),\n    --palette-warn-contrast-A100-no-rgb: var(--light-warn-text-no-rgb),\n    --palette-warn-contrast-A200-no-rgb: var(--light-warn-text-no-rgb),\n    --palette-warn-contrast-A400-no-rgb: var(--light-warn-text-no-rgb),\n    --palette-warn-contrast-A700-no-rgb: var(--light-warn-text-no-rgb),\n\n    --palette-warn-50: var(--palette-warn-50-rgb),\n    --palette-warn-100: var(--palette-warn-100-rgb),\n    --palette-warn-200: var(--palette-warn-200-rgb),\n    --palette-warn-300: var(--palette-warn-300-rgb),\n    --palette-warn-400: var(--palette-warn-400-rgb),\n    --palette-warn-500: var(--palette-warn-500-rgb),\n    --palette-warn-600: var(--palette-warn-600-rgb),\n    --palette-warn-700: var(--palette-warn-700-rgb),\n    --palette-warn-800: var(--palette-warn-800-rgb),\n    --palette-warn-900: var(--palette-warn-900-rgb),\n    --palette-warn-A100: var(--palette-warn-A100-rgb),\n    --palette-warn-A200: var(--palette-warn-A200-rgb),\n    --palette-warn-A400: var(--palette-warn-A400-rgb),\n    --palette-warn-A700: var(--palette-warn-A700-rgb),\n    --palette-warn-contrast-50: var(--palette-warn-contrast-50-rgb),\n    --palette-warn-contrast-100: var(--palette-warn-contrast-100-rgb),\n    --palette-warn-contrast-200: var(--palette-warn-contrast-200-rgb),\n    --palette-warn-contrast-300: var(--palette-warn-contrast-300-rgb),\n    --palette-warn-contrast-400: var(--palette-warn-contrast-400-rgb),\n    --palette-warn-contrast-500: var(--palette-warn-contrast-500-rgb),\n    --palette-warn-contrast-600: var(--palette-warn-contrast-600-rgb),\n    --palette-warn-contrast-700: var(--palette-warn-contrast-700-rgb),\n    --palette-warn-contrast-800: var(--palette-warn-contrast-800-rgb),\n    --palette-warn-contrast-900: var(--palette-warn-contrast-900-rgb),\n    --palette-warn-contrast-A100: var(--palette-warn-contrast-A100-rgb),\n    --palette-warn-contrast-A200: var(--palette-warn-contrast-A200-rgb),\n    --palette-warn-contrast-A400: var(--palette-warn-contrast-A400-rgb),\n    --palette-warn-contrast-A700: var(--palette-warn-contrast-A700-rgb),\n    \n    //RGB-map\n    // PRIMARY\n    --palette-primary-50-rgb: rgb(var(--palette-primary-50-no-rgb)),\n    --palette-primary-100-rgb: rgb(var(--palette-primary-100-no-rgb)),\n    //lighter\n    --palette-primary-200-rgb: rgb(var(--palette-primary-200-no-rgb)),\n    --palette-primary-300-rgb: rgb(var(--palette-primary-300-no-rgb)),\n    --palette-primary-400-rgb: rgb(var(--palette-primary-400-no-rgb)),\n    --palette-primary-500-rgb: rgb(var(--palette-primary-500-no-rgb)),\n    //default\n    --palette-primary-600-rgb: rgb(var(--palette-primary-600-no-rgb)),\n    --palette-primary-700-rgb: rgb(var(--palette-primary-700-no-rgb)),\n    //darker\n    --palette-primary-800-rgb: rgb(var(--palette-primary-800-no-rgb)),\n    --palette-primary-900-rgb: rgb(var(--palette-primary-900-no-rgb)),\n    --palette-primary-A100-rgb: rgb(var(--palette-primary-A100-no-rgb)),\n    --palette-primary-A200-rgb: rgb(var(--palette-primary-A200-no-rgb)),\n    --palette-primary-A400-rgb: rgb(var(--palette-primary-A400-no-rgb)),\n    --palette-primary-A700-rgb: rgb(var(--palette-primary-A700-no-rgb)),\n    --palette-primary-contrast-50-rgb: var(--dark-primary-text),\n    --palette-primary-contrast-100-rgb: var(--dark-primary-text),\n    --palette-primary-contrast-200-rgb: var(--dark-primary-text),\n    --palette-primary-contrast-300-rgb: var(--dark-primary-text),\n    --palette-primary-contrast-400-rgb: var(--dark-primary-text),\n    --palette-primary-contrast-500-rgb: var(--light-primary-text),\n    --palette-primary-contrast-600-rgb: var(--light-primary-text),\n    --palette-primary-contrast-700-rgb: var(--light-primary-text),\n    --palette-primary-contrast-800-rgb: var(--light-primary-text),\n    --palette-primary-contrast-900-rgb: var(--light-primary-text),\n    --palette-primary-contrast-A100-rgb: var(--light-primary-text),\n    --palette-primary-contrast-A200-rgb: var(--light-primary-text),\n    --palette-primary-contrast-A400-rgb: var(--light-primary-text),\n    --palette-primary-contrast-A700-rgb: var(--light-primary-text),\n    // ACCENT\n    --palette-accent-50-rgb: rgb(var(--palette-accent-50-no-rgb)),\n    --palette-accent-100-rgb: rgb(var(--palette-accent-100-no-rgb)),\n    --palette-accent-200-rgb: rgb(var(--palette-accent-200-no-rgb)),\n    --palette-accent-300-rgb: rgb(var(--palette-accent-300-no-rgb)),\n    --palette-accent-400-rgb: rgb(var(--palette-accent-400-no-rgb)),\n    --palette-accent-500-rgb: rgb(var(--palette-accent-500-no-rgb)),\n    --palette-accent-600-rgb: rgb(var(--palette-accent-600-no-rgb)),\n    --palette-accent-700-rgb: rgb(var(--palette-accent-700-no-rgb)),\n    --palette-accent-800-rgb: rgb(var(--palette-accent-800-no-rgb)),\n    --palette-accent-900-rgb: rgb(var(--palette-accent-900-no-rgb)),\n    --palette-accent-A100-rgb: rgb(var(--palette-accent-A100)),\n    //lighter\n    --palette-accent-A200-rgb: rgb(var(--palette-accent-A200)),\n    //default\n    --palette-accent-A400-rgb: rgb(var(--palette-accent-A400)),\n    //darker\n    --palette-accent-A700-rgb: rgb(var(--palette-accent-A700)),\n    --palette-accent-contrast-50-rgb: var(--dark-accent-text),\n    --palette-accent-contrast-100-rgb: var(--dark-accent-text),\n    --palette-accent-contrast-200-rgb: var(--dark-accent-text),\n    --palette-accent-contrast-300-rgb: var(--dark-accent-text),\n    --palette-accent-contrast-400-rgb: var(--dark-accent-text),\n    --palette-accent-contrast-500-rgb: var(--light-accent-text),\n    --palette-accent-contrast-600-rgb: var(--light-accent-text),\n    --palette-accent-contrast-700-rgb: var(--light-accent-text),\n    --palette-accent-contrast-800-rgb: var(--light-accent-text),\n    --palette-accent-contrast-900-rgb: var(--light-accent-text),\n    --palette-accent-contrast-A100-rgb: var(--light-accent-text),\n    --palette-accent-contrast-A200-rgb: var(--light-accent-text),\n    --palette-accent-contrast-A400-rgb: var(--light-accent-text),\n    --palette-accent-contrast-A700-rgb: var(--light-accent-text),\n    // WARN\n    --palette-warn-50-rgb: rgb(var(--palette-warn-50-no-rgb)),\n    --palette-warn-100-rgb: rgb(var(--palette-warn-100-no-rgb)),\n    --palette-warn-200-rgb: rgb(var(--palette-warn-200-no-rgb)),\n    --palette-warn-300-rgb: rgb(var(--palette-warn-300-no-rgb)),\n    --palette-warn-400-rgb: rgb(var(--palette-warn-400-no-rgb)),\n    --palette-warn-500-rgb: rgb(var(--palette-warn-500-no-rgb)),\n    --palette-warn-600-rgb: rgb(var(--palette-warn-600-no-rgb)),\n    --palette-warn-700-rgb: rgb(var(--palette-warn-700-no-rgb)),\n    --palette-warn-800-rgb: rgb(var(--palette-warn-800-no-rgb)),\n    --palette-warn-900-rgb: rgb(var(--palette-warn-900-no-rgb)),\n    --palette-warn-A100-rgb: rgb(var(--palette-warn-A100-no-rgb)),\n    --palette-warn-A200-rgb: rgb(var(--palette-warn-A200-no-rgb)),\n    --palette-warn-A400-rgb: rgb(var(--palette-warn-A400-no-rgb)),\n    --palette-warn-A700-rgb: rgb(var(--palette-warn-A700-no-rgb)),\n    --palette-warn-contrast-50-rgb: var(--dark-warn-text),\n    --palette-warn-contrast-100-rgb: var(--dark-warn-text),\n    --palette-warn-contrast-200-rgb: var(--dark-warn-text),\n    --palette-warn-contrast-300-rgb: var(--dark-warn-text),\n    --palette-warn-contrast-400-rgb: var(--dark-warn-text),\n    --palette-warn-contrast-500-rgb: var(--light-warn-text),\n    --palette-warn-contrast-600-rgb: var(--light-warn-text),\n    --palette-warn-contrast-700-rgb: var(--light-warn-text),\n    --palette-warn-contrast-800-rgb: var(--light-warn-text),\n    --palette-warn-contrast-900-rgb: var(--light-warn-text),\n    --palette-warn-contrast-A100-rgb: var(--light-warn-text),\n    --palette-warn-contrast-A200-rgb: var(--light-warn-text),\n    --palette-warn-contrast-A400-rgb: var(--light-warn-text),\n    --palette-warn-contrast-A700-rgb: var(--light-warn-text)\n) !default;\n\n$palette-primary: (\n  50: var(--palette-primary-50),\n  100: var(--palette-primary-100),\n  200: var(--palette-primary-200),\n  300: var(--palette-primary-300),\n  400: var(--palette-primary-400),\n  500: var(--palette-primary-500),\n  600: var(--palette-primary-600),\n  700: var(--palette-primary-700),\n  800: var(--palette-primary-800),\n  900: var(--palette-primary-900),\n  A100: var(--palette-primary-A100),\n  A200: var(--palette-primary-A200),\n  A400: var(--palette-primary-A400),\n  A700: var(--palette-primary-A700),\n  contrast: (\n    50: var(--palette-primary-contrast-50),\n    100: var(--palette-primary-contrast-100),\n    200: var(--palette-primary-contrast-200),\n    300: var(--palette-primary-contrast-300),\n    400: var(--palette-primary-contrast-400),\n    500: var(--palette-primary-contrast-500),\n    600: var(--palette-primary-contrast-600),\n    700: var(--palette-primary-contrast-700),\n    800: var(--palette-primary-contrast-800),\n    900: var(--palette-primary-contrast-900),\n    A100: var(--palette-primary-contrast-A100),\n    A200: var(--palette-primary-contrast-A200),\n    A400: var(--palette-primary-contrast-A400),\n    A700: var(--palette-primary-contrast-A700),\n  ),\n) !default;\n\n$palette-primary-no-rgb: (\n  50: var(--palette-primary-50-no-rgb),\n  100: var(--palette-primary-100-no-rgb),\n  200: var(--palette-primary-200-no-rgb),\n  300: var(--palette-primary-300-no-rgb),\n  400: var(--palette-primary-400-no-rgb),\n  500: var(--palette-primary-500-no-rgb),\n  600: var(--palette-primary-600-no-rgb),\n  700: var(--palette-primary-700-no-rgb),\n  800: var(--palette-primary-800-no-rgb),\n  900: var(--palette-primary-900-no-rgb),\n  A100: var(--palette-primary-A100-no-rgb),\n  A200: var(--palette-primary-A200-no-rgb),\n  A400: var(--palette-primary-A400-no-rgb),\n  A700: var(--palette-primary-A700-no-rgb),\n  contrast: (\n    50: var(--palette-primary-contrast-50-no-rgb),\n    100: var(--palette-primary-contrast-100-no-rgb),\n    200: var(--palette-primary-contrast-200-no-rgb),\n    300: var(--palette-primary-contrast-300-no-rgb),\n    400: var(--palette-primary-contrast-400-no-rgb),\n    500: var(--palette-primary-contrast-500-no-rgb),\n    600: var(--palette-primary-contrast-600-no-rgb),\n    700: var(--palette-primary-contrast-700-no-rgb),\n    800: var(--palette-primary-contrast-800-no-rgb),\n    900: var(--palette-primary-contrast-900b-no-rgb),\n    A100: var(--palette-primary-contrast-A100-no-rgb),\n    A200: var(--palette-primary-contrast-A200-no-rgb),\n    A400: var(--palette-primary-contrast-A400-no-rgb),\n    A700: var(--palette-primary-contrast-A700-no-rgb),\n  ),\n) !default;\n\n$palette-accent: (\n  50: var(--palette-accent-50),\n  100: var(--palette-accent-100),\n  200: var(--palette-accent-200),\n  300: var(--palette-accent-300),\n  400: var(--palette-accent-400),\n  500: var(--palette-accent-500),\n  600: var(--palette-accent-600),\n  700: var(--palette-accent-700),\n  800: var(--palette-accent-800),\n  900: var(--palette-accent-900),\n  A100: var(--palette-accent-A100),\n  A200: var(--palette-accent-A200),\n  A400: var(--palette-accent-A400),\n  A700: var(--palette-accent-A700),\n  contrast: (\n    50: var(--palette-accent-contrast-50),\n    100: var(--palette-accent-contrast-100),\n    200: var(--palette-accent-contrast-200),\n    300: var(--palette-accent-contrast-300),\n    400: var(--palette-accent-contrast-400),\n    500: var(--palette-accent-contrast-500),\n    600: var(--palette-accent-contrast-600),\n    700: var(--palette-accent-contrast-700),\n    800: var(--palette-accent-contrast-800),\n    900: var(--palette-accent-contrast-900),\n    A100: var(--palette-accent-contrast-A100),\n    A200: var(--palette-accent-contrast-A200),\n    A400: var(--palette-accent-contrast-A400),\n    A700: var(--palette-accent-contrast-A700),\n  ),\n) !default;\n\n$palette-accent-no-rgb: (\n  50: var(--palette-accent-50-no-rgb),\n  100: var(--palette-accent-100-no-rgb),\n  200: var(--palette-accent-200-no-rgb),\n  300: var(--palette-accent-300-no-rgb),\n  400: var(--palette-accent-400-no-rgb),\n  500: var(--palette-accent-500-no-rgb),\n  600: var(--palette-accent-600-no-rgb),\n  700: var(--palette-accent-700-no-rgb),\n  800: var(--palette-accent-800-no-rgb),\n  900: var(--palette-accent-900-no-rgb),\n  A100: var(--palette-accent-A100-no-rgb),\n  A200: var(--palette-accent-A200-no-rgb),\n  A400: var(--palette-accent-A400-no-rgb),\n  A700: var(--palette-accent-A700-no-rgb),\n  contrast: (\n    50: var(--palette-accent-contrast-50-no-rgb),\n    100: var(--palette-accent-contrast-100-no-rgb),\n    200: var(--palette-accent-contrast-200-no-rgb),\n    300: var(--palette-accent-contrast-300-no-rgb),\n    400: var(--palette-accent-contrast-400-no-rgb),\n    500: var(--palette-accent-contrast-500-no-rgb),\n    600: var(--palette-accent-contrast-600-no-rgb),\n    700: var(--palette-accent-contrast-700-no-rgb),\n    800: var(--palette-accent-contrast-800-no-rgb),\n    900: var(--palette-accent-contrast-900b-no-rgb),\n    A100: var(--palette-accent-contrast-A100-no-rgb),\n    A200: var(--palette-accent-contrast-A200-no-rgb),\n    A400: var(--palette-accent-contrast-A400-no-rgb),\n    A700: var(--palette-accent-contrast-A700-no-rgb),\n  ),\n) !default;\n\n$palette-warn: (\n  50: var(--palette-warn-50),\n  100: var(--palette-warn-100),\n  200: var(--palette-warn-200),\n  300: var(--palette-warn-300),\n  400: var(--palette-warn-400),\n  500: var(--palette-warn-500),\n  600: var(--palette-warn-600),\n  700: var(--palette-warn-700),\n  800: var(--palette-warn-800),\n  900: var(--palette-warn-900),\n  A100: var(--palette-warn-A100),\n  A200: var(--palette-warn-A200),\n  A400: var(--palette-warn-A400),\n  A700: var(--palette-warn-A700),\n  contrast: (\n    50: var(--palette-warn-contrast-50),\n    100: var(--palette-warn-contrast-100),\n    200: var(--palette-warn-contrast-200),\n    300: var(--palette-warn-contrast-300),\n    400: var(--palette-warn-contrast-400),\n    500: var(--palette-warn-contrast-500),\n    600: var(--palette-warn-contrast-600),\n    700: var(--palette-warn-contrast-700),\n    800: var(--palette-warn-contrast-800),\n    900: var(--palette-warn-contrast-900),\n    A100: var(--palette-warn-contrast-A100),\n    A200: var(--palette-warn-contrast-A200),\n    A400: var(--palette-warn-contrast-A400),\n    A700: var(--palette-warn-contrast-A700),\n  ),\n) !default;\n\n$palette-warn-no-rgb: (\n  50: var(--palette-warn-50-no-rgb),\n  100: var(--palette-warn-100-no-rgb),\n  200: var(--palette-warn-200-no-rgb),\n  300: var(--palette-warn-300-no-rgb),\n  400: var(--palette-warn-400-no-rgb),\n  500: var(--palette-warn-500-no-rgb),\n  600: var(--palette-warn-600-no-rgb),\n  700: var(--palette-warn-700-no-rgb),\n  800: var(--palette-warn-800-no-rgb),\n  900: var(--palette-warn-900-no-rgb),\n  A100: var(--palette-warn-A100-no-rgb),\n  A200: var(--palette-warn-A200-no-rgb),\n  A400: var(--palette-warn-A400-no-rgb),\n  A700: var(--palette-warn-A700-no-rgb),\n  contrast: (\n    50: var(--palette-warn-contrast-50-no-rgb),\n    100: var(--palette-warn-contrast-100-no-rgb),\n    200: var(--palette-warn-contrast-200-no-rgb),\n    300: var(--palette-warn-contrast-300-no-rgb),\n    400: var(--palette-warn-contrast-400-no-rgb),\n    500: var(--palette-warn-contrast-500-no-rgb),\n    600: var(--palette-warn-contrast-600-no-rgb),\n    700: var(--palette-warn-contrast-700-no-rgb),\n    800: var(--palette-warn-contrast-800-no-rgb),\n    900: var(--palette-warn-contrast-900-no-rgb),\n    A100: var(--palette-warn-contrast-A100-no-rgb),\n    A200: var(--palette-warn-contrast-A200-no-rgb),\n    A400: var(--palette-warn-contrast-A400-no-rgb),\n    A700: var(--palette-warn-contrast-A700-no-rgb),\n  ),\n) !default;\n\n$contrast-palette: map_get($palette-primary, \"contrast\") !default;\n$contrast-palette-no-rgb: map_get($palette-primary-no-rgb, \"contrast\") !default;\n$contrast-palette-accent: map_get($palette-accent, \"contrast\") !default;\n$contrast-palette-accent-no-rgb: map_get($palette-accent-no-rgb, \"contrast\") !default;\n$contrast-palette-warn: map_get($palette-warn, \"contrast\") !default;\n$contrast-palette-warn-no-rgb: map_get($palette-warn-no-rgb, \"contrast\") !default;\n","@use '@angular/cdk';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include mdc-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n","// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n\n/// Include content under the current selector (&) or the document root if there is no current\n/// selector.\n/// @param {String} $root [html] The default root selector to use when there is no current selector.\n/// @output The given content under the current selector, or root selector if there is no current\n///     selector.\n/// @content Content to output under the current selector, or root selector if there is no current\n///     selector.\n@mixin current-selector-or-root($root: html) {\n  @at-root #{& or $root} {\n    @content;\n  }\n}\n\n/// A version of the standard `map.merge` function that takes a variable number of arguments.\n/// Each argument is merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.merge\n/// @return {Map} The combined result of successively calling map.merge with each parameter.\n@function merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.merge($result, $map);\n  }\n  @return $result;\n}\n\n/// A version of the standard `map.deep-merge` function that takes a variable number of arguments.\n/// Each argument is deep-merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.deep-merge\n/// @return {Map} The combined result of successively calling map.deep-merge with each parameter.\n@function deep-merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.deep-merge($result, $map);\n  }\n  @return $result;\n}\n\n/// Coerces the given value to a list, by converting any non-list value into a single-item list.\n/// This should be used when dealing with user-passed lists of args to avoid confusing errors,\n/// since Sass treats `($x)` as equivalent to `$x`.\n/// @param {Any} $value The value to coerce to a list.\n/// @return {List} The original $value if it was a list, otherwise a single-item list containing\n///     $value.\n@function coerce-to-list($value) {\n  @return if(meta.type-of($value) != 'list', ($value,), $value);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","@use 'sass:map';\n@use '../tokens/m2/mat/option' as tokens-mat-option;\n@use '../tokens/token-utils';\n@use '../style/sass-utils';\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.get-color-tokens($config));\n    }\n\n    .mat-accent {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.private-get-color-palette-color-tokens(map.get($config, accent)));\n    }\n\n    .mat-warn {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.private-get-color-palette-color-tokens(map.get($config, warn)));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $background: theming.get-color-from-palette(map.get($config, background), background);\n  $secondary-text: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include ripple-theme.color($config);\n  @include option-theme.color($config);\n  @include optgroup-theme.color($config);\n  @include pseudo-checkbox-theme.color($config);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include option-theme.typography($config);\n  @include optgroup-theme.typography($config);\n  @include pseudo-checkbox-theme.typography($config);\n  // TODO(mmalerba): add typography mixin for this.\n  // @include ripple-theme.typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include option-theme.density($density-scale);\n  @include optgroup-theme.density($density-scale);\n  // TODO(mmalerba): add density mixins for these.\n  // @include ripple-theme.density($density-scale);\n  // @include pseudo-checkbox-theme.density($density-scale);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/card' as tokens-mat-card;\n@use '../core/tokens/m2/mdc/elevated-card' as tokens-mdc-elevated-card;\n@use '../core/tokens/m2/mdc/outlined-card' as tokens-mdc-outlined-card;\n@use '@material/card/elevated-card-theme' as mdc-elevated-card-theme;\n@use '@material/card/outlined-card-theme' as mdc-outlined-card-theme;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-elevated-card-color-tokens: token-utils.resolve-elevation(\n      tokens-mdc-elevated-card.get-color-tokens($config),\n      container-elevation,\n      container-shadow-color\n  );\n  $mdc-outlined-card-color-tokens: token-utils.resolve-elevation(\n      tokens-mdc-outlined-card.get-color-tokens($config),\n      container-elevation,\n      container-shadow-color,\n  );\n  $mat-card-color-tokens: tokens-mat-card.get-color-tokens($config);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-color-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-color-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-color-tokens);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-elevated-card-typography-tokens: tokens-mdc-elevated-card.get-typography-tokens($config);\n  $mdc-outlined-card-typography-tokens: tokens-mdc-outlined-card.get-typography-tokens($config);\n  $mat-card-typography-tokens: tokens-mat-card.get-typography-tokens($config);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-typography-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-typography-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-elevated-card-density-tokens: tokens-mdc-elevated-card.get-density-tokens($density-scale);\n  $mdc-outlined-card-density-tokens: tokens-mdc-outlined-card.get-density-tokens($density-scale);\n  $mat-card-density-tokens: tokens-mat-card.get-density-tokens($density-scale);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-density-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-density-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    $elevated-card-tokens: map.get($tokens, tokens-mdc-elevated-card.$prefix);\n    // Work around a bug in MDC where the elevation is not resolved to an actual shadow value.\n    $elevated-card-tokens: token-utils.resolve-elevation(\n        $elevated-card-tokens,\n        container-elevation,\n        container-shadow-color\n    );\n    $outlined-card-tokens: map.get($tokens, tokens-mdc-outlined-card.$prefix);\n    // Work around a bug in MDC where the elevation is not resolved to an actual shadow value.\n    $outlined-card-tokens: token-utils.resolve-elevation(\n        $outlined-card-tokens,\n        container-elevation,\n        container-shadow-color\n    );\n    @include mdc-elevated-card-theme.theme($elevated-card-tokens);\n    @include mdc-outlined-card-theme.theme($outlined-card-tokens);\n    @include token-utils.create-token-values(\n        tokens-mat-card.$prefix, map.get($tokens, tokens-mat-card.$prefix));\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/linear-progress' as tokens-mdc-linear-progress;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n@use 'sass:map';\n\n@mixin _palette-styles($config, $palette-name) {\n  $palette-config: map.merge($config, (primary: map.get($config, $palette-name)));\n  $color-tokens: tokens-mdc-linear-progress.get-color-tokens($palette-config);\n\n  // We can't set the `track-color` using `theme`, because it isn't possible for it to use a CSS\n  // variable since MDC's buffer animation works by constructing an SVG string from this color.\n  // We also can't set the `track-color` by creating our own token slot because the track-color\n  // is set in the SVG string in `theme-styles`.\n  @include mdc-linear-progress-theme.theme-styles((\n    // TODO(crisbeto): the buffer color should come from somewhere in MDC, however at the time of\n    // writing, their buffer color is hardcoded to #e6e6e6 which both doesn't account for theming\n    // and doesn't match the Material design spec. For now we approximate the buffer background by\n    // applying an opacity to the color of the bar.\n    track-color: map.get($color-tokens, track-color),\n  ));\n\n  @include mdc-linear-progress-theme.theme($color-tokens);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-progress-bar {\n    @include _palette-styles($config, primary);\n\n    &.mat-accent {\n      @include _palette-styles($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($config, warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:string';\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n\n$custom-property-prefix: 'linear-progress';\n\n// TODO(b/254889918): Support all linear progress tokens.\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  active-indicator-height: 4px,\n  track-color: $baseline-buffer-color,\n  track-height: 4px,\n  track-shape: 0px,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include buffering-keyframes(map.get($theme, track-height), $query);\n  @include bar-color(map.get($theme, active-indicator-color), $query);\n  @include buffer-color(map.get($theme, track-color), $query);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        height,\n        'max(track-height, bar-height)',\n        $replace: (\n          track-height: map.get($theme, track-height),\n          bar-height: map.get($theme, active-indicator-height)\n        )\n      );\n\n      @include dom.ie11-support() {\n        $track-height: map.get($theme, track-height);\n        $track-height: if(\n          custom-properties.is-custom-prop($track-height),\n          custom-properties.get-fallback($track-height),\n          $track-height\n        );\n\n        $bar-height: map.get($theme, active-indicator-height);\n        $bar-height: if(\n          custom-properties.is-custom-prop($bar-height),\n          custom-properties.get-fallback($bar-height),\n          $bar-height\n        );\n\n        @if ($track-height != null) and\n          ($bar-height != null) and\n          (not custom-properties.is-custom-prop-string($track-height)) and\n          (not custom-properties.is-custom-prop-string($bar-height))\n        {\n          @include theme.property(height, math.max($track-height, $bar-height));\n        }\n      }\n    }\n  }\n\n  @include _bar-height(map.get($theme, active-indicator-height), $query);\n  @include _track-height(map.get($theme, track-height), $query);\n  @include _track-shape(map.get($theme, track-shape), $query);\n\n  // TODO(b/155129310): Add styles for 4-color linear progress once this variant\n  // is supported.\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $concrete-color: $color;\n  @if custom-properties.is-custom-prop($color) {\n    $concrete-color: custom-properties.get-fallback($color);\n  }\n  $concrete-color-for-svg: str-replace_(\n    string.unquote('#{$concrete-color}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      @media (forced-colors: active) {\n        background-color: ButtonBorder;\n      }\n\n      @include dom.ie11-support() {\n        background-color: transparent;\n        // stylelint-disable function-url-quotes -- SVG data URI\n        // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n        @include theme.property(\n          background-image,\n          url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='concrete-color-for-svg'/%3E%3C/svg%3E\"),\n          $replace: (concrete-color-for-svg: $concrete-color-for-svg)\n        );\n        // stylelint-enable function-url-quotes\n      }\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n/// @deprecated Use Theming API instead.\n@mixin bar-and-track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n\n  @include _bar-height($height, $query);\n  @include _track-height($height, $query);\n}\n\n@mixin buffering-keyframes($track-height, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-linear-progress-buffering {\n      from {\n        // Normally the buffer dots start from the left and overflow to the right.\n        // We rotate by 180deg so that the buffer dots start on the right when\n        // in non-reversed mode and overflow to the left.\n        @include rtl.ignore-next-line();\n        @include theme.property(\n          transform,\n          'rotate(180deg) translateX(calc(track-height * -2.5))',\n          $replace: (track-height: $track-height)\n        );\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n\n@mixin _bar-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__bar {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__bar-inner {\n      @include theme.property(border-top-width, $height);\n    }\n  }\n}\n\n@mixin _track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__buffer-dots {\n      @include dom.ie11-support() {\n        @include theme.property(\n          background-size,\n          10px height,\n          $replace: (height: $height)\n        );\n      }\n    }\n  }\n}\n\n@mixin _track-shape($shape, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(border-radius, $shape);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    @include rtl.ignore-next-line();\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","@use '@material/tooltip/plain-tooltip-theme' as mdc-plain-tooltip-theme;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/plain-tooltip' as m2-mdc-plain-tooltip;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-tooltip-color-tokens: m2-mdc-plain-tooltip.get-color-tokens($config);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-color-tokens);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n  $mdc-tooltip-typography-tokens: m2-mdc-plain-tooltip.get-typography-tokens($config);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-tooltip-density-tokens: m2-mdc-plain-tooltip.get-density-tokens($density-scale);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/typography' as mdc-typography;\n@use '@material/textfield/variables' as mdc-textfield-variables;\n\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/tokens/token-utils';\n@use './form-field-sizing';\n\n@mixin private-form-field-subscript() {\n  // Wrapper for the hints and error messages.\n  .mat-mdc-form-field-subscript-wrapper {\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n\n  .mat-mdc-form-field-hint-wrapper,\n  .mat-mdc-form-field-error-wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: 0 mdc-textfield-variables.$padding-horizontal;\n  }\n\n  .mat-mdc-form-field-subscript-dynamic-size {\n    .mat-mdc-form-field-hint-wrapper,\n    .mat-mdc-form-field-error-wrapper {\n      position: static;\n    }\n  }\n\n  .mat-mdc-form-field-bottom-align::before {\n    content: '';\n    display: inline-block;\n    height: 16px;\n  }\n\n  .mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before {\n    content: unset;\n  }\n\n  .mat-mdc-form-field-hint-end {\n    order: 1;\n  }\n\n  // Clears the floats on the hints. This is necessary for the hint animation to work.\n  .mat-mdc-form-field-hint-wrapper {\n    display: flex;\n  }\n\n  // Spacer used to make sure start and end hints have enough space between them.\n  .mat-mdc-form-field-hint-spacer {\n    flex: 1 0 form-field-sizing.$mat-form-field-hint-min-space;\n  }\n\n  // Single error message displayed beneath the form field underline.\n  .mat-mdc-form-field-error {\n    display: block;\n  }\n}\n\n@mixin private-form-field-subscript-color() {\n  // MDC does not have built-in error treatment.\n  .mat-mdc-form-field-error {\n    @include mdc-theme.prop(color, mdc-textfield.$error);\n  }\n\n  // The subscript wrapper has a minimum height to avoid that the form-field\n  // jumps when hints or errors are displayed.\n  .mat-mdc-form-field-subscript-wrapper,\n  .mat-mdc-form-field-bottom-align::before {\n    @include token-utils.use-tokens(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-token-slots()) {\n      @include mdc-typography.smooth-font();\n      @include token-utils.create-token-slot(font-family, subscript-text-font);\n      @include token-utils.create-token-slot(line-height, subscript-text-line-height);\n      @include token-utils.create-token-slot(font-size, subscript-text-size);\n      @include token-utils.create-token-slot(letter-spacing, subscript-text-tracking);\n      @include token-utils.create-token-slot(font-weight, subscript-text-weight);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n\n/// Resolves a theme's typography tokens for the given prefix.\n///\n/// @example - scss\n///   // $theme has the following tokens:\n///   // - label-text-font\n///   // - label-text-line-height\n///   // - label-text-size\n///   // - label-text-tracking\n///   // - label-text-weight\n///   $theme: resolve-theme($theme, map.get($resolvers, typography), label-text);\n///\n/// @param {Map} $theme - The theme to resolve tokens for.\n/// @param {Function} $resolver - The typography resolver to use.\n/// @param {String...} $token-prefixes - The prefix(es) of a typography token\n///     set.\n/// @return {Map} The theme with resolved typography tokens.\n@function resolve-theme($theme, $resolver, $token-prefixes...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $token-prefix in $token-prefixes {\n    $typography-theme: meta.call(\n      $resolver,\n      $font: map.get($theme, '#{$token-prefix}-font'),\n      $line-height: map.get($theme, '#{$token-prefix}-line-height'),\n      $size: map.get($theme, '#{$token-prefix}-size'),\n      $tracking: map.get($theme, '#{$token-prefix}-tracking'),\n      $weight: map.get($theme, '#{$token-prefix}-weight')\n    );\n\n    $theme: map.merge(\n      $theme,\n      (\n        '#{$token-prefix}-font': map.get($typography-theme, font),\n        '#{$token-prefix}-line-height': map.get($typography-theme, line-height),\n        '#{$token-prefix}-size': map.get($typography-theme, size),\n        '#{$token-prefix}-tracking': map.get($typography-theme, tracking),\n        '#{$token-prefix}-weight': map.get($typography-theme, weight),\n      )\n    );\n  }\n\n  @return $theme;\n}\n","@use '@material/ripple/functions' as mdc-ripple-functions;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/style/layout-common';\n\n// MDC text-field uses `@material/ripple` in order to show a focus and hover effect for\n// text-fields. This is unnecessary because the ripples bring in a lot of unnecessary\n// styles and runtime code while the actual goal for the text-field is simply showing a\n// focus and hover effect. The ripples will unnecessarily provide CSS selectors and JS\n// runtime code for launching interaction ripples at pointer location. This is not needed\n// for the text-field, so we create our own minimal focus overlay styles. Our focus overlay\n// uses the exact same logic to compute the colors as in the default MDC text-field ripples.\n@mixin private-form-field-focus-overlay() {\n  .mat-mdc-form-field-focus-overlay {\n    @include layout-common.fill;\n    opacity: 0;\n    // Make sure we don't block click on the prefix/suffix.\n    pointer-events: none;\n  }\n}\n\n@mixin private-form-field-focus-overlay-color() {\n  $focus-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, focus);\n  $hover-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, hover);\n\n  .mat-mdc-form-field-focus-overlay {\n    background-color: mdc-textfield.$ink-color;\n  }\n\n  .mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay {\n    opacity: $hover-opacity;\n  }\n\n  .mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {\n    opacity: $focus-opacity;\n  }\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use 'sass:color';\n@use 'sass:meta';\n\n// Mixin that refreshes the MDC text-field theming variables. This mixin should be used when\n// the base MDC theming variables have been explicitly updated, but the component specific\n// theming-based variables are still based on the old MDC base theming variables. The mixin\n// restores the previous values for the variables to avoid unexpected global side effects.\n@mixin private-text-field-refresh-theme-variables() {\n  $_disabled-border: mdc-textfield.$disabled-border;\n  mdc-textfield.$disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_bottom-line-hover: mdc-textfield.$bottom-line-hover;\n  mdc-textfield.$bottom-line-hover:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_bottom-line-idle: mdc-textfield.$bottom-line-idle;\n  mdc-textfield.$bottom-line-idle:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.42);\n  $_label: mdc-textfield.$label;\n  mdc-textfield.$label: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_ink-color: mdc-textfield.$ink-color;\n  mdc-textfield.$ink-color: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_focused-label-color: mdc-textfield.$focused-label-color;\n  mdc-textfield.$focused-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(primary), 0.87);\n  $_placeholder-ink-color: mdc-textfield.$placeholder-ink-color;\n  mdc-textfield.$placeholder-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_disabled-label-color: mdc-textfield.$disabled-label-color;\n  mdc-textfield.$disabled-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-ink-color: mdc-textfield.$disabled-ink-color;\n  mdc-textfield.$disabled-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-placeholder-ink-color: mdc-textfield.$disabled-placeholder-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color:\n      _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_background: mdc-textfield.$background;\n  mdc-textfield.$background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 4%);\n  $_disabled-background: mdc-textfield.$disabled-background;\n  mdc-textfield.$disabled-background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 2%);\n  $_outlined-idle-border: mdc-textfield.$outlined-idle-border;\n  mdc-textfield.$outlined-idle-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_outlined-disabled-border: mdc-textfield.$outlined-disabled-border;\n  mdc-textfield.$outlined-disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_outlined-hover-border: mdc-textfield.$outlined-hover-border;\n  mdc-textfield.$outlined-hover-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n\n  // The content will be generated with the refreshed MDC text-field theming variables.\n  @content;\n\n  // Reset all variables to ensure that this mixin does not cause unexpected side effects.\n  mdc-textfield.$disabled-border: $_disabled-border;\n  mdc-textfield.$bottom-line-hover: $_bottom-line-hover;\n  mdc-textfield.$bottom-line-idle: $_bottom-line-idle;\n  mdc-textfield.$label: $_label;\n  mdc-textfield.$ink-color: $_ink-color;\n  mdc-textfield.$focused-label-color: $_focused-label-color;\n  mdc-textfield.$placeholder-ink-color: $_placeholder-ink-color;\n  mdc-textfield.$disabled-label-color: $_disabled-label-color;\n  mdc-textfield.$disabled-ink-color: $_disabled-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color: $_disabled-placeholder-ink-color;\n  mdc-textfield.$background: $_background;\n  mdc-textfield.$disabled-background: $_disabled-background;\n  mdc-textfield.$outlined-idle-border: $_outlined-idle-border;\n  mdc-textfield.$outlined-disabled-border: $_outlined-disabled-border;\n  mdc-textfield.$outlined-hover-border: $_outlined-hover-border;\n}\n\n@function _variable-safe-rgba($color, $opacity) {\n  @if (meta.type-of($color) == color) {\n    @return rgba($color, $opacity);\n  }\n  @return $color;\n}\n\n@function _variable-safe-mix($first-color, $second-color, $amount) {\n  @if (meta.type-of($first-color) == color and meta.type-of($second-color) == color) {\n    @return color.mix($first-color, $second-color, $amount);\n  }\n  @return $first-color;\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/theming/palette';\n@use '../core/mdc-helpers/mdc-helpers';\n\n// Width of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-width: 10px;\n// Height of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-height: 5px;\n// Horizontal padding that needs to be applied to the native select in an form-field so\n// that the absolute positioned arrow does not overlap the select content.\n$mat-form-field-select-horizontal-end-padding: $mat-form-field-select-arrow-width + 5px;\n\n// Mixin that creates styles for native select controls in a form-field.\n@mixin private-form-field-native-select() {\n  // Remove the native select down arrow and ensure that the native appearance\n  // does not conflict with the form-field. e.g. Focus indication of the native\n  // select is undesired since we handle focus as part of the form-field.\n  select.mat-mdc-form-field-input-control {\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    background-color: transparent;\n    display: inline-flex;\n    box-sizing: border-box;\n\n    // By default the cursor does not change when hovering over a select. We want to\n    // change this for non-disabled select elements so that it's more obvious that the\n    // control can be clicked.\n    &:not(:disabled) {\n      cursor: pointer;\n    }\n  }\n\n  // Native select elements with the `matInput` directive should have Material Design\n  // styling. This means that we add an arrow to the form-field that is based on the\n  // Material Design specification. We achieve this by adding a pseudo element to the\n  // form-field infix.\n  .mat-mdc-form-field-type-mat-native-select {\n    .mat-mdc-form-field-infix::after {\n      content: '';\n      width: 0;\n      height: 0;\n      border-left: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-right: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-top: $mat-form-field-select-arrow-height solid;\n      position: absolute;\n      right: 0;\n      top: 50%;\n      margin-top: -#{math.div($mat-form-field-select-arrow-height, 2)};\n\n      // Make the arrow non-clickable so the user can click on the form control under it.\n      pointer-events: none;\n\n      [dir='rtl'] & {\n        right: auto;\n        left: 0;\n      }\n    }\n\n    // Add padding on the end of the native select so that the content does not\n    // overlap with the Material Design arrow.\n    .mat-mdc-form-field-input-control {\n      padding-right: $mat-form-field-select-horizontal-end-padding;\n      [dir='rtl'] & {\n        padding-right: 0;\n        padding-left: $mat-form-field-select-horizontal-end-padding;\n      }\n    }\n  }\n}\n\n// Gets the color to use for some text that is highlighted while a select has focus.\n@function _get-focused-arrow-color($palette) {\n  @return rgba(mdc-theme-color.prop-value($palette), 0.87);\n}\n\n@mixin private-form-field-native-select-color($config) {\n  @include mdc-helpers.using-mdc-theme($config) {\n    // These values are taken from the MDC select implementation:\n    // https://github.com/material-components/material-components-web/blob/master/packages/mdc-select/_select-theme.scss\n    $dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.54);\n    $disabled-dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.38);\n\n    select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) {\n      // On dark themes we set the native `select` color to some shade of white,\n      // however the color propagates to all of the `option` elements, which are\n      // always on a white background inside the dropdown, causing them to blend in.\n      // Since we can't change background of the dropdown, we need to explicitly\n      // reset the color of the options to something dark.\n      @if (map.get($config, is-dark)) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n\n    .mat-mdc-form-field-type-mat-native-select {\n      .mat-mdc-form-field-infix::after {\n        color: $dropdown-icon-color;\n      }\n\n      &.mat-focused {\n        &.mat-primary {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(primary);\n          }\n        }\n\n        &.mat-accent {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(secondary);\n          }\n        }\n\n        &.mat-warn {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(error);\n          }\n        }\n      }\n\n      &.mat-form-field-disabled {\n        .mat-mdc-form-field-infix::after {\n          color: $disabled-dropdown-icon-color;\n        }\n      }\n    }\n  }\n}\n","@use '@material/textfield/filled-text-field-theme' as mdc-filled-text-field-theme;\n@use '@material/textfield/outlined-text-field-theme' as mdc-outlined-text-field-theme;\n\n@use '../core/tokens/m2/mdc/filled-text-field' as tokens-mdc-filled-text-field;\n@use '../core/tokens/m2/mdc/outlined-text-field' as tokens-mdc-outlined-text-field;\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use './form-field-density';\n@use './form-field-subscript';\n@use './form-field-focus-overlay';\n@use './form-field-native-select';\n@use './mdc-text-field-theme-variable-refresh';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-color-tokens($config));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-color-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-color-tokens($config));\n  }\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include mdc-text-field-theme-variable-refresh.private-text-field-refresh-theme-variables() {\n      @include form-field-subscript.private-form-field-subscript-color();\n      @include form-field-focus-overlay.private-form-field-focus-overlay-color();\n      @include form-field-native-select.private-form-field-native-select-color($config);\n\n      .mat-mdc-form-field.mat-accent {\n        @include mdc-filled-text-field-theme.theme(\n          tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($config, accent));\n        @include mdc-outlined-text-field-theme.theme(\n          tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($config, accent));\n      }\n\n      .mat-mdc-form-field.mat-warn {\n        @include mdc-filled-text-field-theme.theme(\n          tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($config, warn));\n        @include mdc-outlined-text-field-theme.theme(\n          tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($config, warn));\n      }\n\n      // This fixes an issue where the notch appears to be thicker than the rest of the outline when\n      // zoomed in on Chrome. The border inconsistency seems to be some kind of rendering artifact\n      // that arises from a combination of the fact that the notch contains text, while the leading\n      // and trailing outline do not, combined with the fact that the border is semi-transparent.\n      // Experimentally, I discovered that adding a transparent left border fixes the inconsistency.\n      // Note: class name is repeated to achieve sufficient specificity over the various MDC states.\n      // (hover, focus, etc.)\n      // TODO(mmalerba): port this fix into MDC\n      // TODO(crisbeto): move this into the structural styles\n      .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n        &.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n          border-left: 1px solid transparent;\n        }\n      }\n\n      [dir='rtl'] {\n        .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n          &.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n            border-left: none;\n            border-right: 1px solid transparent;\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-typography-tokens($config));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-density.private-form-field-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/theming/theming';\n\n@use './form-field-sizing';\n\n// Mixin that sets the vertical spacing for the infix container of filled form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-filled($with-label-padding, $no-label-padding) {\n  .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n    padding-top: map.get($with-label-padding, top);\n    padding-bottom: map.get($with-label-padding, bottom);\n  }\n\n  .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)\n  .mat-mdc-form-field-infix {\n    padding-top: map.get($no-label-padding, top);\n    padding-bottom: map.get($no-label-padding, bottom);\n  }\n}\n\n// Mixin that sets the vertical spacing for the infix container of outlined form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-outlined($padding) {\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n    padding-top: map.get($padding, top);\n    padding-bottom: map.get($padding, bottom);\n  }\n}\n\n// Mixin that includes the density styles for form fields. MDC provides their own density\n// styles for MDC text-field which we cannot use. MDC relies on input elements to stretch\n// vertically when the height is reduced as per density scale. This doesn't work for our\n// form field since we support custom form field controls without a fixed height. Instead, we\n// provide spacing that makes arbitrary controls align as specified in the Material Design\n// specification. In order to support density, we need to adjust the vertical spacing to be\n// based on the density scale.\n@mixin private-form-field-density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  // Height of the form field that is based on the current density scale.\n  $height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  // Whether floating labels for filled form fields should be hidden. MDC hides the label in\n  // their density styles when the height decreases too much. We match their density styles.\n  $hide-filled-floating-label: $height < mdc-textfield.$minimum-height-for-filled-label;\n  // We computed the desired height of the form-field using the density configuration. The\n  // spec only describes vertical spacing/alignment in non-dense mode. This means that we\n  // cannot update the spacing to explicit numbers based on the density scale. Instead, we\n  // determine the height reduction and equally subtract it from the default `top` and `bottom`\n  // padding that is provided by the Material Design specification.\n  $vertical-deduction: math.div(mdc-textfield.$height - $height, 2);\n  // Map that describes the padding for form-fields with label.\n  $with-label-padding: (\n    top: form-field-sizing.$mat-form-field-with-label-input-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-with-label-input-padding-bottom - $vertical-deduction,\n  );\n  // Map that describes the padding for form-fields without label.\n  $no-label-padding: (\n    top: form-field-sizing.$mat-form-field-no-label-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-no-label-padding-bottom - $vertical-deduction,\n  );\n\n  // We add a minimum height to the infix container in order to ensure that custom controls have\n  // the same default vertical space as text-field inputs (with respect to the vertical padding).\n  .mat-mdc-form-field-infix {\n    min-height: $height;\n  }\n\n  // By default, MDC aligns the label using percentage. This will be overwritten based\n  // on whether a textarea is used. This is not possible in our implementation of the\n  // form-field because we do not know what type of form-field control is set up. Hence\n  // we always use a fixed position for the label. This does not have any implications.\n  .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n    top: math.div($height, 2);\n  }\n\n  // For the outline appearance, we re-create the active floating label transform. This is\n  // necessary because the transform for docked floating labels can be updated to account for\n  // the width of prefix container.\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded\n  .mdc-floating-label--float-above {\n    --mat-mdc-form-field-label-transform: translateY(\n            -#{mdc-textfield.get-outlined-label-position-y($height)})\n            scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n    transform: var(--mat-mdc-form-field-label-transform);\n  }\n\n  // Add vertical spacing to the infix to ensure that outlined form fields have their controls\n  // aligned as if there is no label. This is done similarly in MDC and is specified in the\n  // Material Design specification. Outline form fields position the control as if there is no\n  // label. This is because the label overflows the form-field and doesn't need space at the top.\n  @include _infix-vertical-spacing-outlined($no-label-padding);\n\n  // MDC hides labels for filled form fields when the form field height decreases. We match\n  // this behavior in our custom density styles.\n  @if $hide-filled-floating-label {\n    // Update the spacing for filled form fields to account for the hidden floating label.\n    @include _infix-vertical-spacing-filled(\n          $no-label-padding, $no-label-padding);\n    .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n        display: none;\n    }\n  }\n  @else {\n    // By default, filled form fields align their controls differently based on whether there\n    // is a label or not. MDC does this too, but we cannot rely on their styles as we support\n    // arbitrary form field controls and MDC only applies their spacing to the `<input>` elements.\n    @include _infix-vertical-spacing-filled(\n          $with-label-padding, $no-label-padding);\n  }\n}\n","@use 'sass:map';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/tokens/m2/mat/select' as tokens-mat-select;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-color-tokens($config));\n\n    .mat-mdc-form-field.mat-accent {\n      $accent: map.get($config, accent);\n      $accent-config: map.merge($config, (primary: $accent));\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($accent-config));\n    }\n\n    .mat-mdc-form-field.mat-warn {\n      $warn: map.get($config, warn);\n      $warn-config: map.merge($config, (primary: $warn));\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($warn-config));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // Density is clamped at -5 here, because MDC's form field throws an error for anything lower.\n  $form-field-height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: theming.clamp-density($density-scale, -5),\n    $property-name: height,\n  );\n\n  // On lower densities the filled form field hides its label which causes the label to\n  // be misaligned. Remove the additional offset that was added because of the label.\n  @if ($form-field-height < mdc-textfield.$minimum-height-for-filled-label) {\n    .mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper {\n      transform: none;\n    }\n  }\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/dialog/dialog-theme' as mdc-dialog-theme;\n@use '../core/tokens/m2/mdc/dialog' as tokens-mdc-dialog;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-dialog-container {\n    @include mdc-dialog-theme.theme(tokens-mdc-dialog.get-color-tokens($config));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-dialog-container {\n    @include mdc-dialog-theme.theme(tokens-mdc-dialog.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/chips/chip-theme' as mdc-chip-theme;\n@use '../core/tokens/m2/mdc/chip' as tokens-mdc-chip;\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n\n@function _get-default-palette($config) {\n  $is-dark: map.get($config, is-dark);\n  $grey-50: map.get(palette.$grey-palette, 50);\n  $grey-900: map.get(palette.$grey-palette, 900);\n  $default-foreground: if($is-dark, $grey-50, $grey-900);\n\n  $surface: map.get(map.get($config, background), card);\n  $on-surface: if(\n    mdc-helpers.variable-safe-contrast-tone($surface, $is-dark) == 'dark',\n    #000,\n    #fff\n  );\n  $default-background: if(\n    meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n    color.mix($on-surface, $surface, 12%),\n    $on-surface\n  );\n\n  @return (default: $default-background, default-contrast: $default-foreground);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-standard-chip {\n    $default-palette: _get-default-palette($config);\n    $default-config: map.merge($config, (primary: $default-palette));\n    $default-color-tokens: tokens-mdc-chip.get-color-tokens($default-config);\n    @include mdc-chip-theme.theme($default-color-tokens);\n\n    &.mat-mdc-chip-selected,\n    &.mat-mdc-chip-highlighted {\n      &.mat-primary {\n        $primary-color-tokens: tokens-mdc-chip.get-color-tokens($config);\n        @include mdc-chip-theme.theme($primary-color-tokens);\n      }\n\n      &.mat-accent {\n        $accent-config: map.merge($config, (primary: map.get($config, accent)));\n        $accent-color-tokens: tokens-mdc-chip.get-color-tokens($accent-config);\n        @include mdc-chip-theme.theme($accent-color-tokens);\n      }\n\n      &.mat-warn {\n        $warn-config: map.merge($config, (primary: map.get($config, warn)));\n        $warn-color-tokens: tokens-mdc-chip.get-color-tokens($warn-config);\n        @include mdc-chip-theme.theme($warn-color-tokens);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme)\n  );\n  $typography-tokens: tokens-mdc-chip.get-typography-tokens($config);\n\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $density-tokens: tokens-mdc-chip.get-density-tokens($density-scale);\n  .mat-mdc-chip.mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/switch/switch-theme' as mdc-switch-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/switch' as m2-mdc-switch;\n@use '../core/tokens/m2/mat/slide-toggle' as m2-mat-slide-toggle;\n@use '../core/tokens/token-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $is-dark: map.get($config, is-dark);\n  $foreground: map.get($config, foreground);\n\n  $mdc-switch-color-tokens: m2-mdc-switch.get-color-tokens($config);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    // Add values for MDC slide toggles tokens\n    .mat-mdc-slide-toggle {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-switch-theme.theme($mdc-switch-color-tokens);\n\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      .mdc-switch--disabled + label {\n        color: theming.get-color-from-palette($foreground, disabled-text);\n      }\n\n      // Change the color palette related tokens to accent or warn if applicable\n      &.mat-accent {\n        @include mdc-switch-theme.theme(m2-mdc-switch.private-get-color-palette-color-tokens(\n          map.get($config, accent),\n          map.get($config, is-dark)\n        ));\n      }\n\n      &.mat-warn {\n        @include mdc-switch-theme.theme(m2-mdc-switch.private-get-color-palette-color-tokens(\n          map.get($config, warn),\n          map.get($config, is-dark)\n        ));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-switch-typography-tokens: m2-mdc-switch.get-typography-tokens($config);\n  $mat-slide-toggle-typography-tokens: m2-mat-slide-toggle.get-typography-tokens($config);\n\n  //Add values for MDC slide toggle tokens\n  .mat-mdc-slide-toggle {\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-switch-theme.theme($mdc-switch-typography-tokens);\n    @include token-utils.create-token-values(\n      m2-mat-slide-toggle.$prefix,\n      $mat-slide-toggle-typography-tokens\n    );\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-slide-toggle {\n    @include mdc-switch-theme.theme(mdc-switch-theme.density($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2023 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './form-field-theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include static-styles($query);\n\n  // TODO: Replace with call to theme-styles after Angular moves to Theming API\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      &[hidden] {\n        display: none;\n      }\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n","@use '@material/radio/radio' as mdc-radio;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mat/radio' as tokens-mat-radio;\n@use 'sass:map';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-radio-button {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n    }\n  }\n\n  .mat-mdc-radio-button {\n    &.mat-primary {\n      $primary-config: map.merge($config, (accent: $primary));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($primary-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($primary-config));\n    }\n\n    &.mat-accent {\n      $accent-config: map.merge($config, (accent: $accent));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($accent-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($accent-config));\n    }\n\n    &.mat-warn {\n      $warn-config: map.merge($config, (accent: $warn));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($warn-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($warn-config));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-radio-button {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-typography-tokens($config));\n    @include mdc-helpers.using-mdc-typography($config) {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-radio-button .mdc-radio {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($density-scale));\n  }\n\n  @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n    .mat-mdc-radio-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n\n@use '@material/slider/slider-theme' as mdc-slider-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-slider {\n      $is-dark: map.get($config, is-dark);\n      $on-surface: mdc-theme-color.prop-value(on-surface);\n\n      @include mdc-slider-theme.theme((\n        label-container-color: if($is-dark, white, black),\n        label-label-text-color: if($is-dark, black, white),\n        disabled-handle-color: $on-surface,\n        disabled-active-track-color: $on-surface,\n        disabled-inactive-track-color: $on-surface,\n        with-tick-marks-disabled-container-color: $on-surface,\n      ));\n\n      // Note that technically we can control this using an `rgba` color in `label-container-color`.\n      // We don't do it, because the shapes MDC uses to construct the indicator overlap which causes\n      // their color opacities to stack with an `rgba` color.\n      --mat-mdc-slider-value-indicator-opacity: #{if($is-dark, 0.9, 0.6)};\n\n      &.mat-primary {\n        @include _slider-color(primary, on-primary);\n      }\n\n      &.mat-accent {\n        @include _slider-color(secondary, on-secondary);\n      }\n\n      &.mat-warn {\n        @include _slider-color(error, on-error);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-slider {\n      @include mdc-slider-theme.theme((\n        label-label-text-font: mdc-typography.get-font(subtitle2),\n        label-label-text-size: mdc-typography.get-size(subtitle2),\n        label-label-text-line-height: mdc-typography.get-line-height(subtitle2),\n        label-label-text-tracking: mdc-typography.get-tracking(subtitle2),\n        label-label-text-weight: mdc-typography.get-weight(subtitle2),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin _slider-color($color, $on-color) {\n  $ripple-color: map.get(mdc-theme-variables.$property-values, $color);\n  $resolved-color: mdc-theme-color.prop-value($color);\n  $resolved-on-color: mdc-theme-color.prop-value($on-color);\n\n  @include mdc-slider-theme.theme((\n    handle-color: $resolved-color,\n    focus-handle-color: $resolved-color,\n    hover-handle-color: $resolved-color,\n    active-track-color: $resolved-color,\n    inactive-track-color: $resolved-color,\n    with-tick-marks-active-container-color: $resolved-on-color,\n    with-tick-marks-inactive-container-color: $resolved-color,\n  ));\n\n  --mat-mdc-slider-ripple-color: #{$ripple-color};\n  --mat-mdc-slider-hover-ripple-color: #{rgba($ripple-color, 0.05)};\n  --mat-mdc-slider-focus-ripple-color: #{rgba($ripple-color, 0.2)};\n}\n","@use 'sass:map';\n@use '@material/list/evolution-mixins';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/list/list-theme' as mdc-list-theme;\n\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mdc/list' as tokens-mdc-list;\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $mdc-list-color-tokens: tokens-mdc-list.get-color-tokens($config);\n  $inner-control-primary: map.merge($config, (accent: $primary));\n  $inner-control-accent: map.merge($config, (accent: $accent));\n  $inner-control-warn: map.merge($config, (accent: $warn));\n\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-color-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-primary));\n  }\n\n  .mat-accent {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-accent));\n    }\n  }\n\n  .mat-warn {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-warn));\n    }\n  }\n\n  .mat-mdc-list-option {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-primary));\n  }\n  .mat-mdc-list-option.mat-accent {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-accent));\n  }\n  .mat-mdc-list-option.mat-warn {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-warn));\n  }\n\n  // There is no token for activated color on nav list.\n  // TODO(mmalerba): Add a token to MDC or make a custom one.\n  .mat-mdc-list-base.mat-mdc-list-base {\n    @include evolution-mixins.list-selected-ink-color(theming.get-color-from-palette($primary));\n  }\n\n  // TODO(mmalerba): Leaking styles from the old MDC list mixins used in other components can cause\n  //  opacity issues, so we need this override for now. We can remove it when all Angular Material\n  //  components stop using the old MDC mixins.\n  .mat-mdc-list-base .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-list-density-tokens: tokens-mdc-list.get-density-tokens($density-scale);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-density-tokens);\n  }\n\n  // TODO(mmalerba): This is added to maintain the same style MDC used prior to the token-based API,\n  //  to avoid screenshot diffs. We should remove it in favor of following MDC's current style, or\n  //  add custom tokens for it.\n  $clamped-density-scale: theming.clamp-density($density-scale, -5);\n  .mat-mdc-list-item {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-icon {\n      &.mdc-list-item--with-one-line {\n        height: map.get((\n            0: 56px,\n            -1: 52px,\n            -2: 48px,\n            -3: 44px,\n            -4: 40px,\n            -5: 40px,\n        ), $clamped-density-scale);\n      }\n\n      &.mdc-list-item--with-two-lines {\n        height: map.get((\n            0: 72px,\n            -1: 68px,\n            -2: 64px,\n            -3: 60px,\n            -4: 56px,\n            -5: 56px,\n        ), $clamped-density-scale);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-list-typography-tokens: tokens-mdc-list.get-typography-tokens($config);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-typography-tokens);\n  }\n\n  // MDC does not have tokens for the subheader.\n  // TODO(mmalerba): Discuss with MDC about adding them, or create custom tokens.\n  .mdc-list-group__subheader {\n    @include typography-utils.typography-level($config, subtitle-1);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.surface-styles($query: $query);\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @if meta.type-of($config) != 'map' {\n    @error 'Typography config must be a map. Received #{meta.type-of($config)}.';\n  }\n\n  @if not map.has-key($config, $level) {\n    @error 'Typography config does not have a level called \"#{$level}\". ' +\n           'Available levels are: #{map.keys($config)}.';\n  }\n\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  @if meta.type-of($config) != 'map' {\n    @error 'Typography config must be a map. Received #{meta.type-of($config)}.';\n  }\n\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  // we deliberately do not use the font shorthand here because it overrides\n  // certain font properties that can't be configured in the current typography\n  // config, e.g. the font-variant-caps or font-feature-settings property\n  font-size: font-size($config, $level);\n  font-weight: font-weight($config, $level);\n  line-height: line-height($config, $level);\n  font-family: font-family($config, $level);\n\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","@use 'sass:map';\n@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab/tab-theme' as mdc-tab-theme;\n@use '../core/tokens/m2/mdc/tab' as tokens-mdc-tab;\n@use '../core/tokens/m2/mdc/tab-indicator' as tokens-mdc-tab-indicator;\n@use '../core/tokens/m2/mat/tab-header' as tokens-mat-tab-header;\n@use '../core/tokens/m2/mat/tab-header-with-background' as tokens-mat-tab-header-with-background;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n    @include _palette-styles($config, primary);\n\n    &.mat-accent {\n      @include _palette-styles($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($config, warn);\n    }\n\n    &.mat-background-primary {\n      @include _background-styles($config, primary);\n    }\n\n    &.mat-background-accent {\n      @include _background-styles($config, accent);\n    }\n\n    &.mat-background-warn {\n      @include _background-styles($config, warn);\n    }\n  }\n}\n\n@mixin _background-styles($initial-config, $palette) {\n  $config: map.merge($initial-config, (primary: map.get($initial-config, $palette)));\n  @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n    tokens-mat-tab-header-with-background.get-color-tokens($config));\n}\n\n@mixin _palette-styles($initial-config, $palette) {\n  $config: map.merge($initial-config, (primary: map.get($initial-config, $palette)));\n  @include mdc-tab-theme.secondary-navigation-tab-theme(\n    tokens-mdc-tab.get-color-tokens($config));\n  @include mdc-tab-indicator-theme.theme(\n    tokens-mdc-tab-indicator.get-color-tokens($config));\n  @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n   tokens-mat-tab-header.get-color-tokens($config));\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-typography-tokens($config));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-density-tokens($density-scale));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-density-tokens($density-scale));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-density-tokens($density-scale));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($config));\n  }\n\n  .mat-mdc-checkbox {\n    &.mat-primary {\n      $primary-config: map.merge($config, (accent: $primary));\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($primary-config));\n    }\n\n    &.mat-warn {\n      $warn-config: map.merge($config, (accent: $warn));\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($warn-config));\n    }\n\n    @include mdc-helpers.using-mdc-theme($config) {\n      // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n    }\n\n    &.mat-mdc-checkbox-disabled label {\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-typography-tokens($config));\n  }\n\n  .mat-mdc-checkbox {\n    @include mdc-helpers.using-mdc-typography($config) {\n      // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-density-tokens($density-scale));\n  }\n\n  @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n    .mat-mdc-checkbox-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    // TODO(mmalerba): Some of the theme styles above are not represented in terms of tokens,\n    //   so this mixin is currently incomplete.\n    @include mdc-checkbox-theme.theme(map.get($tokens, tokens-mdc-checkbox.$prefix));\n  }\n}\n","@use 'sass:map';\n@use '@material/button/button' as mdc-button;\n@use '@material/button/button-theme' as mdc-button-theme;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _button-variant($color) {\n  @include mdc-button-text-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin _unelevated-button-variant($foreground, $background) {\n  @include mdc-button-filled-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _raised-button-variant($foreground, $background) {\n  @include mdc-button-protected-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _outlined-button-variant($color) {\n  @include mdc-button-outlined-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n    $disabled-ink-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n    $disabled-container-color: rgba($on-surface, 0.12);\n    $primary: mdc-theme-color.prop-value(primary);\n    $on-primary: mdc-theme-color.prop-value(on-primary);\n    $secondary: mdc-theme-color.prop-value(secondary);\n    $on-secondary: mdc-theme-color.prop-value(on-secondary);\n    $error: mdc-theme-color.prop-value(error);\n    $on-error: mdc-theme-color.prop-value(on-error);\n\n    .mat-mdc-button {\n      &.mat-unthemed {\n        @include _button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-text-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-label-text-color: $disabled-ink-color,\n          label-text-color: $disabled-ink-color\n        ));\n      }\n    }\n\n    .mat-mdc-unelevated-button {\n      &.mat-unthemed {\n        @include _unelevated-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _unelevated-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _unelevated-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _unelevated-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-filled-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n        ));\n      }\n    }\n\n    .mat-mdc-raised-button {\n      &.mat-unthemed {\n        @include _raised-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _raised-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _raised-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _raised-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-protected-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n          container-elevation: 0,\n        ));\n      }\n    }\n\n    .mat-mdc-outlined-button {\n      @include mdc-button-outlined-theme.theme((\n        outline-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12)\n      ));\n\n      &.mat-unthemed {\n        @include _outlined-button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _outlined-button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _outlined-button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _outlined-button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-outlined-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          label-text-color: $disabled-ink-color,\n          disabled-label-text-color: $disabled-ink-color,\n          outline-color: rgba($on-surface, 0.12),\n          disabled-outline-color: rgba($on-surface, 0.12),\n        ));\n      }\n    }\n\n    // Ripple colors\n    .mat-mdc-button, .mat-mdc-outlined-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n    }\n\n    .mat-mdc-raised-button, .mat-mdc-unelevated-button {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-button,\n  .mat-mdc-raised-button,\n  .mat-mdc-unelevated-button,\n  .mat-mdc-outlined-button {\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n    &.mat-mdc-button-base {\n      @include mdc-button-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n      @include button-theme-private.touch-target-density($density-scale);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/ripple/ripple-theme' as mdc-ripple-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use '../core/mdc-helpers/mdc-helpers';\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@mixin ripple-theme-styles($config, $is-filled) {\n  $opacities: if(map.get($config, is-dark),\n    mdc-ripple-theme.$light-ink-opacities, mdc-ripple-theme.$dark-ink-opacities);\n\n  // Ideally these styles would be structural, but MDC bases some of the opacities on the theme.\n  &:hover .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, hover);\n  }\n\n  &.cdk-program-focused,\n  &.cdk-keyboard-focused {\n    .mat-mdc-button-persistent-ripple::before {\n      opacity: map.get($opacities, focus);\n    }\n  }\n\n  &:active .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, press);\n  }\n\n  @include _ripple-color(mdc-theme-color.prop-value(on-surface));\n\n  &.mat-primary {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-primary, primary)));\n  }\n\n  &.mat-accent {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-secondary, secondary)));\n  }\n\n  &.mat-warn {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-error, error)));\n  }\n}\n\n// Wraps the content style in a selector for the disabled state.\n// MDC adds theme color by using :not(:disabled), so just using [disabled] once will not\n// override this, neither will it apply to anchor tags. This needs to override the\n// previously set theme color, so it must be ordered after the theme styles.\n// TODO(andrewseguin): Discuss with the MDC team to see if we can avoid the :not(:disabled) by\n// manually styling disabled buttons with a [disabled] selector.\n@mixin apply-disabled-style() {\n  &[disabled][disabled] {\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/touch-target/touch-target';\n@use '@material/focus-ring/focus-ring';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__progress-indicator {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 0;\n        position: absolute;\n        @include rtl.ignore-next-line();\n        transform: translate(-50%, -50%);\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        line-height: initial;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include ripple-theme.focus {\n      .mdc-button__focus-ring {\n        @include dom.forced-colors-mode($exclude-ie11: true) {\n          @include feature-targeting.targets($feat-structure) {\n            display: block;\n          }\n        }\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n\n  &[hidden] {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density/functions' as mdc-density-functions;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/tokens/m2/mdc/icon-button' as tokens-mdc-icon-button;\n\n@use './button-theme-private';\n@use '../core/theming/theming';\n\n$_icon-size: 24px;\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@function _variable-safe-contrast-tone($value, $is-dark) {\n  @if ($value == 'dark' or $value == 'light' or type-of($value) == 'color') {\n    @return mdc-theme-color.contrast-tone($value);\n  }\n\n  @return if($is-dark, 'light', 'dark');\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $color-tokens: tokens-mdc-icon-button.get-color-tokens($config);\n  $background-palette: map.get($config, background);\n  $surface: theming.get-color-from-palette($background-palette, card);\n  $is-dark: map.get($config, is-dark);\n  $on-surface: if(_variable-safe-contrast-tone($surface, $is-dark) == 'dark', #000, #fff);\n\n  .mat-mdc-icon-button {\n    @include button-theme-private.ripple-theme-styles($config, false);\n    @include mdc-icon-button-theme.theme($color-tokens);\n    @include _ripple-color($on-surface);\n\n    &.mat-primary {\n      $color: theming.get-color-from-palette(map.get($config, primary));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    &.mat-accent {\n      $color: theming.get-color-from-palette(map.get($config, accent));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    &.mat-warn {\n      $color: theming.get-color-from-palette(map.get($config, warn));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    @include button-theme-private.apply-disabled-style() {\n      $disabled-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n      @include mdc-icon-button-theme.theme((\n        icon-color: $disabled-color,\n        disabled-icon-color: $disabled-color,\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  // Manually apply the expected density theming, and include the padding\n  // as it was applied before\n  $calculated-size: mdc-density-functions.prop-value(\n    $density-config: (\n      size: (\n        default: 48px,\n        maximum: 48px,\n        minimum: 28px,\n      ),\n    ),\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    // Match the styles that used to be present. This is necessary for backwards\n    // compat to match the previous implementations selector count (two classes).\n    @include mdc-icon-button-theme.theme((\n      state-layer-size: $calculated-size,\n    ));\n\n    // TODO: Switch calculated-size to \"var(--mdc-icon-button-state-layer-size)\"\n    // Currently fails validation because the variable is \"undefined\"\n    // in the sass stack.\n    // TODO: Switch icon-size to \"var(--mdc-icon-button-icon-size)\". Currently\n    // fails validation because the variable is \"undefined\" in the sass stack.\n    width: var(--mdc-icon-button-state-layer-size);\n    height: var(--mdc-icon-button-state-layer-size);\n    padding: math.div($calculated-size - $_icon-size, 2);\n\n    @include button-theme-private.touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/fab/fab' as mdc-fab;\n@use '@material/fab/fab-theme' as mdc-fab-theme;\n@use '@material/fab/extended-fab-theme' as mdc-extended-fab-theme;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/fab' as tokens-mdc-fab;\n@use '../core/tokens/m2/mdc/extended-fab' as tokens-mdc-extended-fab;\n@use '../core/typography/typography';\n\n@mixin _fab-variant($config, $foreground, $background) {\n  $color-config: map.merge(\n    $config,\n    (\n      primary: (\n        default: $background,\n        default-contrast: $foreground,\n      ),\n    )\n  );\n  $color-tokens: tokens-mdc-fab.get-color-tokens($color-config);\n  @include mdc-fab-theme.theme($color-tokens);\n\n  --mat-mdc-fab-color: #{$foreground};\n}\n\n@function white-or-black($color, $is-dark) {\n  @return if(mdc-helpers.variable-safe-contrast-tone($color, $is-dark) == 'dark', #000, #fff);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  $is-dark: map.get($config, is-dark);\n  $background: map.get($config, background);\n\n  $surface: theming.get-color-from-palette($background, card);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n\n  $on-surface: white-or-black($surface, $is-dark);\n  $on-primary: white-or-black($primary, $is-dark);\n  $on-accent: white-or-black($accent, $is-dark);\n  $on-warn: white-or-black($warn, $is-dark);\n\n  $disabled: rgba($on-surface, 0.12);\n  $on-disabled: rgba($on-surface, if(map.get($config, is-dark), 0.5, 0.38));\n\n  .mat-mdc-fab,\n  .mat-mdc-mini-fab {\n    // TODO(wagnermaciel): The ripple-theme-styles mixin depends heavily on\n    // being wrapped by using-mdc-theme. This workaround needs to be\n    // revisited w/ a more holistic solution.\n    @include mdc-helpers.using-mdc-theme($config) {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n\n    @include button-theme-private.apply-disabled-style() {\n      @include _fab-variant($config, $on-disabled, $disabled);\n    }\n\n    &.mat-unthemed {\n      @include _fab-variant($config, $on-surface, $surface);\n    }\n\n    &.mat-primary {\n      @include _fab-variant($config, $on-primary, $primary);\n    }\n\n    &.mat-accent {\n      @include _fab-variant($config, $on-accent, $accent);\n    }\n\n    &.mat-warn {\n      @include _fab-variant($config, $on-warn, $warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme)\n  );\n\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-fab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n\n  $typography-tokens: tokens-mdc-extended-fab.get-typography-tokens($config);\n  .mat-mdc-extended-fab {\n    @include mdc-extended-fab-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-fab') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/functions' as animation-functions;\n@use '@material/elevation/elevation-theme';\n@use '@material/elevation/elevation';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/replace';\n@use '@material/theme/state';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use './fab-custom-properties';\n@use './extended-fab-theme';\n@use './fab-theme';\n@use 'sass:math';\n@use 'sass:list';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define fab\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include base_($query: $query);\n  }\n\n  .mdc-fab--mini {\n    @include mini_($query: $query);\n  }\n\n  .mdc-fab--extended {\n    @include extended_($query: $query);\n  }\n\n  .mdc-fab--touch {\n    @include touch-target-mixins.margin(\n      $component-height: fab-theme.$mini-height,\n      $component-width: fab-theme.$mini-height,\n      $query: $query\n    );\n\n    .mdc-fab__touch {\n      @include touch-target-mixins.touch-target(\n        $set-width: true,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-fab::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n\n  .mdc-fab__label {\n    @include label_($query: $query);\n  }\n\n  .mdc-fab__icon {\n    @include icon_($query: $query);\n  }\n\n  // Increase specificity for FAB icon styles that need to override styles defined for .material-icons\n  // (which is loaded separately so the order of CSS definitions is not guaranteed)\n  .mdc-fab .mdc-fab__icon {\n    @include icon-overrides_($query: $query);\n  }\n\n  .mdc-fab--exited {\n    @include exited_($query: $query);\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-fab {\n    @include fab-theme.container-color(secondary, $query: $query);\n    @include fab-theme.icon-size(24px, $query: $query);\n    @include fab-theme.ink-color(on-secondary, $query: $query);\n    @include fab-theme.shape-radius(fab-theme.$shape-radius, $query: $query);\n    @include elevation-theme.elevation(6, $query: $query);\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    // Set `$opacity-map` to null to apply default opacity-map.\n    @include fab-theme.ripple-color(\n      on-secondary,\n      $opacity-map: null,\n      $query: $query\n    );\n\n    #{fab-theme.$ripple-target} {\n      @include ripple.target-common($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        overflow: hidden;\n      }\n    }\n    @include ripple-theme.behind-content(\n      fab-theme.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n$icon-enter-delay_: 90ms;\n$icon-enter-duration_: 180ms;\n\n@mixin base_($query: feature-targeting.all()) {\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    width: fab-theme.$height;\n    height: fab-theme.$height;\n    padding: 0;\n    border: none;\n    fill: currentColor;\n    text-decoration: none;\n    cursor: pointer;\n    user-select: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    &[hidden] {\n      display: none;\n    }\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: box-shadow elevation-theme.$transition-duration\n        elevation-theme.$transition-timing-function,\n      opacity 15ms linear 30ms,\n      animation-functions.enter(\n        transform,\n        $icon-enter-duration_ + $icon-enter-delay_\n      );\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  &:hover {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  @include ripple-theme.focus() {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  .mdc-fab__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n    }\n  }\n\n  @include ripple-theme.focus() {\n    .mdc-fab__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n    }\n  }\n\n  // Increase active state specificity due to ripple-theme.focus().\n  &:active,\n  &:focus:active {\n    @include elevation-theme.elevation(12, $query: $query);\n  }\n\n  &:active,\n  &:focus {\n    // TODO(acdvorak): Should this be paired with states and/or ripple? We don't want to disable outline\n    // (an accessibility/usability feature) unless we're confident that there is also a visual indication that the\n    // element has focus. If the client has customized the DOM in some unexpected way, and is certain that another\n    // element will receive focus instead, they can always override this property manually in their CSS.\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // This allows for using SVGs within them to align properly in all browsers.\n  // Can remove once: https://bugzilla.mozilla.org/show_bug.cgi?id=1294515 is resolved.\n\n  // postcss-bem-linter: ignore\n  > svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // stylelint-enable selector-max-type\n}\n\n@mixin mini_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: fab-theme.$mini-height;\n    height: fab-theme.$mini-height;\n  }\n}\n\n@mixin extended_($query: feature-targeting.all()) {\n  @include typography.typography(button, $query: $query);\n  @include extended-fab-theme.extended-shape-radius(\n    fab-theme.$shape-radius,\n    $query: $query\n  );\n  $extended-icon-padding: custom-properties.create(\n    fab-custom-properties.$extended-icon-padding,\n    extended-fab-theme.$extended-icon-padding\n  );\n  $extended-label-padding: custom-properties.create(\n    fab-custom-properties.$extended-label-padding,\n    extended-fab-theme.$extended-label-padding\n  );\n  @include extended-fab-theme.extended-padding(\n    extended-fab-theme.$extended-icon-padding,\n    extended-fab-theme.$extended-label-padding,\n    $query: $query\n  );\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: auto;\n    max-width: 100%;\n    height: extended-fab-theme.$extended-height;\n    // This allows the text within the extended fab to be centered for varying font sizes.\n    /* @alternate */\n    line-height: normal;\n  }\n}\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation-functions.enter(\n      transform,\n      $icon-enter-duration_,\n      $icon-enter-delay_\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    fill: currentColor;\n    will-change: transform;\n  }\n}\n\n@mixin label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    justify-content: flex-start;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow-x: hidden;\n    overflow-y: visible;\n  }\n}\n\n@mixin icon-overrides_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n@mixin exited_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity 15ms linear 150ms,\n      animation-functions.exit-permanent(transform, 180ms);\n  }\n\n  .mdc-fab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scale(0);\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.exit-permanent(transform, 135ms);\n    }\n  }\n}\n","@use '@material/snackbar/snackbar-theme' as mdc-snackbar-theme;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mdc/snack-bar' as tokens-mdc-snack-bar;\n@use '../core/tokens/m2/mat/snack-bar' as tokens-mat-snack-bar;\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-snack-bar-container {\n    @include mdc-snackbar-theme.theme(tokens-mdc-snack-bar.get-color-tokens($config));\n    @include token-utils.create-token-values(\n      tokens-mat-snack-bar.$prefix,\n      tokens-mat-snack-bar.get-color-tokens($config)\n    );\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-snack-bar-container {\n    @include mdc-snackbar-theme.theme(tokens-mdc-snack-bar.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use '../core/tokens/m2/mat/table' as tokens-mat-table;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n@mixin _output-tokens {\n  @if (&) {\n    @content;\n  }\n  @else {\n    html {\n      @content;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-color-tokens($config));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/circular-progress' as tokens-mdc-circular-progress;\n@use '@material/circular-progress/circular-progress-theme' as mdc-circular-progress-theme;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-circular-progress-color-tokens: tokens-mdc-circular-progress.get-color-tokens($config);\n\n  .mat-mdc-progress-spinner {\n    @include mdc-circular-progress-theme.theme($mdc-circular-progress-color-tokens);\n\n    &.mat-accent {\n      $color: theming.get-color-from-palette(map.get($config, accent));\n      @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n    }\n\n    &.mat-warn {\n      $color: theming.get-color-from-palette(map.get($config, warn));\n      @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/badge' as tokens-mat-badge;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n// TODO(crisbeto): some of these variables aren't used anymore and should be deleted.\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Internally there are some builds that throw an error if they can't figure out the values\n// of CSS variables during compliation. This flag temporarily enables fallbacks for these builds.\n// Eventually we should clean them up.\n$_emit-fallback-vars: true;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size, $font-size-token) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n\n    @if ($font-size-token) {\n      @include token-utils.use-tokens(tokens-mat-badge.$prefix,\n        tokens-mat-badge.get-token-slots()) {\n        @include token-utils.create-token-slot(font-size, $font-size-token, $_emit-fallback-vars);\n      }\n    }\n  }\n\n  &.mat-badge-above .mat-badge-content {\n    top: math.div(-$size, 2);\n  }\n\n  &.mat-badge-below .mat-badge-content {\n    bottom: math.div(-$size, 2);\n  }\n\n  &.mat-badge-before .mat-badge-content {\n    left: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-before .mat-badge-content {\n    left: auto;\n    right: -$size;\n  }\n\n  &.mat-badge-after .mat-badge-content {\n    right: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-after .mat-badge-content {\n    right: auto;\n    left: -$size;\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before .mat-badge-content {\n      left: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-before .mat-badge-content {\n      left: auto;\n      right: math.div(-$size, 2);\n    }\n\n    &.mat-badge-after .mat-badge-content {\n      right: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-after .mat-badge-content {\n      right: auto;\n      left: math.div(-$size, 2);\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n\n    // The badge should make sure its host is overflow visible so that the badge content\n    // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n    // style `overflow: hidden` so this requires extra specificity so that it does not\n    // depend on style load order.\n    &.mat-badge {\n      overflow: visible;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, background-color);\n      @include token-utils.create-token-slot(color, text-color);\n      @include token-utils.create-token-slot(font-family, text-font, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-size, text-size, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-weight, text-weight, $_emit-fallback-vars);\n    }\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-disabled .mat-badge-content {\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, disabled-state-background-color);\n      @include token-utils.create-token-slot(color, disabled-state-text-color);\n    }\n  }\n\n  .mat-badge-hidden .mat-badge-content {\n    display: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size, small-size-text-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size, null);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size, large-size-text-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-color-tokens($config));\n  }\n\n  .mat-badge-accent {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($accent));\n  }\n\n  .mat-badge-warn {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($warn));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../core/tokens/m2/mat/datepicker' as tokens-mat-datepicker;\n@use '../core/theming/theming';\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n@use '../core/typography/typography';\n@use '../button/icon-button-theme';\n\n// TODO(crisbeto): these variables aren't used anymore and should be removed.\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _calendar-color($config, $palette) {\n  $palette-color: theming.get-color-from-palette(map.get($config, $palette));\n  $range-color: tokens-mat-datepicker.private-get-range-background-color($palette-color);\n  $range-tokens: tokens-mat-datepicker.get-range-color-tokens($range-color);\n  $calendar-tokens:\n    tokens-mat-datepicker.private-get-calendar-color-palette-color-tokens($config, $palette);\n\n  @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n    map.merge($calendar-tokens, $range-tokens));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-color-tokens($config));\n  }\n\n  .mat-datepicker-content {\n    &.mat-accent {\n      @include _calendar-color($config, accent);\n    }\n\n    &.mat-warn {\n      @include _calendar-color($config, warn);\n    }\n  }\n\n  .mat-datepicker-toggle-active {\n    &.mat-accent {\n      $accent-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($config, accent);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $accent-tokens);\n    }\n\n    &.mat-warn {\n      $warn-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($config, warn);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $warn-tokens);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-typography-tokens($config));\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: tokens-mat-datepicker.$private-default-comparison-color,\n  $overlap-color: tokens-mat-datepicker.$private-default-overlap-color,\n  $overlap-selected-color:\n    tokens-mat-datepicker.private-get-default-overlap-selected-color($overlap-color)) {\n  $tokens: tokens-mat-datepicker.get-range-color-tokens(\n    $range-color: $range-color,\n    $comparison-color: $comparison-color,\n    $overlap-color: $overlap-color,\n    $overlap-selected-color: $overlap-selected-color,\n  );\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // TODO(crisbeto): move this into the structural styles\n  // once the icon button density is switched to tokens.\n\n  // Regardless of the user-passed density, we want the calendar\n  // previous/next buttons to remain at density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mat/icon' as tokens-mat-icon;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-colors($config, $palette-name) {\n  $palette: map.get($config, $palette-name);\n  $color: theming.get-color-from-palette($palette, text);\n  $tokens: tokens-mat-icon.private-get-icon-color-tokens($color);\n  @include token-utils.create-token-values(tokens-mat-icon.$prefix, $tokens);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-icon.$prefix,\n      tokens-mat-icon.get-color-tokens($config));\n  }\n\n  .mat-icon {\n    &.mat-primary {\n      @include _palette-colors($config, primary);\n    }\n\n    &.mat-accent {\n      @include _palette-colors($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-colors($config, warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/density/private/compatibility';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/stepper' as tokens-mat-stepper;\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-color-tokens($config));\n\n    .mat-step-header.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens(map.get($config, accent)));\n    }\n\n    .mat-step-header.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens(map.get($config, warn)));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/toolbar' as tokens-mat-toolbar;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-styles($palette) {\n  @include token-utils.create-token-values(\n    tokens-mat-toolbar.$prefix,\n    tokens-mat-toolbar.private-get-color-palette-color-tokens(\n      $background-color: theming.get-color-from-palette($palette),\n      $text-color: theming.get-color-from-palette($palette, default-contrast)\n    )\n  );\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-color-tokens($config));\n  }\n\n  .mat-toolbar {\n    &.mat-primary {\n      @include _palette-styles(map.get($config, primary));\n    }\n\n    &.mat-accent {\n      @include _palette-styles(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _palette-styles(map.get($config, warn));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'typography-utils';\n@use '../theming/theming';\n@use '@material/typography' as mdc-typography;\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n///\n/// @deprecated Use `mat.define-typography-config` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@function define-legacy-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Converts a map containing rem values to a map containing px values.\n@function _rem-to-px($x, $px-per-rem: 16px) {\n  @if meta.type-of($x) == 'map' {\n    @each $key, $val in $x {\n      $x: map.merge($x, ($key: _rem-to-px($val)));\n    }\n    @return $x;\n  }\n  @if meta.type-of($x) == 'number' and math.unit($x) == 'rem' {\n    @return math.div($x, 1rem) * $px-per-rem;\n  }\n  @else {\n    @return $x;\n  }\n}\n\n// Applies the default font family to all levels in a typography config.\n@function _apply-font-family($font-family, $initial-config) {\n  $config: $initial-config;\n\n  @each $key, $level in $config {\n    @if map.get($level, 'font-family') == null {\n      // Sass maps are immutable so we have to re-assign the variable each time.\n      $config: map.set($config, $key, map.set($level, 'font-family', $font-family));\n    }\n  }\n\n  @return map.set($config, 'font-family', $font-family);\n}\n\n// Converts an MDC typography level config to an Angular Material one.\n@function typography-config-level-from-mdc($mdc-level, $font-family: null) {\n  $mdc-level-config: map.get(mdc-typography.$styles, $mdc-level);\n\n  // Explicitly default the font family to null since we'll apply it globally\n  // through the `define-typgraphy-config`/`define-legacy-typography-config`.\n  @return define-typography-level(\n    $font-family: $font-family,\n    $font-size: map.get($mdc-level-config, font-size),\n    $line-height: map.get($mdc-level-config, line-height),\n    $font-weight: map.get($mdc-level-config, font-weight),\n    $letter-spacing: map.get($mdc-level-config, letter-spacing)\n  );\n}\n\n/// Generates an Angular Material typography config based on values from the official Material\n/// Design spec implementation (MDC Web). All arguments are optional, but may be passed to override\n/// the default values. The `mat-typography-level` function can be used to generate a custom\n/// typography level map which can be passed to this function to override one of the default levels.\n/// All default typography sizing generated by this function is in `px` units.\n///\n/// @param {String} $font-family The font family to use for levels where it is not explicitly\n///     specified.\n/// @param {Map} $headline-1 The font settings for the headline-1 font level.\n/// @param {Map} $headline-2 The font settings for the headline-2 font level.\n/// @param {Map} $headline-3 The font settings for the headline-3 font level.\n/// @param {Map} $headline-4 The font settings for the headline-4 font level.\n/// @param {Map} $headline-5 The font settings for the headline-5 font level.\n/// @param {Map} $headline-6 The font settings for the headline-6 font level.\n/// @param {Map} $subtitle-1 The font settings for the subtitle-1 font level.\n/// @param {Map} $subtitle-2 The font settings for the subtitle-2 font level.\n/// @param {Map} $body-1 The font settings for the body-1 font level.\n/// @param {Map} $body-2 The font settings for the body-2 font level.\n/// @param {Map} $caption The font settings for the caption font level.\n/// @param {Map} $button The font settings for the button font level.\n/// @param {Map} $overline The font settings for the overline font level.\n/// @return {Map} A map containing font settings for each of the levels in the Material Design spec.\n@function define-typography-config(\n  // TODO(mmalerba): rename this function to define-typography-config,\n  //  and create a predefined px based config for people that need it.\n  $font-family: mdc-typography.$font-family,\n  $headline-1: null,\n  $headline-2: null,\n  $headline-3: null,\n  $headline-4: null,\n  $headline-5: null,\n  $headline-6: null,\n  $subtitle-1: null,\n  $subtitle-2: null,\n  $body-1: null,\n  $body-2: null,\n  $caption: null,\n  $button: null,\n  $overline: null,\n) {\n  @return _apply-font-family($font-family, (\n    headline-1: $headline-1 or _rem-to-px(typography-config-level-from-mdc(headline1)),\n    headline-2: $headline-2 or _rem-to-px(typography-config-level-from-mdc(headline2)),\n    headline-3: $headline-3 or _rem-to-px(typography-config-level-from-mdc(headline3)),\n    headline-4: $headline-4 or _rem-to-px(typography-config-level-from-mdc(headline4)),\n    headline-5: $headline-5 or _rem-to-px(typography-config-level-from-mdc(headline5)),\n    headline-6: $headline-6 or _rem-to-px(typography-config-level-from-mdc(headline6)),\n    subtitle-1: $subtitle-1 or _rem-to-px(typography-config-level-from-mdc(subtitle1)),\n    subtitle-2: $subtitle-2 or _rem-to-px(typography-config-level-from-mdc(subtitle2)),\n    body-1: $body-1 or _rem-to-px(typography-config-level-from-mdc(body1)),\n    body-2: $body-2 or _rem-to-px(typography-config-level-from-mdc(body2)),\n    caption: $caption or _rem-to-px(typography-config-level-from-mdc(caption)),\n    button: $button or _rem-to-px(typography-config-level-from-mdc(button)),\n    overline: $overline or _rem-to-px(typography-config-level-from-mdc(overline)),\n  ));\n}\n\n/// Generates an Angular Material typography config based on values from the official Material\n/// Design spec implementation (MDC Web). All arguments are optional, but may be passed to override\n/// the default values. The `mat-typography-level` function can be used to generate a custom\n/// typography level map which can be passed to this function to override one of the default levels.\n/// All default typography sizing generated by this function is in `rem` units.\n///\n/// @param {String} $font-family The font family to use for levels where it is not explicitly\n///     specified.\n/// @param {Map} $headline-1 The font settings for the headline-1 font level.\n/// @param {Map} $headline-2 The font settings for the headline-2 font level.\n/// @param {Map} $headline-3 The font settings for the headline-3 font level.\n/// @param {Map} $headline-4 The font settings for the headline-4 font level.\n/// @param {Map} $headline-5 The font settings for the headline-5 font level.\n/// @param {Map} $headline-6 The font settings for the headline-6 font level.\n/// @param {Map} $subtitle-1 The font settings for the subtitle-1 font level.\n/// @param {Map} $subtitle-2 The font settings for the subtitle-2 font level.\n/// @param {Map} $body-1 The font settings for the body-1 font level.\n/// @param {Map} $body-2 The font settings for the body-2 font level.\n/// @param {Map} $caption The font settings for the caption font level.\n/// @param {Map} $button The font settings for the button font level.\n/// @param {Map} $overline The font settings for the overline font level.\n/// @return {Map} A map containing font settings for each of the levels in the Material Design spec.\n@function define-rem-typography-config(\n  // TODO(mmalerba): rename this function to define-typography-config,\n  //  and create a predefined px based config for people that need it.\n  $font-family: mdc-typography.$font-family,\n  $headline-1: null,\n  $headline-2: null,\n  $headline-3: null,\n  $headline-4: null,\n  $headline-5: null,\n  $headline-6: null,\n  $subtitle-1: null,\n  $subtitle-2: null,\n  $body-1: null,\n  $body-2: null,\n  $caption: null,\n  $button: null,\n  $overline: null,\n) {\n  @return _apply-font-family($font-family, (\n    headline-1: $headline-1 or typography-config-level-from-mdc(headline1),\n    headline-2: $headline-2 or typography-config-level-from-mdc(headline2),\n    headline-3: $headline-3 or typography-config-level-from-mdc(headline3),\n    headline-4: $headline-4 or typography-config-level-from-mdc(headline4),\n    headline-5: $headline-5 or typography-config-level-from-mdc(headline5),\n    headline-6: $headline-6 or typography-config-level-from-mdc(headline6),\n    subtitle-1: $subtitle-1 or typography-config-level-from-mdc(subtitle1),\n    subtitle-2: $subtitle-2 or typography-config-level-from-mdc(subtitle2),\n    body-1: $body-1 or typography-config-level-from-mdc(body1),\n    body-2: $body-2 or typography-config-level-from-mdc(body2),\n    caption: $caption or typography-config-level-from-mdc(caption),\n    button: $button or typography-config-level-from-mdc(button),\n    overline: $overline or typography-config-level-from-mdc(overline),\n  ));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        font-family: map.get($config, font-family),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-legacy-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n        font-famiy: map.get($config, font-family),\n\n        // These mappings are odd, but body-2 in the 2014 system actually looks closer to subtitle-2\n        // in the 2018 system, and subeading-1 in the 2014 system looks more like body-1 in the 2018\n        // system.\n        subtitle-2: map.get($config, body-2),\n        body-1: map.get($config, subheading-1),\n\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2018-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline-5,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline-5,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline-5);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-headline-6,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-headline-6,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, headline-6);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subtitle-1,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subtitle-1,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subtitle-1);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-body-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-body-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, body-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-2)} * 0.83),\n      typography-utils.font-weight($config, body-2),\n      typography-utils.line-height($config, body-2),\n      typography-utils.font-family($config, body-2)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-2)} * 0.67),\n      typography-utils.font-weight($config, body-2),\n      typography-utils.line-height($config, body-2),\n      typography-utils.font-family($config, body-2)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-subtitle-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-subtitle-2 {\n    @include typography-utils.typography-level($config, subtitle-2);\n  }\n\n  .mat-body,\n  .mat-body-2,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-2,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-2);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-headline-1,\n  #{$selector} .mat-headline-1 {\n    @include typography-utils.typography-level($config, headline-1);\n    margin: 0 0 56px;\n  }\n\n  .mat-headline-2,\n  #{$selector} .mat-headline-2 {\n    @include typography-utils.typography-level($config, headline-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-3,\n  #{$selector} .mat-headline-3 {\n    @include typography-utils.typography-level($config, headline-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-4,\n  #{$selector} .mat-headline-4 {\n    @include typography-utils.typography-level($config, headline-4);\n    margin: 0 0 64px;\n  }\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n/// @deprecated Use `mat.typography-hierarchy` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-title,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-title,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subheading-2,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subheading-2,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-subheading-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-subheading-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-body-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body,\n  .mat-body-1,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-1,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4,\n  #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3,\n  #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2,\n  #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1,\n  #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n","@use \"@angular/material\" as mat;\n@use \"variables\";\n@use \"internal-helper\";\n@use \"public-util\";\n// contains main overwrite of `mat-color` to make it all work\n// needs to come after \"@angular/material\"\n@use \"mat-lib-overwrites\";\n\n@mixin init-css-vars($default-theme, $text) {\n  // init css variables\n  @include internal-helper.root($text);\n  @include internal-helper.root($default-theme);\n}\n\n@mixin init-mat-theme($dark-theme-selector, $typography-config: mat.define-typography-config(), $density) {\n  @include mat.core();\n\n  $primary: mat.define-palette(variables.$palette-primary);\n  $accent: mat.define-palette(variables.$palette-accent);\n  $warn: mat.define-palette(variables.$palette-warn);\n\n  $theme: mat.define-light-theme((\n    color: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn,\n    ),\n    typography: $typography-config,\n    density: $density,\n  ));\n\n  $dark-theme: mat.define-dark-theme((\n    color: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn,\n    ),\n    typography: $typography-config,\n    density: $density,\n  ));\n\n  // set global variable so passed-in content can use the theme\n  $mat-css-theme: $theme !global; // stays for backwards-compatibility\n\n  // NOTE: light theme is the default theme\n  @include mat.all-component-themes($theme);\n\n  // Fix mat-typography class, see https://github.com/angular/components/issues/26184\n  @include mat.typography-hierarchy($theme);\n\n  @content($mat-css-theme);\n\n  @if $dark-theme-selector {\n    $mat-css-theme: $dark-theme !global;\n    #{$dark-theme-selector} {\n      @include mat.all-component-colors($dark-theme);\n      // add content passed in, which can use the $theme variable to apply the dark theme to\n      // other theme mixins needed by the app\n      @content($mat-css-theme);\n    }\n  }\n\n  @include mat-lib-overwrites.other-overwrites;\n\n  $mat-css-theme: null !global;\n}\n\n@mixin init-material-css-vars(\n  $default-theme: variables.$default-light-theme,\n  $dark-theme-selector: variables.$dark-theme-selector,\n  $default-theme-text: variables.$text,\n  $typography-config: mat.define-typography-config(),\n  $density: 0,\n) {\n  @include init-css-vars($default-theme, $default-theme-text);\n  @include init-mat-theme($dark-theme-selector, $typography-config, $density) using ($mat-css-theme) {\n    @content($mat-css-theme);\n  }\n}\n","@use 'sass:map';\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$red-palette: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$pink-palette: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$purple-palette: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$deep-purple-palette: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$indigo-palette: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$blue-palette: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$light-blue-palette: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$cyan-palette: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$teal-palette: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$green-palette: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$light-green-palette: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$lime-palette: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$yellow-palette: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$amber-palette: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$orange-palette: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$deep-orange-palette: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$brown-palette: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$grey-palette: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$gray-palette: $grey-palette;\n\n$blue-grey-palette: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$blue-gray-palette: $blue-grey-palette;\n\n\n// Background palette for light themes.\n$light-theme-background-palette: (\n  status-bar: map.get($grey-palette, 300),\n  app-bar:    map.get($grey-palette, 100),\n  background: map.get($grey-palette, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map.get($grey-palette, 300),\n  selected-disabled-button: map.get($grey-palette, 400),\n  disabled-button-toggle: map.get($grey-palette, 200),\n  unselected-chip: map.get($grey-palette, 300),\n  disabled-list-option: map.get($grey-palette, 200),\n  tooltip: map.get($grey-palette, 700),\n);\n\n// Background palette for dark themes.\n$dark-theme-background-palette: (\n  status-bar: black,\n  app-bar:    map.get($grey-palette, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map.get($grey-palette, 800),\n  dialog:     map.get($grey-palette, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map.get($grey-palette, 800),\n  focused-button: $light-focused,\n  selected-button: map.get($grey-palette, 900),\n  selected-disabled-button: map.get($grey-palette, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map.get($grey-palette, 700),\n  disabled-list-option: rgba(white, 0.12),\n  tooltip: map.get($grey-palette, 700),\n);\n\n// Foreground palette for light themes.\n$light-theme-foreground-palette: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$dark-theme-foreground-palette: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n","@use \"public-util\";\n@use \"variables\";\n\n// ---------------------------\n// MDC Overwrites\n// ---------------------------\n@mixin other-overwrites {\n  @include _mat-mdc-fab-overwrites();\n  @include _mat-mdc-button-overwrites();\n  @include _mat-mdc-form-field-overwrites();\n  @include _mat-mdc-slide-toggle-overwrites();\n  @include _mat-mdc-checkbox-overwrites();\n  @include _mat-mdc-date-picker-overwrites();\n  @include _mat-mdc-progress-bar-overwrites();\n  @include _mat-mdc-slider-overwrites();\n}\n\n// ---------------------------\n// FAB component\n// ---------------------------\n@mixin _mat-mdc-fab-overwrites {\n  $primary: public-util.mat-css-color(500, null, \"primary\");\n  $accent: public-util.mat-css-color(500, null, \"accent\");\n  $warn: public-util.mat-css-color(500, null, \"warn\");\n  $primary-contrast: public-util.mat-css-color(500, null, \"primary\", true);\n  $accent-contrast: public-util.mat-css-color(500, null, \"accent\", true);\n  $warn-contrast: public-util.mat-css-color(500, null, \"warn\", true);\n\n  .mat-mdc-fab:not(:disabled),\n  .mat-mdc-mini-fab:not(:disabled) {\n    &.mat-primary {\n      --mdc-fab-container-color: #{$primary};\n      --mdc-fab-icon-color: #{$primary-contrast};\n      --mat-mdc-fab-color: #{$primary-contrast};\n    }\n    &.mat-accent {\n      --mdc-fab-container-color: #{$accent};\n      --mdc-fab-icon-color: #{$accent-contrast};\n      --mat-mdc-fab-color: #{$accent-contrast};\n    }\n    &.mat-warn {\n      --mdc-fab-container-color: #{$warn};\n      --mdc-fab-icon-color: #{$warn-contrast};\n      --mat-mdc-fab-color: #{$warn-contrast};\n    }\n  }\n}\n\n// ---------------------------\n// BUTTON component\n// ---------------------------\n@mixin _mat-mdc-button-overwrites {\n  $color-primary: public-util.mat-css-color(500, null, \"primary\", true);\n  $color-accent: public-util.mat-css-color(500, null, \"accent\", true);\n  $color-warn: public-util.mat-css-color(500, null, \"warn\", true);\n\n  .mat-mdc-button,\n  .mat-mdc-outlined-button,\n  .mat-mdc-icon-button {\n    &.mat-primary {\n      --mat-mdc-button-ripple-color: #{public-util.mat-css-color(500, 0.1, \"primary\")};\n    }\n    &.mat-accent {\n      --mat-mdc-button-ripple-color: #{public-util.mat-css-color(500, 0.1, \"accent\")};\n    }\n    &.mat-warn {\n      --mat-mdc-button-ripple-color: #{public-util.mat-css-color(500, 0.1, \"warn\")};\n    }\n  }\n  .mat-mdc-unelevated-button:not(:disabled),\n  .mat-mdc-raised-button:not(:disabled) {\n    &.mat-primary {\n      --mdc-filled-button-label-text-color: #{$color-primary};\n      --mdc-protected-button-label-text-color: #{$color-primary};\n    }\n    &.mat-accent {\n      --mdc-filled-button-label-text-color: #{$color-accent};\n      --mdc-protected-button-label-text-color: #{$color-accent};\n    }\n    &.mat-warn {\n      --mdc-filled-button-label-text-color: #{$color-warn};\n      --mdc-protected-button-label-text-color: #{$color-warn};\n    }\n  }\n}\n\n// ---------------------------\n// FORM FIELD component\n// ---------------------------\n@mixin _mat-mdc-form-field-overwrites {\n  .mat-mdc-form-field {\n    &.mat-primary {\n      .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n        color: public-util.mat-css-color-primary(500, 0.87);\n      }\n    }\n    &.mat-accent {\n      .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n        color: public-util.mat-css-color-accent(500, 0.87);\n      }\n    }\n    &.mat-warn {\n      .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n        color: public-util.mat-css-color-warn(500, 0.87);\n      }\n    }\n  }\n}\n\n// ---------------------------\n// SLIDE TOGGLE component\n// ---------------------------\n@mixin _mat-mdc-slide-toggle-overwrites() {\n  $color-primary: public-util.mat-css-color(500, null, \"primary\", true);\n  $color-accent: public-util.mat-css-color(500, null, \"accent\", true);\n  $color-warn: public-util.mat-css-color(500, null, \"warn\", true);\n\n  .mat-mdc-slide-toggle {\n    &.mat-primary,\n    &.mat-accent,\n    &.mat-warn {\n      @include public-util.mat-css-light-theme-global() {\n        --mdc-switch-unselected-icon-color: white;\n      }\n      @include public-util.mat-css-dark-theme-global() {\n        --mdc-switch-unselected-icon-color: black;\n      }\n    }\n    &.mat-primary {\n      --mdc-switch-selected-icon-color: #{$color-primary};\n      --mdc-switch-disabled-selected-icon-color: #{$color-primary};\n      --mdc-switch-disabled-unselected-icon-color: #{$color-primary};\n    }\n    &.mat-accent {\n      --mdc-switch-selected-icon-color: #{$color-accent};\n      --mdc-switch-disabled-selected-icon-color: #{$color-accent};\n      --mdc-switch-disabled-unselected-icon-color: #{$color-accent};\n    }\n    &.mat-warn {\n      --mdc-switch-selected-icon-color: #{$color-warn};\n      --mdc-switch-disabled-selected-icon-color: #{$color-warn};\n      --mdc-switch-disabled-unselected-icon-color: #{$color-warn};\n      --mdc-switch-unselected-icon-color: #{$color-warn};\n    }\n  }\n}\n\n// ---------------------------\n// CHECKBOX component\n// ---------------------------\n@mixin _mat-mdc-checkbox-overwrites {\n  $color-primary: public-util.mat-css-color(500, null, \"primary\", true);\n  $color-accent: public-util.mat-css-color(500, null, \"accent\", true);\n  $color-warn: public-util.mat-css-color(500, null, \"warn\", true);\n\n  .mat-mdc-checkbox {\n    &.mat-primary {\n      --mdc-checkbox-selected-checkmark-color: #{$color-primary};\n    }\n    &.mat-accent {\n      --mdc-checkbox-selected-checkmark-color: #{$color-accent};\n    }\n    &.mat-warn {\n      --mdc-checkbox-selected-checkmark-color: #{$color-warn};\n    }\n  }\n}\n\n// ---------------------------\n// DATE PICKER component\n// ---------------------------\n@mixin _mat-mdc-date-picker-overwrites {\n  .mat-datepicker-content {\n    &.mat-primary {\n      @include _mat-date-picker-color-overwrites(\"primary\");\n    }\n    &.mat-accent {\n      @include _mat-date-picker-color-overwrites(\"accent\");\n    }\n    &.mat-warn {\n      @include _mat-date-picker-color-overwrites(\"warn\");\n    }\n  }\n}\n\n@mixin _mat-date-picker-color-overwrites($palette) {\n  .mat-calendar-body-in-range::before {\n    background: public-util.mat-css-color(500, 0.2, $palette);\n  }\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled).mat-calendar-body-active > .mat-calendar-body-today {\n    color: public-util.mat-css-color(500, null, $palette, true);\n  }\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover\n    > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background: public-util.mat-css-color(500, 0.3, $palette);\n  }\n}\n\n// ---------------------------\n// PROGRESS BAR component\n// ---------------------------\n@mixin _mat-mdc-progress-bar-overwrites {\n  .mat-mdc-progress-bar {\n    &.mat-primary .mdc-linear-progress__buffer-bar {\n      background-color: public-util.mat-css-color(500, 0.25, \"primary\");\n    }\n    &.mat-accent .mdc-linear-progress__buffer-bar {\n      background-color: public-util.mat-css-color(500, 0.25, \"accent\");\n    }\n    &.mat-warn .mdc-linear-progress__buffer-bar {\n      background-color: public-util.mat-css-color(500, 0.25, \"warn\");\n    }\n  }\n}\n\n// ---------------------------\n// SLIDER component\n// ---------------------------\n@mixin _mat-mdc-slider-overwrites() {\n  .mat-mdc-slider {\n    &.mat-primary {\n      --mat-mdc-slider-hover-ripple-color: #{public-util.mat-css-color(500, 0.05, \"primary\")};\n      --mat-mdc-slider-focus-ripple-color: #{public-util.mat-css-color(500, 0.2, \"primary\")};\n    }\n    &.mat-accent {\n      --mat-mdc-slider-hover-ripple-color: #{public-util.mat-css-color(500, 0.05, \"accent\")};\n      --mat-mdc-slider-focus-ripple-color: #{public-util.mat-css-color(500, 0.2, \"accent\")};\n    }\n    &.mat-warn {\n      --mat-mdc-slider-hover-ripple-color: #{public-util.mat-css-color(500, 0.05, \"warn\")};\n      --mat-mdc-slider-focus-ripple-color: #{public-util.mat-css-color(500, 0.2, \"warn\")};\n    }\n  }\n}\n","@use \"public-color-util\";\n@use \"variables\";\n\n// Utility mixins for the public\n\n// colors\n// ------\n@function mat-css-color($hue: 500,  $opacity: null, $palette: \"primary\", $is-contrast-color: false) {\n  // If opacity is being provided, we need to to use *-no-rgb pallets\n  // in order to return a proper variable value.\n  @if ($opacity != null) {\n    @return _mat-css-color-no-rgb($hue, $opacity, $palette, $is-contrast-color);\n  }\n  $palette_: variables.$palette-primary;\n  @if ($is-contrast-color == true) {\n    @if ($palette==\"primary\") {\n      $palette_: variables.$contrast-palette;\n    } @else if ($palette==\"accent\") {\n      $palette_: variables.$contrast-palette-accent;\n    } @else if ($palette==\"warn\") {\n      $palette_: variables.$contrast-palette-warn;\n    } @else {\n      @error \"Invalid contrast palette\";\n    }\n  } @else {\n    @if ($palette==\"primary\") {\n      $palette_: variables.$palette-primary;\n    } @else if ($palette==\"accent\") {\n      $palette_: variables.$palette-accent;\n    } @else if ($palette==\"warn\") {\n      $palette_: variables.$palette-warn;\n    } @else {\n      @error \"Invalid palette\";\n    }\n  }\n\n  $color: map_get($palette_, $hue);\n\n  @if (type-of($opacity) == number) {\n    @return rgba($color, $opacity);\n  } @else {\n    @return $color;\n  }\n}\n\n@function _mat-css-color-no-rgb($hue: 500, $opacity: null, $palette: \"primary\", $is-contrast-color: false) {\n  $palette_: variables.$palette-primary-no-rgb;\n  @if ($is-contrast-color == true) {\n    @if ($palette== \"primary\") {\n      $palette_: variables.$contrast-palette-no-rgb;\n    } @else if ($palette== \"accent\") {\n      $palette_: variables.$contrast-palette-accent-no-rgb;\n    } @else if ($palette== \"warn\") {\n      $palette_: variables.$contrast-palette-warn-no-rgb;\n    } @else {\n      @error \"Invalid contrast palette\";\n    }\n  } @else {\n    @if ($palette== \"primary\") {\n      $palette_: variables.$palette-primary-no-rgb;\n    } @else if ($palette== \"accent\") {\n      $palette_: variables.$palette-accent-no-rgb;\n    } @else if ($palette== \"warn\") {\n      $palette_: variables.$palette-warn-no-rgb;\n    } @else {\n      @error \"Invalid palette\";\n    }\n  }\n  $var: map_get($palette_, $hue);\n  @return #{rgba($var, $opacity)};\n}\n\n@function mat-css-color-primary($hue: 500,  $opacity: null) {\n  @return mat-css-color($hue, $opacity, \"primary\");\n}\n\n@function mat-css-color-accent($hue: 500,  $opacity: null) {\n  @return mat-css-color($hue, $opacity, \"accent\");\n}\n\n@function mat-css-color-warn($hue: 500,  $opacity: null) {\n  @return mat-css-color($hue, $opacity, \"warn\");\n}\n\n// contrast-colors\n// ---------------\n@function mat-css-contrast-color($hue: 500,  $opacity: null, $palette: \"primary\") {\n  @return mat-css-color($hue, $opacity, $palette, true);\n}\n\n@function mat-css-contrast-color-primary($hue: 500,  $opacity: null) {\n  @return mat-css-contrast-color($hue, $opacity, \"primary\");\n}\n\n@function mat-css-contrast-color-accent($hue: 500,  $opacity: null) {\n  @return mat-css-contrast-color($hue, $opacity, \"accent\");\n}\n\n@function mat-css-contrast-color-warn($hue: 500,  $opacity: null) {\n  @return mat-css-contrast-color($hue, $opacity, \"warn\");\n}\n\n// mixins\n// ------\n@mixin mat-css-color-and-contrast($hue) {\n  @warn \"mat-css-color-and-contrast() is deprecated. Please use mat-css-color-and-contrast-primary() instead.\";\n  @include mat-css-color-and-contrast-primary($hue);\n}\n\n@mixin mat-css-color-and-contrast-primary($hue) {\n  background: mat-css-color-primary($hue);\n  color: mat-css-contrast-color($hue);\n}\n\n@mixin mat-css-color-and-contrast-accent($hue) {\n  background: mat-css-color-accent($hue);\n  color: mat-css-contrast-color-accent($hue);\n}\n\n@mixin mat-css-color-and-contrast-warn($hue) {\n  background: mat-css-color-warn($hue);\n  color: mat-css-contrast-color-warn($hue);\n}\n\n@mixin mat-css-bg($hue) {\n  background: mat-css-color-primary($hue);\n}\n\n@mixin mat-css-dark-theme {\n  :host-context(#{variables.$dark-theme-selector}) & {\n    @content;\n  }\n}\n\n@mixin mat-css-light-theme {\n  :host-context(#{variables.$light-theme-selector}) & {\n    @content;\n  }\n}\n\n@mixin mat-css-dark-theme-global {\n  @if variables.$dark-theme-selector {\n    #{variables.$dark-theme-selector} & {\n      @content;\n    }\n  }\n}\n\n@mixin mat-css-light-theme-global {\n  #{variables.$light-theme-selector} & {\n    @content;\n  }\n}\n\n// Short hand for both light and dark selectors\n@mixin mat-css-light-dark-theme-global {\n  #{variables.$light-theme-selector} & {\n    @content;\n  }\n  @if variables.$dark-theme-selector {\n    #{variables.$dark-theme-selector} & {\n      @content;\n    }\n  }\n}\n\n@mixin mat-css-set-palette-defaults($css-var-map, $paletteType: \"primary\") {\n  $new-map: ();\n  @each $var, $defaultVal in $css-var-map {\n    @if ($var != \"contrast\") {\n      $colorVal: public-color-util.hex-to-rgb($defaultVal);\n      @if $colorVal != null {\n        $new-map: map_merge($new-map, (--palette-#{$paletteType}-#{$var}: #{$colorVal}));\n      }\n    }\n  }\n}\n\n","@use '@angular/material' as mat;\n@use 'angular-material-css-vars/main' as mat-css;\n@use 'angular-material-css-vars/public-util' as mat-css-utilities;\n\n@import 'variables';\n@import 'branding';\n\n// optional\n$mat-css-dark-theme-selector: '.isDarkTheme';\n$mat-css-light-theme-selector: '.isLightTheme';\n\n// init theme\n@include mat-css.init-material-css-vars() using($mat-css-theme) {\n    // If your app has any theme mixins, call them here.\n    // $mat-css-theme gets set to an appropriate value before this content is called.\n    // @include your-custom-component-theme($mat-css-theme);\n}\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\n// (impomatrted above). For each palette, you can optionally specify a default, lighter, and darker\n// hue. Available color palettes: https://material.io/design/color/\n\n$custom-typography: mat.define-typography-config(\n    $font-family: $primaryFontFamily,\n    $body-1: mat.define-typography-level(100%, normal, 400),\n    $body-2: mat.define-typography-level(100%, normal, 400),\n    // mat-optgroups labels, input placeholder\n    $subtitle-1: mat.define-typography-level(90%, normal, 400),\n    // mat-table cells\n    $subtitle-2: mat.define-typography-level(90%, normal, 600),\n    // mat-table header\n    $button: mat.define-typography-level(100%, normal, 400),\n    $headline-1: mat.define-typography-level(150%, normal, 400),\n    $headline-2: mat.define-typography-level(140%, normal, 400),\n) !default;\n// Override typography for all Angular Material, including mat-base-typography and all components.\n@include mat.all-component-typographies($custom-typography);\n\n// Override the themes foreground colors.\n// WCAG minimums are\n//  - rgba(black, 0.54) for text on white\n//  - rgba(black, 0.42) for non-text on white\n\n// For reference: default definition from\n// https://github.com/angular/components/blob/master/src/material/core/theming/_palette.scss:\n\n// $dark-dividers: rgba(black, 0.12);\n// $dark-disabled-text: rgba(black, 0.38);\n// $dark-secondary-text: rgba(black, 0.54);\n// $light-theme-foreground-palette: (\n//   base:              black,\n//   divider:           $dark-dividers,\n//   dividers:          $dark-dividers,\n//   disabled:          $dark-disabled-text,\n//   disabled-button:   rgba(black, 0.26),\n//   disabled-text:     $dark-disabled-text,\n//   elevation:         black,\n//   hint-text:         $dark-disabled-text,\n//   secondary-text:    $dark-secondary-text,\n//   icon:              rgba(black, 0.54),\n//   icons:             rgba(black, 0.54),\n//   text:              rgba(black, 0.87),\n//   slider-min:        rgba(black, 0.87),\n//   slider-off:        rgba(black, 0.26),\n//   slider-off-active: rgba(black, 0.38),\n// );\n\n$dark-dividers: rgba(black, 0.12);\n$dark-disabled-text: rgba(black, 0.54); // increased contrast\n$dark-secondary-text: rgba(black, 0.54);\n\n:root {\n    --mdc-fab-container-color: #{$backgroundColor};\n}\n\n.mdc-button {\n    span {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n    }\n}\n\n$light-theme-foreground-palette: (\n    base: black,\n    divider: $dark-dividers,\n    dividers: $dark-dividers,\n    disabled: $dark-disabled-text,\n    disabled-button: rgba(black, 0.26),\n    disabled-text: $dark-disabled-text,\n    elevation: black,\n    hint-text: $dark-disabled-text,\n    secondary-text: $dark-secondary-text,\n    icon: rgba(black, 0.54),\n    icons: rgba(black, 0.54),\n    text: rgba(black, 0.87),\n    slider-min: rgba(black, 0.87),\n    slider-off: rgba(black, 0.26),\n    slider-off-active: rgba(black, 0.38),\n);\n\n/** custom project specifics */\n[matripplecolor='primary'] {\n    > .mat-ripple-element {\n        background-color: $primary;\n        opacity: 0.1;\n    }\n}\n/*\n  material toggle buttons\n */\nmat-button-toggle-group {\n    .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n        color: $textOnPrimary;\n        background-color: $primary;\n    }\n    .mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n        background-color: $primary;\n    }\n    /*\n      bugfix: overlay is not big enough\n     */\n    .mat-button-toggle-checked .mat-button-toggle-focus-overlay {\n        border-bottom-width: 100px;\n    }\n    &.toggle-full-size {\n        width: 100%;\n        mat-button-toggle {\n            flex-grow: 1;\n        }\n    }\n}\n.mat-tooltip {\n    background-color: $primaryVeryLight !important;\n    color: $textMain !important;\n    font-weight: bold;\n}\n.mdc-tab__content {\n    .mdc-tab__text-label {\n        display: flex;\n        gap: 10px; // padding for icons\n    }\n}\nmat-tab-group {\n    mat-tab-header {\n        background-color: $backgroundColor;\n    }\n}\n.mat-tab-group.mat-dark {\n    .mat-tab-header {\n        background-color: $workspaceTopBarBackground;\n    }\n    .mat-tab-header-pagination .mat-tab-header-pagination-chevron {\n        border-color: $workspaceTopBarFontColor;\n    }\n    .mat-tab-labels {\n        background-color: $workspaceTopBarBackground;\n        .mat-tab-label {\n            color: $workspaceTopBarFontColor;\n            &.cdk-keyboard-focused:not(.mat-tab-disabled) {\n                background-color: rgba(255, 255, 255, 0.2);\n            }\n            .mat-ripple-element {\n                background-color: rgba(255, 255, 255, 0.1);\n            }\n        }\n    }\n    .mat-ink-bar {\n        background-color: $primaryLight;\n    }\n}\n// a mat table with clickable columns\n.mat-table-clickable {\n    .mat-row {\n        @include clickable();\n        transition: all $transitionNormal;\n        &:hover {\n            background-color: $itemSelectedBackground;\n        }\n    }\n}\n.mat-mdc-fab.mat-white,\n.mat-mini-fab.mat-white {\n    // white background, primary as content color\n    color: $primary;\n}\n.mat-mdc-unelevated-button:not(:disabled),\n.mat-mdc-raised-button:not(:disabled),\n.mat-mdc-fab:not(:disabled),\n.mat-mdc-mini-fab:not(:disabled) {\n    // `color=\"warn\"`\n    &.mat-warn {\n        // Red background, same as negative\n        background-color: $warning;\n        color: white;\n    }\n    &.status-negative {\n        background-color: $colorStatusNegative;\n        color: white;\n    }\n    &.status-warning {\n        background-color: $colorStatusWarning;\n        color: white;\n    }\n    &.status-positive {\n        background-color: $colorStatusPositive;\n        color: white;\n    }\n}\n.mat-form-field .mat-button-select-arrow {\n    width: 25px;\n    height: 25px;\n    margin-right: 2px;\n    background-color: #fff;\n}\n// align prefix in input fields\n.mat-form-field-appearance-outline .mat-form-field-prefix {\n    top: 0.4em !important;\n    left: -0.1em;\n}\n// align subscript/bottom hint to complete left/right\n.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper {\n    padding: 0 !important;\n}\n.mat-form-field.mat-form-field-no-padding {\n    .mat-form-field-wrapper {\n        padding-bottom: 0;\n    }\n}\n.mat-form-field.mat-form-field-max-width {\n    .mat-form-field-wrapper {\n        width: 100%;\n    }\n}\n// form border on hover\n.mat-form-field-appearance-outline {\n    --mdc-outlined-text-field-hover-outline-color: #{mat-css-utilities.mat-css-color-primary(300)};\n}\n.mat-form-field-dark {\n    input,\n    textarea {\n        caret-color: $primaryDark;\n    }\n    .mat-form-field-outline,\n    .mat-form-field-label {\n        color: rgba(0, 0, 0, 0.6);\n    }\n    &.mat-focused {\n        .mat-form-field-outline,\n        .mat-form-field-label {\n            color: rgba(0, 0, 0, 0.7);\n        }\n    }\n}\n.mat-mdc-form-field.mat-form-field-bright {\n    input,\n    textarea {\n        --mdc-outlined-text-field-caret-color: #{$primaryLight};\n    }\n    --mdc-outlined-text-field-label-text-color: rgba(255, 255, 255, 0.87);\n    --mdc-outlined-text-field-outline-color: rgba(255, 255, 255, 0.6);\n    --mdc-outlined-text-field-hover-outline-color: rgba(255, 255, 255, 0.87);\n    --mdc-outlined-text-field-focus-outline-color: #{mat-css-utilities.mat-css-color-primary(100)};\n    .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n        color: mat-css-utilities.mat-css-color-primary(50);\n    }\n    --mdc-outlined-text-field-input-text-color: rgba(255, 255, 255);\n}\nmat-slide-toggle.mat-mdc-slide-toggle.mat-primary-bright {\n    --mdc-switch-unselected-handle-color: #fff;\n    --mdc-switch-unselected-hover-handle-color: #{$primaryVeryLight};\n    --mdc-switch-unselected-focus-handle-color: #{$primaryVeryLight};\n    --mdc-switch-unselected-pressed-handle-color: #{$primaryVeryLight};\n    --mdc-switch-unselected-icon-color: #{$textLight};\n    --mdc-switch-selected-handle-color: #fff;\n    --mdc-switch-selected-hover-handle-color: #{$primaryVeryLight};\n    --mdc-switch-selected-focus-handle-color: #{$primaryVeryLight};\n    --mdc-switch-selected-pressed-handle-color: #{$primaryVeryLight};\n    --mdc-switch-selected-icon-color: #{$primary};\n    .mdc-form-field label {\n        color: #fff;\n    }\n}\n.mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-thumb-container .mat-focus-indicator {\n    @include setGlobalKeyboardFocus();\n}\n\n// will fix g and y to cut off with custom font\ninput.mat-input-element,\nmat-label,\n.mat-select-value {\n    line-height: normal;\n}\n.mat-input-element::placeholder {\n    color: $placeholderColor;\n}\n// will better align the border label for the outlined input\n.mat-form-field-appearance-outline {\n    $mat-form-field-floating-label-offset: 0.3em;\n    // Add the offset value defined above to all relevant default values\n    .mat-form-field-label-wrapper {\n        top: calc(-0.9375em - #{$mat-form-field-floating-label-offset});\n        padding-top: calc(0.9375em + #{$mat-form-field-floating-label-offset});\n    }\n    .mat-form-field-label {\n        top: calc(1.9375em + #{$mat-form-field-floating-label-offset});\n    }\n    &.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n    &.mat-form-field-can-float\n        .mat-input-server:focus\n        + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n        transform: translateY(calc(-1.68748em - #{$mat-form-field-floating-label-offset}))\n            scale(0.75);\n    }\n}\n.mat-autocomplete-high {\n    max-height: 350px;\n}\n.mdc-button__label {\n    display: inline-flex;\n}\n.mat-flat-button {\n    padding: 0 15px !important;\n    .mdc-button__label {\n        color: $textOnPrimary !important;\n    }\n    background-color: $primary !important;\n}\nbody {\n    // Background for raised button\n    --mdc-protected-button-container-color: white;\n}\n// improve default positioning of outlined fields with label\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined {\n    .mat-mdc-form-field-infix {\n        padding-top: 20px;\n        min-height: unset;\n    }\n}\n.mat-mdc-checkbox {\n    .mdc-checkbox__background {\n        border-color: $primary !important;\n        background-color: #fff !important;\n\n        .mdc-checkbox__checkmark {\n            color: #fff !important;\n        }\n    }\n    &.mat-mdc-checkbox-checked {\n        .mdc-checkbox__background {\n            background-color: $primary !important;\n            .mdc-checkbox__checkmark,\n            .mdc-checkbox__mixedmark {\n                color: #fff !important;\n                border-color: #fff !important;\n            }\n        }\n    }\n}\n.mat-radio-container {\n    .mat-radio-outer-circle {\n        border-color: $primary;\n    }\n}\n.mat-mdc-checkbox-label {\n    line-height: 17pt !important;\n    font-size: 1rem;\n    color: $textMain;\n    > .label-secondary {\n        line-height: normal !important;\n    }\n}\n.mat-mdc-checkbox-disabled {\n    $disabled-color: #919191; // 3:1 on #fafafa (fill-color of checkmark)\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n        .mat-checkbox-background {\n            background-color: $disabled-color;\n        }\n    }\n    &:not(.mat-checkbox-checked) {\n        .mat-checkbox-frame {\n            border-color: $disabled-color;\n        }\n    }\n}\n.mat-mdc-checkbox.cdk-keyboard-focused .mat-focus-indicator {\n    @include setGlobalKeyboardFocus();\n}\n.mat-mdc-raised-button {\n    &:not(.mat-primary) {\n        color: $primary !important;\n    }\n    &.mat-primary {\n        color: $textOnPrimary !important;\n    }\n}\n.mat-mdc-button.mat-cancel {\n    color: $textMediumLight;\n    &:hover {\n        color: $primary;\n    }\n}\n// Undo default style of mat-icon.\n//\n// We assign icons the class .mat-icon so other Material components will treat them as icons, but we\n// don't use the actual mat-icon component. Some styles rely on setting the elements width and\n// height by changing its font-size.\n//\n// Note that the default style of mat-icon is only loaded when the mat-icon component is used, which\n// is rare but does happen.\ni.mat-icon {\n    height: 1em;\n    width: 1em;\n}\nbutton {\n    &.mat-mdc-button,\n    &.mat-mdc-unelevated-button,\n    &.mat-mdc-raised-button,\n    &.mat-mdc-icon-button,\n    &.mat-mdc-fab {\n        &.cdk-keyboard-focused {\n            @include setGlobalKeyboardFocus();\n        }\n    }\n}\n.mat-button-no-uppercase .mat-button-wrapper {\n    text-transform: none;\n}\n.mat-calendar-table-header-divider {\n    display: none;\n}\n.mat-option {\n    font-size: 100%;\n    .mat-option-primary {\n        line-height: initial;\n        font-size: 90%;\n    }\n\n    .mat-option-secondary {\n        font-size: 75%;\n        line-height: initial;\n        color: $textLight;\n    }\n    &:hover:not(.mat-option-disabled),\n    .mat-option:focus:not(.mat-option-disabled) {\n        background-color: $buttonHoverBackground;\n    }\n    &.mat-focus-indicator.mat-active::before {\n        content: '';\n    }\n    &.mat-focus-indicator::before {\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        position: absolute;\n        pointer-events: none;\n        @include setGlobalKeyboardFocus($mode: 'border');\n    }\n}\n\nlabel .label-secondary {\n    font-size: 90%;\n    color: $textLight;\n}\n/* a badge (usually counter) inside an (icon) button\n */\n.mat-button-badge {\n    position: absolute;\n    right: -3px;\n    top: -3px;\n    color: $textOnPrimary;\n    background-color: $colorStatusNegative;\n    border-radius: 50%;\n    width: 16px;\n    height: 16px;\n    font-weight: bold;\n    font-size: 0.8em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.monaco-editor {\n    background-color: transparent !important;\n    mat-label,\n    mat-hint {\n        padding: 2px 0;\n        font-size: 75%;\n        color: $textLight;\n    }\n}\n.mat-card-subtitle,\nmat-hint,\nmat-slide-toggle .mdc-form-field label {\n    color: $textLight;\n}\n// prevent umlauts from cutting off\nmat-hint,\nmat-error {\n    font-size: $fontSizeSmall;\n    line-height: 1.5;\n}\n\n// Show toggle on the right place\n.toggle-reverse {\n    .mdc-form-field {\n        flex-direction: row-reverse;\n        gap: 10px;\n    }\n}\n.mat-slide-toggle-twoside {\n    display: flex;\n    align-items: center;\n    > mat-label {\n        color: $textLight;\n        padding: 0 8px;\n    }\n}\nmat-label.mat-label-standalone {\n    font-size: $fontSizeSmall;\n    color: $textLight;\n}\n/* fix for mat select icons */\n.mat-select-icon {\n    .mat-option-text {\n        display: flex;\n        align-items: center;\n        > i {\n            margin-right: 5px;\n        }\n    }\n}\nmat-select.mat-select-icon {\n    mat-select-trigger {\n        max-height: 22px;\n        display: flex;\n        align-items: center;\n        > i {\n            color: $textLight;\n            margin-right: 5px;\n        }\n    }\n    .mat-select-arrow-wrapper {\n        transform: none;\n    }\n}\n\n.mat-select-panel,\n.mat-autocomplete-panel {\n    .mat-option:not(.mat-option-disabled) {\n        color: $primary;\n    }\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n        background-color: $cardLightBackground;\n        font-weight: bold;\n    }\n}\n.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) {\n    background-color: var(--palette-primary-100) !important;\n    .mat-mdc-chip-remove {\n        color: $primary !important;\n        opacity: 1 !important;\n    }\n}\n.mat-chip-list {\n    .mat-chip.mat-standard-chip {\n        height: unset; // Override height: 1px\n        background-color: $primaryLight;\n        overflow: hidden;\n        &.indeterminate {\n            background: repeating-linear-gradient(\n                -45deg,\n                $primaryLight,\n                $primaryLight 5px,\n                rgba(0, 0, 0, 0.04) 5px,\n                rgba(0, 0, 0, 0.04) 10px\n            );\n            color: $textLight;\n        }\n        &.cdk-keyboard-focused {\n            @include setGlobalKeyboardFocus();\n        }\n        .mat-chip-remove {\n            // align somewhat townwards for better centering\n            line-height: 1.05;\n            color: $primary;\n            opacity: 1;\n        }\n    }\n}\n.mat-mdc-menu-panel {\n    min-height: initial !important;\n    overflow-x: hidden !important; // prevent scrollbars on FF\n}\n\n.cdk-drag-preview {\n    border-radius: 4px;\n    @include materialShadowBottom();\n}\n\n.cdk-drag-placeholder {\n    opacity: 0.5;\n}\n\n.cdk-drag-animating {\n    transition: transform $transitionNormal cubic-bezier(0, 0, 0.2, 1);\n}\nmat-form-field {\n    .mat-form-field-suffix {\n        > span {\n            position: relative;\n            top: -0.25em;\n            color: $textLight;\n            padding-left: 5px;\n        }\n    }\n    &.mat-form-field-disabled {\n        .mat-form-field-suffix {\n            > span {\n                color: $textLight;\n                opacity: 0.5;\n            }\n        }\n    }\n}\n\n@include contrastMode(global) {\n    // We cannot archive sufficient contrast through a Material theme since opacities for color\n    // values are hardcoded in the Material component's theme files --- independently of opacities\n    // given by the theme.\n    .mat-form-field-appearance-outline .mat-form-field-outline:not(.mat-form-field-outline-thick) {\n        color: rgba(black, 0.42);\n    }\n    .cdk-overlay-pane .suggestion-card,\n    .cdk-overlay-pane .mat-autocomplete-panel,\n    .cdk-overlay-pane .mat-mdc-menu-panel,\n    .cdk-overlay-pane .mat-tooltip {\n        outline: 1px solid rgba(black, 0.42);\n    }\n}\n","@import 'variables';\n\n$cardActionHeight: 77px;\n\n.dialog {\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    position: fixed;\n}\n.dialog-halign {\n    display: flex;\n    justify-content: center;\n}\n.dialog-valign {\n    display: flex;\n    align-items: center;\n}\n.globalProgress {\n    z-index: $dialogZIndex + 2;\n}\n.darken {\n    @include darken();\n    @include blurBackground();\n}\n.darken-light {\n    @include darkenLight();\n}\n.card {\n    z-index: $dialogZIndex + 1;\n    color: $textMain;\n    background-color: #fff !important;\n    transition: all $transitionNormal;\n}\n.center-card {\n    position: fixed !important;\n    top: 15%;\n    width: 500px;\n    left: 50%;\n    margin: auto !important;\n    margin-left: -250px !important;\n}\n/* keep compatibility with legacy dialogs */\n.card .card-content {\n    height: calc(100% - #{$cardActionHeight});\n    margin-bottom: 0;\n\n    pre {\n        white-space: pre-line;\n    }\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        margin: 1.5rem 0;\n    }\n    h1 {\n        font-size: 170%;\n    }\n    h2 {\n        font-size: 150%;\n    }\n    h3 {\n        font-size: 140%;\n    }\n    h4 {\n        font-size: 130%;\n    }\n    h5 {\n        font-size: 120%;\n    }\n    h6 {\n        font-size: 110%;\n    }\n    label:first-child {\n        padding-bottom: 7px;\n        display: inline-block;\n    }\n}\n.card.card-no-action {\n    .card-content {\n        height: 100%;\n    }\n    .card-action {\n        display: none !important;\n    }\n    //padding-bottom: 40px;\n}\n\n.card .card-action {\n    display: flex;\n    align-items: flex-end;\n    justify-items: right;\n    min-height: $cardActionHeight;\n    /* justify-content: space-between; */\n    flex-direction: row-reverse;\n    a {\n        max-width: 400px;\n        word-break: break-all;\n    }\n}\n.card .card-action-info {\n    align-items: center;\n    justify-content: center;\n}\n.card-action .card-content {\n    padding: $cardPadding !important;\n    padding-top: 32px !important;\n    background: linear-gradient(\n        to bottom,\n        $actionDialogBackground 0%,\n        $actionDialogBackground 60px,\n        transparent 60px,\n        transparent 100%\n    );\n}\n.card-actionbar .card-content {\n    padding-top: 32px;\n    background: linear-gradient(\n        to bottom,\n        $actionDialogBackground 0%,\n        $actionDialogBackground 120px,\n        transparent 120px,\n        transparent 100%\n    );\n}\n.card-action,\n.card-actionbar {\n    .card-title-actionbar {\n        position: relative;\n        top: -10px;\n        height: 60px;\n    }\n    .card-title,\n    .card-cancel {\n        font-size: 12pt;\n        position: relative;\n        top: -25px;\n        &:focus {\n            @include removeDefaultFocus();\n            i {\n                @include focusShadow();\n            }\n        }\n    }\n}\n\n.card-title {\n    word-break: break-all;\n    max-height: 48px;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    @include unselectableText();\n    .card-title-back {\n        color: $primary;\n        @include clickable();\n        margin-right: 15px;\n    }\n    .card-title-image {\n        width: auto;\n        height: 25px;\n        margin-right: 15px;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n}\n.center-card .card-scroll {\n    overflow-y: auto;\n    overflow-x: hidden;\n    @include iosScrolling();\n    padding-right: $cardPadding;\n    margin-right: $cardPadding * -1;\n    padding-left: $cardPadding;\n    margin-left: $cardPadding * -1;\n    height: calc(100% - 8px);\n\n    top: $cardPadding * -1;\n    position: relative;\n    padding-top: $cardPadding;\n    padding-bottom: $cardPadding;\n}\n.card-actionbar .card-scroll {\n    height: calc(100% - 68px);\n}\n.card-high {\n    top: 10%;\n    bottom: 10%;\n}\n\n.header-high {\n    background: linear-gradient(\n        to bottom,\n        $actionDialogBackground 0%,\n        $actionDialogBackground 80px,\n        transparent 80px,\n        transparent 100%\n    );\n\n    .card-title-info {\n        margin-top: -28px;\n        font-size: 9pt;\n        color: $textLight;\n        display: flex;\n        align-items: center;\n\n        img {\n            height: 20px;\n            width: auto;\n            margin-right: 14px;\n        }\n    }\n\n    .card-scroll {\n        top: 8px;\n        height: calc(100% - 28px);\n    }\n}\n.card-mwide {\n    width: 600px;\n    margin-left: -300px !important;\n}\n.card-wide {\n    width: 650px;\n    margin-left: -325px !important;\n}\n.card-xwide {\n    width: 700px;\n    margin-left: -350px !important;\n}\n.card-xxwide {\n    width: 800px;\n    margin-left: -400px !important;\n}\n.center-card .checkbox {\n    padding-top: 10px;\n}\n.card-title-element {\n    font-size: 140%;\n    font-weight: bold;\n    border-bottom: 1px solid #000;\n    padding-bottom: 10px;\n    padding-top: 8px;\n    float: left;\n    width: 100%;\n    background-color: $workspaceMetadataBackground;\n    i {\n        margin-left: 10px;\n        margin-right: 10px;\n        color: #666;\n        position: relative;\n        top: 5px;\n    }\n}\n.center-card .btn,\n.center-card .btn-flat {\n    float: right;\n    margin: 0 5px;\n}\n.card-cancel {\n    float: right;\n    padding-top: 10px;\n    @include clickable();\n}\n.dialog-right {\n    position: fixed;\n    z-index: 100;\n    top: 0;\n    right: 0;\n    height: 100%;\n    width: $dialogRightWidth;\n    background-color: #fff;\n    display: flex;\n    flex-direction: column;\n    @include materialShadow();\n    > .title {\n        display: flex;\n        align-items: center;\n        padding: 6px 10px 6px $cardPadding;\n        font-size: 110%;\n        color: $textMain;\n        background-color: $workspaceMetadataBackground;\n        word-break: break-all;\n        .label {\n            flex-grow: 1;\n            padding: 16px 0;\n        }\n        button {\n            float: right;\n        }\n    }\n    .content {\n        padding: 10px 0;\n        width: 100%;\n        flex-grow: 1;\n        overflow-x: hidden;\n        overflow-y: auto;\n    }\n}\n@mixin fullsizeCard() {\n    position: fixed;\n    width: 100%;\n    left: 0%;\n    margin-left: 0 !important;\n}\n@media screen and (max-width: ($mobileWidth + $mobileStage*1)) {\n    .card-mwide {\n        @include fullsizeCard();\n    }\n}\n\n@media screen and (max-width: ($mobileWidth + $mobileStage*2)) {\n    .card-wide {\n        @include fullsizeCard();\n    }\n}\n@media screen and (max-width: ($mobileWidth + $mobileStage*3)) {\n    .card-xwide {\n        @include fullsizeCard();\n    }\n}\n@media screen and (max-width: ($mobileWidth + $mobileStage*4)) {\n    .card-xxwide {\n        @include fullsizeCard();\n    }\n}\n@media screen and (max-width: ($mobileWidth)) {\n    .dialogOptions {\n        overflow: auto;\n        @include darken();\n        z-index: 151;\n        background: linear-gradient(\n            to top,\n            #ffffff 0,\n            #ffffff 120px,\n            $darkenColor 120px,\n            $darkenColor 100%\n        );\n    }\n}\n@media screen and (max-width: ($mobileWidth - $mobileStage*1)) {\n    .center-card {\n        @include fullsizeCard();\n    }\n    .card-low {\n        width: 90%;\n        left: 5%;\n    }\n    .center-card .btn,\n    .center-card .btn-flat {\n        margin: 0 0;\n        padding: 0 1.5rem;\n    }\n}\n@media screen and (max-width: ($mobileHeightLandscape)) {\n    .center-card .card-action .btn,\n    .center-card .card-action .btn-flat {\n        padding: 0 0.2rem;\n    }\n}\n@media screen and (max-height: ($mobileHeight)) {\n    .card:not(.card-low),\n    .card-high {\n        top: 0;\n        bottom: 0;\n        .scrollable {\n            height: 100%;\n        }\n    }\n}\n@media screen and (max-height: ($mobileHeight - $mobileStage*2)) {\n    .card-low {\n        top: 0;\n        bottom: 0;\n        .scrollable {\n            height: 100%;\n        }\n    }\n}\n","@mixin imageDisabledBlur() {\n    -webkit-filter: blur(3px);\n    filter: blur(3px);\n}\n@mixin shortenText() {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n@mixin materialShadowLarge($important: false) {\n    box-shadow: 0 10px 70px rgba(0, 0, 0, 0.15) if($important, !important, null);\n}\n@mixin limitLineLength($width) {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    max-width: $width;\n}\n@mixin unselectableText() {\n    cursor: default;\n    user-select: none;\n}\n@mixin iosScrolling() {\n    /* ios scrolling fix */\n    -webkit-overflow-scrolling: touch;\n}\n@mixin placeholder {\n    ::-webkit-input-placeholder {\n        @content;\n    }\n    :-moz-placeholder {\n        @content;\n    }\n    ::-moz-placeholder {\n        @content;\n    }\n    :-ms-input-placeholder {\n        @content;\n    }\n}\n@mixin setGlobalInsetFocus() {\n    //respect element border radius\n    @include removeDefaultFocus();\n    box-shadow: inset 0 0 0 $focusWidth $focusColor !important;\n    @media (pointer: coarse) {\n        box-shadow: none !important;\n    }\n}\n@mixin setGlobalKeyboardFocus($mode: 'outline', $color: $focusColor) {\n    //respect element border radius\n    @include removeDefaultFocus();\n    @if $mode== 'outline' {\n        outline: $focusWidth solid $color;\n        outline-offset: 2px;\n    } @else if $mode== 'border' {\n        border: $focusWidth solid $color;\n    }\n}\n@mixin setGlobalDashedFocus() {\n    @include removeDefaultFocus();\n    outline: $focusWidth dashed $focusColor;\n}\n\n@mixin focusShadow($dark: true, $strength: 0.1) {\n    @include removeDefaultFocus();\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    border: 0;\n    border-radius: 50%;\n    @if $dark==true {\n        -webkit-box-shadow: 0 0 0 10px rgba(0, 0, 0, $strength);\n        box-shadow: 0 0 0 10px rgba(0, 0, 0, 0.1);\n        background-color: rgba(0, 0, 0, 0.1);\n    } @else {\n        -webkit-box-shadow: 0 0 0 10px rgba(255, 255, 255, $strength);\n        box-shadow: 0 0 0 10px rgba(255, 255, 255, 0.1);\n        background-color: rgba(255, 255, 255, 0.1);\n    }\n}\n@mixin darken() {\n    background-color: $darkenColor;\n}\n@mixin darkenLight() {\n    background-color: $darkenLightColor;\n}\n@mixin blurBackground($radius: 5px) {\n    backdrop-filter: blur($radius);\n}\n@mixin setGlobalFocus($color: $focusColor) {\n    //respect element border radius\n    @include removeDefaultFocus();\n    box-shadow: 0 0 0 $focusWidth $color !important;\n}\n\n@mixin removeButtonDefaultStyles {\n    background: unset;\n    border: unset;\n    padding: unset;\n}\n\n@mixin afterPseudoElement {\n    position: relative;\n    &:after {\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        @content;\n    }\n}\n@import 'projects/edu-sharing-ui/assets/scss/mixins';\n","@import 'variables';\n\n.mdsCard {\n    .mdsExtended {\n        background-color: $workspaceMetadataBackground;\n        padding: 15px;\n        height: 45px;\n    }\n    .mdsExtended .switch {\n        float: right;\n    }\n    .mdsExtended .label {\n        float: left;\n    }\n}\n.templateLink,\n.licenseLink,\n.contributorsLink {\n    font-weight: bold;\n    text-transform: uppercase;\n    padding-top: 10px;\n    padding-bottom: 30px;\n    float: left;\n    width: 100%;\n    i {\n        position: relative;\n        top: 6px;\n    }\n}\n.contributorsLink {\n    padding-top: 0;\n}\n.mdsViewHeader {\n    font-size: 140%;\n    font-weight: bold;\n    border-bottom: 1px solid #000;\n    padding-bottom: 10px;\n    padding-top: 8px;\n    float: left;\n    width: 100%;\n    background-color: $workspaceMetadataBackground;\n    i {\n        margin-left: 10px;\n        margin-right: 10px;\n        color: #666;\n        position: relative;\n        top: 5px;\n    }\n}\n.mdsMainCard .mdsGroup {\n    background-color: #fff;\n}\nes-mds .mdsGroup {\n    width: 100%;\n    float: left;\n    padding: 25px;\n    padding-bottom: 5px;\n    > div > label,\n    .mdsPreview label {\n        display: inline-flex;\n        padding-bottom: 7px;\n        font-weight: bold;\n        .required {\n            padding-left: 3px;\n            font-size: 75%;\n            font-weight: bold;\n            display: inline-flex;\n            align-self: center;\n        }\n    }\n    .label-light {\n        color: $textVeryLight;\n        padding: 5px 10px;\n    }\n    > div {\n        padding: 15px 0px;\n    }\n    fieldset {\n        border: none;\n    }\n    .card {\n        padding: 0 !important;\n        padding-bottom: 20px !important;\n    }\n    .mdsNoPermissions {\n        color: $textLight;\n        font-size: 90%;\n        padding-top: 10px;\n        font-style: italic;\n    }\n    .radioVertical label,\n    .checkboxVertical label {\n        width: 100%;\n        float: left;\n    }\n    .checkboxVertical label {\n        margin: 5px 0;\n    }\n    .radioHorizontal label,\n    .checkboxHorizontal label {\n        padding-right: 10px;\n    }\n\n    .mdsWidget {\n        position: relative;\n        .bulk-enable {\n            display: flex;\n            justify-content: flex-end;\n            width: 100%;\n            position: absolute;\n            top: -30px;\n            label:not(:last-child) {\n                padding-right: 10px;\n            }\n            &.switch label {\n                align-items: center;\n                .lever {\n                    margin-right: 5px;\n                }\n            }\n        }\n        select {\n            margin-bottom: 20px;\n        }\n    }\n    .suggestionInput {\n        position: relative;\n        z-index: 130;\n    }\n    .suggestHighlight {\n        font-weight: bold;\n        color: $primary;\n    }\n    .suggestionMoreItems {\n        font-weight: bold;\n        text-align: center;\n    }\n    .suggestionNoMatches {\n        font-style: italic;\n        cursor: default;\n    }\n    .suggestionList {\n        position: absolute;\n        width: 100%;\n        margin-top: -18px;\n        top: 60px;\n    }\n    .suggestionListAll {\n        max-height: 300px;\n        overflow-y: auto;\n    }\n    .collection-item {\n        min-height: 36px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2; /* number of lines to show */\n        line-height: 2em; /* fallback */\n        max-height: 4em; /* fallback */\n    }\n\n    .suggestInput {\n        width: calc(100% - 25px);\n    }\n    .suggestInputNoOpen {\n        width: 100%;\n    }\n    .suggestInput,\n    .multivalueBadgesText {\n        margin-bottom: 10px;\n    }\n    .auto-suggest-field {\n        display: flex;\n        > .auto-suggest-field {\n            width: 100%;\n        }\n        input {\n            flex-grow: 1;\n        }\n        .btn-flat {\n            overflow: hidden;\n            height: 41px;\n            padding: 0.3em 1rem;\n            background: transparent;\n            position: absolute;\n            top: 0;\n            right: 0;\n            > i {\n                font-size: 24px;\n            }\n        }\n    }\n    .widget_range {\n        height: 50px;\n        margin: 0 10px;\n    }\n    .widget_duration {\n        width: 100%;\n        float: left;\n        padding-top: 10px;\n    }\n    .widget_multivalueGroup {\n        .widgetGroup {\n            display: flex;\n            align-items: center;\n            flex-wrap: wrap;\n            padding: 10px 0;\n            > div {\n                flex-grow: 1;\n                padding: 0 10px;\n            }\n        }\n    }\n    .widget_duration div.inputField {\n        padding-top: 5px;\n        width: 50px;\n        float: left;\n        text-align: center;\n    }\n    .widget_duration div.inputField input {\n        margin-top: -10px;\n    }\n    .widget_duration div.inputField label {\n        font-size: 70%;\n        position: relative;\n        top: -10px;\n    }\n    .widget_duration div.inputField span {\n        position: relative;\n        top: 18px;\n    }\n    .widget_duration div.inputSlider {\n        width: calc(100% - 170px);\n        float: right;\n        position: relative;\n        top: 35px;\n    }\n    .checkboxVertical {\n        input + label:before,\n        input + label:after {\n            top: 3px !important;\n        }\n        label {\n            height: auto;\n            img {\n                vertical-align: middle;\n            }\n            img,\n            .caption {\n                padding-right: 5px;\n            }\n            .description {\n                float: left;\n                width: 100%;\n                font-size: 80%;\n                line-height: 1.75em;\n            }\n        }\n    }\n    .widget_checkbox {\n        .inputTable {\n            align-items: flex-start;\n        }\n        .input-hint-bottom {\n            margin-top: 5px;\n        }\n    }\n    > label,\n    .widget_checkbox,\n    .mdsVersion {\n        float: left;\n        width: 100%;\n        padding-bottom: 15px;\n    }\n    .license {\n        .caption {\n            color: $textPrimary;\n            font-weight: bold;\n        }\n        img {\n            max-height: 20px;\n        }\n    }\n    .workflow_container {\n        .caption {\n            display: flex;\n            .mds-workflow-status {\n                width: 14px;\n                height: 14px;\n                align-self: center;\n                margin-right: 10px;\n                border-radius: 50%;\n            }\n        }\n    }\n    .version {\n        width: 100%;\n        float: left;\n        margin-top: 4px;\n        display: flex;\n        align-items: center;\n        #selectFileBtn {\n            margin-right: 40px;\n        }\n        #versionGroup {\n            flex-grow: 1;\n        }\n    }\n    #versionChooser {\n        padding-left: 20px;\n        position: relative;\n        top: 4px;\n    }\n    input[type='color'] {\n        width: 40px;\n        height: 40px;\n    }\n    input[type='checkbox'] + label {\n        display: inline;\n    }\n    .inputRange {\n        margin-top: 35px;\n        margin-bottom: 15px;\n        float: left;\n        width: calc(100% - 12px);\n    }\n    .inputTable {\n        display: flex;\n        width: 100%;\n        align-items: center;\n        flex-direction: column;\n        input {\n            display: flex;\n        }\n    }\n    .inputIcon {\n        display: flex;\n        margin-top: -14px;\n        margin-right: 10px;\n        color: #666;\n    }\n    .mdsAuthor {\n        float: left;\n        width: 100%;\n        .mdsAuthorFreetext,\n        .mdsAuthorPerson {\n            margin: 0 10px;\n        }\n        .materialize-textarea {\n            min-height: 2.5rem;\n            height: 2.5rem;\n            margin-top: 10px;\n        }\n    }\n    .childobjects_container {\n        > label {\n            font-weight: bold;\n        }\n        float: left;\n        width: calc(100% + 50px);\n        margin-left: -25px;\n        padding: 15px 25px;\n        background-color: $workspaceMetadataBackground;\n        .mdsChildobjects {\n            padding-bottom: 20px;\n            float: left;\n            width: 100%;\n            .btn-flat {\n                float: left;\n                margin-top: 10px;\n            }\n            .list {\n                padding: 10px 0;\n                float: left;\n                width: 100%;\n                > div {\n                    width: 100%;\n                    display: flex;\n                    align-items: center;\n                    padding: 6px 15px;\n                    cursor: default;\n                }\n                > div:hover {\n                    background-color: $itemSelectedBackground;\n                }\n                .icon {\n                    min-width: $tableIconSize;\n                    width: $tableIconSize;\n                    height: $tableIconSize;\n                    background: #fff;\n                    border-radius: 50%;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    margin-right: 12px;\n                    > img {\n                        width: 50%;\n                    }\n                }\n                .name {\n                    flex-grow: 1;\n                    @include shortenText();\n                    margin-right: 10px;\n                }\n                .license,\n                .edit,\n                .remove {\n                    margin: 0 5px;\n                    color: $primary;\n                    position: relative;\n                    top: 2px;\n                }\n            }\n        }\n    }\n    .mdsPreview {\n        width: 100%;\n        float: left;\n        .previewImage {\n            position: relative;\n            display: flex;\n            justify-content: center;\n            width: 100%;\n            .preview-deleted {\n                position: absolute;\n                background-color: rgba(255, 255, 255, 0.9);\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                i {\n                    margin-top: 18px;\n                    font-size: 39px;\n                }\n            }\n        }\n        label {\n            float: left;\n            text-align: left;\n        }\n        .changePreview {\n            float: right;\n            clear: both;\n            margin-bottom: 10px;\n        }\n        img,\n        .preview-deleted {\n            min-width: 40%;\n            width: 250px;\n            height: 175px;\n            object-fit: cover;\n        }\n    }\n}\n\n.treeGroup {\n    div {\n        float: left;\n        width: 100%;\n        padding-left: 4px;\n    }\n    [type='checkbox'] + label {\n        height: 35px;\n        top: 7px;\n        max-width: calc(100% - 40px);\n    }\n    .treeSelected {\n        /* Not working when scrolling */\n        background: $workspaceSelectedBackgroundEffect;\n        background-color: $itemSelectedBackground;\n        /*position: absolute;\n    left: 0;*/\n    }\n    div .treeIcon {\n        position: relative;\n        z-index: 1;\n        width: 30px;\n        height: 35px;\n        top: 7px;\n        i {\n            color: $textLight;\n            font-size: 16pt;\n        }\n    }\n    .treeGroup {\n        padding-left: 30px;\n    }\n}\n.mdsExtendedSearch {\n    margin: 0 -20px;\n    background: #fff;\n    padding: 10px 20px;\n    .switch {\n        margin-top: 10px;\n    }\n}\nes-mds .mdsEmbedded {\n    padding: 0;\n}\n\n/**\n  angular es-mds\n */\n\n.mat-mdc-autocomplete-panel,\n.suggestion-card,\nes-mds-editor-widget-facet-list {\n    mark {\n        font-weight: bold;\n        color: $primary;\n        background-color: transparent;\n    }\n}\n.mat-mdc-autocomplete-panel {\n    span {\n        color: $primary;\n    }\n}\n","@import 'variables';\n\n.datepicker-calendar {\n    @include materialShadow(true);\n    margin-bottom: 10px;\n    .datepicker-calendar-top {\n        background: $textLight !important;\n    }\n    .datepicker-calendar-container {\n        background: $backgroundColor !important;\n    }\n    .datepicker-calendar-month-section {\n        color: $primary !important;\n        font-weight: bold;\n    }\n    .day:hover,\n    .year:hover {\n        color: #fff !important;\n        background: $primary !important;\n    }\n    .selected {\n        background: #fff !important;\n    }\n    .today {\n        color: #fff !important;\n        background: $primary !important;\n        font-weight: bold;\n        border-radius: 4px !important;\n    }\n\n    #chevron-left,\n    #chevron-right {\n        fill: $primary !important;\n    }\n    .datepicker-buttons {\n        .u-is-secondary {\n            background: #fff !important;\n            color: $primary !important;\n            border: 1px solid $primary !important;\n        }\n        .u-is-primary {\n            background: $primary !important;\n            color: #fff !important;\n            border: none !important;\n        }\n    }\n}\n","/* Enable it via your custom variable '$customIcons' */\n@if variable-exists(customIcons) {\n    @if $customIcons == true {\n        @font-face {\n            font-family: 'Custom-Icons';\n            src: url('custom-icons.eot');\n            src: local('Custom-Icons'),\n                url('custom-icons.eot?1pib6e#iefix') format('embedded-opentype'),\n                url('custom-icons.ttf?1pib6e') format('truetype'),\n                url('custom-icons.woff?1pib6e') format('woff');\n            font-weight: normal;\n            font-style: normal;\n        }\n\n        .custom-icons {\n            /* use !important to prevent issues with browser extensions that change fonts */\n            font-family: 'Custom-Icons' !important;\n            speak: none;\n            font-size: 24px;\n            font-style: normal;\n            font-weight: normal;\n            font-variant: normal;\n            text-transform: none;\n            line-height: 1;\n\n            /* Enable Ligatures ================ */\n            letter-spacing: 0;\n            -webkit-font-feature-settings: 'liga';\n            -moz-font-feature-settings: 'liga=1';\n            -moz-font-feature-settings: 'liga';\n            -ms-font-feature-settings: 'liga' 1;\n            font-feature-settings: 'liga';\n            -webkit-font-variant-ligatures: discretionary-ligatures;\n            font-variant-ligatures: discretionary-ligatures;\n\n            /* Better Font Rendering =========== */\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n        }\n    }\n}\n","@font-face {\n    font-family: 'open_sansregular';\n    src: url('OpenSans-Regular-webfont.eot');\n    src: url('OpenSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),\n        url('OpenSans-Regular-webfont.woff') format('woff'),\n        url('OpenSans-Regular-webfont.ttf') format('truetype'),\n        url('OpenSans-Regular-webfont.svg#open_sansregular') format('svg');\n    font-weight: normal;\n    font-style: normal;\n}\n","@font-face {\n    font-family: 'open_sansbold';\n    src: url('OpenSans-Bold-webfont.eot');\n    src: url('OpenSans-Bold-webfont.eot?#iefix') format('embedded-opentype'),\n        url('OpenSans-Bold-webfont.woff') format('woff'),\n        url('OpenSans-Bold-webfont.ttf') format('truetype'),\n        url('OpenSans-Bold-webfont.svg#open_sansbold') format('svg');\n    font-weight: normal;\n    font-style: normal;\n}\n","/*! nouislider - 9.2.0 - 2017-01-11 10:35:35 */\n.noUi-target,\n.noUi-target * {\n    -webkit-touch-callout: none;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-user-select: none;\n    -ms-touch-action: none;\n    touch-action: none;\n    -ms-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\n.noUi-target {\n    position: relative;\n    direction: ltr;\n}\n.noUi-base {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n}\n.noUi-connect {\n    position: absolute;\n    right: 0;\n    top: 0;\n    left: 0;\n    bottom: 0;\n}\n.noUi-origin {\n    position: absolute;\n    height: 0;\n    width: 0;\n}\n.noUi-handle {\n    position: relative;\n    z-index: 1;\n}\n.noUi-state-tap .noUi-connect,\n.noUi-state-tap .noUi-origin {\n    -webkit-transition: top 0.3s, right 0.3s, bottom 0.3s, left 0.3s;\n    transition: top 0.3s, right 0.3s, bottom 0.3s, left 0.3s;\n}\n.noUi-state-drag * {\n    cursor: inherit !important;\n}\n.noUi-base,\n.noUi-handle {\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n}\n.noUi-horizontal {\n    height: 18px;\n}\n.noUi-horizontal .noUi-handle {\n    width: 34px;\n    height: 28px;\n    left: -17px;\n    top: -6px;\n}\n.noUi-vertical {\n    width: 18px;\n}\n.noUi-vertical .noUi-handle {\n    width: 28px;\n    height: 34px;\n    left: -6px;\n    top: -17px;\n}\n.noUi-target {\n    background: #fafafa;\n    border-radius: 4px;\n    border: 1px solid #d3d3d3;\n    box-shadow: inset 0 1px 1px #f0f0f0, 0 3px 6px -5px #bbb;\n}\n.noUi-connect {\n    background: #3fb8af;\n    box-shadow: inset 0 0 3px rgba(51, 51, 51, 0.45);\n    -webkit-transition: background 450ms;\n    transition: background 450ms;\n}\n.noUi-draggable {\n    cursor: ew-resize;\n}\n.noUi-vertical .noUi-draggable {\n    cursor: ns-resize;\n}\n.noUi-handle {\n    border: 1px solid #d9d9d9;\n    border-radius: 3px;\n    background: #fff;\n    cursor: default;\n    box-shadow: inset 0 0 1px #fff, inset 0 1px 7px #ebebeb, 0 3px 6px -3px #bbb;\n}\n.noUi-active {\n    box-shadow: inset 0 0 1px #fff, inset 0 1px 7px #ddd, 0 3px 6px -3px #bbb;\n}\n.noUi-handle:after,\n.noUi-handle:before {\n    content: '';\n    display: block;\n    position: absolute;\n    height: 14px;\n    width: 1px;\n    background: #e8e7e6;\n    left: 14px;\n    top: 6px;\n}\n.noUi-handle:after {\n    left: 17px;\n}\n.noUi-vertical .noUi-handle:after,\n.noUi-vertical .noUi-handle:before {\n    width: 14px;\n    height: 1px;\n    left: 6px;\n    top: 14px;\n}\n.noUi-vertical .noUi-handle:after {\n    top: 17px;\n}\n[disabled] .noUi-connect {\n    background: #b8b8b8;\n}\n[disabled] .noUi-handle,\n[disabled].noUi-handle,\n[disabled].noUi-target {\n    cursor: not-allowed;\n}\n.noUi-pips,\n.noUi-pips * {\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\n.noUi-pips {\n    position: absolute;\n    color: #999;\n}\n.noUi-value {\n    position: absolute;\n    text-align: center;\n}\n.noUi-value-sub {\n    color: #ccc;\n    font-size: 10px;\n}\n.noUi-marker {\n    position: absolute;\n    background: #ccc;\n}\n.noUi-marker-large,\n.noUi-marker-sub {\n    background: #aaa;\n}\n.noUi-pips-horizontal {\n    padding: 10px 0;\n    height: 80px;\n    top: 100%;\n    left: 0;\n    width: 100%;\n}\n.noUi-value-horizontal {\n    -webkit-transform: translate3d(-50%, 50%, 0);\n    transform: translate3d(-50%, 50%, 0);\n}\n.noUi-marker-horizontal.noUi-marker {\n    margin-left: -1px;\n    width: 2px;\n    height: 5px;\n}\n.noUi-marker-horizontal.noUi-marker-sub {\n    height: 10px;\n}\n.noUi-marker-horizontal.noUi-marker-large {\n    height: 15px;\n}\n.noUi-pips-vertical {\n    padding: 0 10px;\n    height: 100%;\n    top: 0;\n    left: 100%;\n}\n.noUi-value-vertical {\n    -webkit-transform: translate3d(0, 50%, 0);\n    transform: translate3d(0, 50%, 0);\n    padding-left: 25px;\n}\n.noUi-marker-vertical.noUi-marker {\n    width: 5px;\n    height: 2px;\n    margin-top: -1px;\n}\n.noUi-marker-vertical.noUi-marker-sub {\n    width: 10px;\n}\n.noUi-marker-vertical.noUi-marker-large {\n    width: 15px;\n}\n.noUi-tooltip {\n    display: block;\n    position: absolute;\n    border: 1px solid #d9d9d9;\n    border-radius: 3px;\n    background: #fff;\n    color: #000;\n    padding: 5px;\n    text-align: center;\n}\n.noUi-horizontal .noUi-tooltip {\n    -webkit-transform: translate(-50%, 0);\n    transform: translate(-50%, 0);\n    left: 50%;\n    bottom: 120%;\n}\n.noUi-vertical .noUi-tooltip {\n    -webkit-transform: translate(0, -50%);\n    transform: translate(0, -50%);\n    top: 50%;\n    right: 120%;\n}\n","@import '../app/core-ui-module/styles/variables';\n@import '../app/core-ui-module/styles/branding';\n\n*,\n::after,\n::before {\n    box-sizing: border-box;\n}\n\n.cdk-visually-hidden {\n    margin: unset; // Causes scroll bars on surrounding `overflow: auto` containers\n}\n\n.clickable {\n    @include clickable();\n}\n/**\n  ios fix for wrong positioned input cursor\n  nop: when enabled, it will break positio\n  font-smoothing: antialiased;n fixed dialog layouts.\n*/\n//html,body{ @include iosScrolling(); }\n\nhtml,\nbody {\n    font-family: $primaryFontFamily !important;\n    font-size: $primaryFontSize;\n    -webkit-font-smoothing: antialiased;\n    margin: 0;\n}\n// storybook no background\nbody:not(.sb-show-main) {\n    background-color: $backgroundColor;\n}\na {\n    color: $primary;\n    &.cdk-keyboard-focused {\n        @include setGlobalKeyboardFocus();\n    }\n}\n.action-title {\n    background-color: $actionDialogBackground;\n}\n.unclickable {\n    pointer-events: none;\n}\n.blue-label {\n    color: $primary;\n    font-weight: bold;\n    font-size: 80%;\n}\n.separator-line {\n    display: flex;\n    color: $textMediumLight;\n    &:before,\n    &:after {\n        display: flex;\n        flex-grow: 1;\n        content: '';\n        width: 0;\n        height: 1px;\n        background-color: $genericSeperatorLineColor;\n        margin: 9px 10px;\n    }\n    &:before {\n        margin-left: 0;\n    }\n    &:after {\n        margin-right: 0;\n    }\n}\n.center {\n    margin: 0 auto;\n}\nbutton.cdk-keyboard-focused {\n    @include setGlobalKeyboardFocus();\n}\n.mat-chip-group {\n    display: flex;\n    flex-direction: column;\n    > .secondary {\n        font-size: 80%;\n        color: $textLight;\n        margin-top: -3px;\n        min-height: 3px;\n    }\n}\n.workflowStatus {\n    width: 80px;\n    color: #fff;\n    font-weight: bold;\n    font-size: 8pt;\n    border-radius: 2px;\n    text-align: center;\n}\n.completer-row {\n    color: $textPrimary !important;\n    background: #fff !important;\n}\n.completer-selected-row,\n.completer-row:hover {\n    color: $textOnPrimary !important;\n    background: $primary !important;\n}\n.completer-dropdown {\n    @include materialShadow();\n    border: none !important;\n    margin-top: -20px !important;\n}\n.card-action .card-title,\n.card-action .card-cancel {\n    font-size: 12pt;\n    position: relative;\n    top: -25px;\n}\n.noElementsInfo {\n    color: #767676;\n    font-size: 110%;\n    width: 100%;\n    float: left;\n    text-align: center;\n    padding-top: 10px;\n}\n.uppercase {\n    text-transform: uppercase;\n}\n.input-hint-bottom {\n    margin-top: -15px;\n    color: $textLight;\n    font-size: 0.8em;\n}\n.focus-underline {\n    cursor: pointer;\n    &:focus {\n        box-shadow: none !important;\n        @include removeDefaultFocus();\n        padding-bottom: 2px;\n        border-bottom: 1px solid $focusColor;\n    }\n}\n.btn-circle {\n    padding: 10px;\n    height: 44px;\n    color: $primary;\n    background-color: #fff;\n    border-radius: 50%;\n    @include clickable();\n    @include materialShadowBottom();\n    margin-left: 8px;\n    float: left;\n    &:focus {\n        @include setGlobalInsetFocus();\n    }\n    i {\n        background-color: rgba(255, 255, 255, 0.75);\n        border-radius: 5pt;\n    }\n}\n.toolpermission-missing {\n    display: flex;\n    white-space: pre-line;\n    margin: 10px;\n    padding: 10px;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n}\nmat-label .required-marker {\n    color: darken($colorStatusNegative, 20%);\n}\n::placeholder {\n    color: $placeholderColor;\n    // By default, Firefox reduces opacity of placeholders.\n    opacity: 1;\n}\n@media screen and (max-width: $mobileWidth) {\n    .hidemobile {\n        display: none;\n    }\n}\n\ninput[type='checkbox']:not(:checked),\ninput[type='checkbox']:checked {\n    &.mat-checkbox-input {\n        left: 50%; // Undo materialize styling and reapply standard material style.\n    }\n}\n\n.cdk-drag:not(.cdk-drag-disabled) {\n    // Fixes a bug where Firefox won't fire mouseenter/-leave events while dragging. The bug only\n    // occurs in combination with `overflow: hidden`.\n    user-select: none;\n}\n.es-nodes-active-drop-target-accept {\n    @include afterPseudoElement {\n        outline: 2px dashed $colorStatusPositive;\n        outline-offset: -2px;\n    }\n}\n.es-nodes-active-drop-target-deny {\n    @include afterPseudoElement {\n        outline: 2px dashed $colorStatusNegative;\n        outline-offset: -2px;\n    }\n}\n","@import '../assets/fonts/opensans_regular/stylesheet.css';\n@import '../assets/fonts/opensans_bold/stylesheet.css';\n@import '../assets/css/nouislider.min.css';\n\n@import 'globals.scss';\n@import 'override-core.scss';\n@import 'override.scss';\n","/**\n  anything that do not match up with the core-ui-module globals\n*/\n\n.dialog-right {\n    top: var(--mainnavHeight);\n    height: calc(100% - var(--mainnavHeight));\n}\n","/* override styles */\n","/* You can add global styles to this file, and also import other style files */\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68]}