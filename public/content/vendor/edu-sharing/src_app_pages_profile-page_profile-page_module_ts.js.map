{"version":3,"file":"src_app_pages_profile-page_profile-page_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACS;;;AAEhE,MAAME,MAAM,GAAW,CACnB;EACIC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEH,yEAAoBA;CAClC,CACJ;AAMK,MAAOI,wBAAwB;EAAA,QAAAC,CAAA;qBAAxBD,wBAAwB;EAAA;EAAA,QAAAE,EAAA;UAAxBF;EAAwB;EAAA,QAAAG,EAAA;cAHvBR,yDAAY,CAACS,QAAQ,CAACP,MAAM,CAAC,EAC7BF,yDAAY;EAAA;;;sHAEbK,wBAAwB;IAAAK,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFvBZ,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbqC;AASnC;AASW;AAIO;AACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICvBvDuB,6DAAA,aAAqC;IACnCA,wDAAA,aAAkC;IAOpCA,2DAAA,EAAM;;;;;IASEA,wDAAA,cAKE;;;;IAFAA,yDAAA,QAAAK,MAAA,CAAAC,IAAA,CAAAC,OAAA,CAAAC,MAAA,sCAAAR,4DAAA,CAA+D;;;;;IAGjEA,wDAAA,cAKE;;;;IAFAA,yDAAA,QAAAU,MAAA,CAAAJ,IAAA,CAAAC,OAAA,CAAAC,MAAA,sCAAAR,4DAAA,CAA+D;;;;;IAGjEA,wDAAA,cAAmF;;;;IAA7BA,yDAAA,QAAAW,MAAA,CAAAC,WAAA,EAAAZ,4DAAA,CAAmB;;;;;IAEzEA,wDAAA,uBAMgB;;;;IAJdA,yDAAA,QAAgB;IAChBA,yDAAA,mCAAkC,qDAAAc,MAAA,CAAAC,OAAA;;;;;;IAIpCf,6DAAA,iBAAsF;IAAvBA,yDAAA,mBAAAiB,sEAAA;MAAAjB,4DAAA,CAAAmB,IAAA;MAAA,MAAAC,OAAA,GAAApB,4DAAA;MAAA,OAAAA,0DAAA,CAAAoB,OAAA,CAAAG,IAAA,GAAgB,KAAK;IAAA,EAAC;IACnFvB,wDAAA,YAAsB;IAAAA,6DAAA,WAAM;IAAAA,qDAAA,GAAwC;;IAAAA,2DAAA,EAAO;;;IAA/CA,wDAAA,GAAwC;IAAxCA,gEAAA,CAAAA,0DAAA,+BAAwC;;;;;IAEtEA,wDAAA,yBAA6D;;;;IAA/BA,yDAAA,SAAA4B,MAAA,CAAAtB,IAAA,CAAa;;;;;IAC3CN,wDAAA,yBAA2F;;;;IAA9DA,yDAAA,SAAA6B,MAAA,CAAAC,QAAA,CAAiB,gBAAAD,MAAA,CAAAE,UAAA;;;;;;IAa5C/B,6DAAA,iBAA+D;IAAxBA,yDAAA,mBAAAgC,4EAAA;MAAAhC,4DAAA,CAAAiC,IAAA;MAAA,MAAAC,OAAA,GAAAlC,4DAAA;MAAA,OAASA,0DAAA,CAAAkC,OAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAC5DnC,wDAAA,YAAuB;IACzBA,2DAAA,EAAS;;;;;;IAbXA,6DAAA,cAAqC;IAIjCA,yDAAA,oBAAAoC,mEAAAC,MAAA;MAAArC,4DAAA,CAAAsC,IAAA;MAAA,MAAAC,OAAA,GAAAvC,4DAAA;MAAA,OAAUA,0DAAA,CAAAuC,OAAA,CAAAC,YAAA,CAAAH,MAAA,CAAoB;IAAA,EAAC;IAHjCrC,2DAAA,EAME;IACFA,6DAAA,cAAwD;IAAzBA,yDAAA,mBAAAyC,gEAAA;MAAAzC,4DAAA,CAAAsC,IAAA;MAAA,MAAAI,IAAA,GAAA1C,0DAAA;MAAA,OAASA,0DAAA,CAAA0C,IAAA,CAAAE,KAAA,EAAc;IAAA,EAAC;IACrD5C,6DAAA,WAAM;IAAAA,qDAAA,GAAuC;;IAAAA,2DAAA,EAAO;IAEtDA,yDAAA,IAAA8C,mDAAA,qBAES;IACX9C,2DAAA,EAAM;;;;IALIA,wDAAA,GAAuC;IAAvCA,gEAAA,CAAAA,0DAAA,8BAAuC;IAE3BA,wDAAA,GAAiB;IAAjBA,yDAAA,SAAA+C,MAAA,CAAAC,SAAA,GAAiB;;;;;IAOrChD,6DAAA,cAA6C;IACDA,qDAAA,GAAwB;IAAAA,2DAAA,EAAI;;;;IAAnEA,wDAAA,GAAsC;IAAtCA,qEAAA,oBAAAkD,OAAA,CAAA5C,IAAA,CAAAC,OAAA,CAAA4C,KAAA,MAAAnD,4DAAA,CAAsC;IAACA,wDAAA,GAAwB;IAAxBA,gEAAA,CAAAkD,OAAA,CAAA5C,IAAA,CAAAC,OAAA,CAAA4C,KAAA,CAAwB;;;;;IAHtEnD,6DAAA,UAAmB;IACCA,qDAAA,GAA0B;;IAAAA,2DAAA,EAAM;IAClDA,yDAAA,IAAAoD,gDAAA,kBAEM;IAIRpD,2DAAA,EAAM;;;;IAPcA,wDAAA,GAA0B;IAA1BA,gEAAA,CAAAA,0DAAA,OAAAqD,OAAA,CAAA/C,IAAA,EAA0B;IACtCN,wDAAA,GAAwB;IAAxBA,yDAAA,SAAAqD,OAAA,CAAA/C,IAAA,CAAAC,OAAA,CAAA4C,KAAA,CAAwB;;;;;;IAOhCnD,6DAAA,UAAkB;IAICA,qDAAA,GAA+B;;IAAAA,2DAAA,EAAY;IACtDA,6DAAA,gBAAyE;IAA7CA,yDAAA,2BAAAsD,0EAAAjB,MAAA;MAAArC,4DAAA,CAAAuD,IAAA;MAAA,MAAAC,OAAA,GAAAxD,4DAAA;MAAA,OAAaA,0DAAA,CAAAwD,OAAA,CAAA1B,QAAA,CAAAvB,OAAA,CAAAkD,KAAA,CAAAC,KAAA,GAAArB,MAAA,CACtD;IAAA,EADmF;IAAtErC,2DAAA,EAAyE;IAG7EA,6DAAA,cAAuB;IAERA,qDAAA,IAAkC;;IAAAA,2DAAA,EAAY;IACzDA,6DAAA,iBAAuE;IAA3CA,yDAAA,2BAAA2D,2EAAAtB,MAAA;MAAArC,4DAAA,CAAAuD,IAAA;MAAA,MAAAK,OAAA,GAAA5D,4DAAA;MAAA,OAAaA,0DAAA,CAAA4D,OAAA,CAAA9B,QAAA,CAAAvB,OAAA,CAAAsD,SAAA,GAAAxB,MAAA,CACtD;IAAA,EADiF;IAApErC,2DAAA,EAAuE;IAG3EA,6DAAA,eAAqB;IAENA,qDAAA,IAAiC;;IAAAA,2DAAA,EAAY;IACxDA,6DAAA,iBAAsE;IAA1CA,yDAAA,2BAAA8D,2EAAAzB,MAAA;MAAArC,4DAAA,CAAAuD,IAAA;MAAA,MAAAQ,OAAA,GAAA/D,4DAAA;MAAA,OAAaA,0DAAA,CAAA+D,OAAA,CAAAjC,QAAA,CAAAvB,OAAA,CAAAyD,QAAA,GAAA3B,MAAA,CACtD;IAAA,EADgF;IAAnErC,2DAAA,EAAsE;IAI5EA,6DAAA,eAA8B;IAEfA,qDAAA,IAA8B;;IAAAA,2DAAA,EAAY;IACrDA,6DAAA,iBAAoE;IAAvCA,yDAAA,2BAAAiE,2EAAA5B,MAAA;MAAArC,4DAAA,CAAAuD,IAAA;MAAA,MAAAW,OAAA,GAAAlE,4DAAA;MAAA,OAAaA,0DAAA,CAAAkE,OAAA,CAAApC,QAAA,CAAAvB,OAAA,CAAA4C,KAAA,GAAAd,MAAA,CACrD;IAAA,EAD4E;IAAjErC,2DAAA,EAAoE;IAEtEA,6DAAA,4BAKC;IADCA,yDAAA,2BAAAmE,sFAAA9B,MAAA;MAAArC,4DAAA,CAAAuD,IAAA;MAAA,MAAAa,OAAA,GAAApE,4DAAA;MAAA,OAAaA,0DAAA,CAAAoE,OAAA,CAAAC,eAAA,CAAAC,SAAA,GAAAjC,MAAA,CACrB;IAAA,EAD+C;;IAEvCrC,6DAAA,qBAAmC;IAAAA,qDAAA,IAEjC;;IAAAA,2DAAA,EAAY;;;;IA9BDA,wDAAA,GAA+B;IAA/BA,gEAAA,CAAAA,0DAAA,uBAA+B;IACdA,wDAAA,GAA0C;IAA1CA,yDAAA,YAAAuE,OAAA,CAAAzC,QAAA,CAAAvB,OAAA,CAAAkD,KAAA,CAAAC,KAAA,CAA0C;IAK3D1D,wDAAA,GAAkC;IAAlCA,gEAAA,CAAAA,0DAAA,2BAAkC;IACjBA,wDAAA,GAAwC;IAAxCA,yDAAA,YAAAuE,OAAA,CAAAzC,QAAA,CAAAvB,OAAA,CAAAsD,SAAA,CAAwC;IAKzD7D,wDAAA,GAAiC;IAAjCA,gEAAA,CAAAA,0DAAA,0BAAiC;IAChBA,wDAAA,GAAuC;IAAvCA,yDAAA,YAAAuE,OAAA,CAAAzC,QAAA,CAAAvB,OAAA,CAAAyD,QAAA,CAAuC;IAM1DhE,wDAAA,GAA8B;IAA9BA,gEAAA,CAAAA,0DAAA,uBAA8B;IACZA,wDAAA,GAAoC;IAApCA,yDAAA,YAAAuE,OAAA,CAAAzC,QAAA,CAAAvB,OAAA,CAAA4C,KAAA,CAAoC;IAIjEnD,wDAAA,GAAoE;IAApEA,oEAAA,eAAAA,0DAAA,gDAAoE;IADpEA,yDAAA,2BAAgC,YAAAuE,OAAA,CAAAF,eAAA,CAAAC,SAAA,aAAAC,OAAA,CAAAF,eAAA,CAAAC,SAAA;IAKGtE,wDAAA,GAEjC;IAFiCA,gEAAA,CAAAA,0DAAA,8CAEjC;;;;;;IAKNA,6DAAA,iBAA6D;IAAtBA,yDAAA,mBAAAyE,sEAAA;MAAAzE,4DAAA,CAAA0E,IAAA;MAAA,MAAAC,OAAA,GAAA3E,4DAAA;MAAA,OAASA,0DAAA,CAAA2E,OAAA,CAAAC,SAAA,EAAW;IAAA,EAAC;IAC1D5E,qDAAA,GACF;;IAAAA,2DAAA,EAAS;;;IADPA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,oBACF;;;;;;IAkCAA,6DAAA,iBAMC;IADCA,yDAAA,mBAAA8E,4EAAA;MAAA9E,4DAAA,CAAA+E,IAAA;MAAA,MAAAC,OAAA,GAAAhF,4DAAA;MAAA,OAASA,0DAAA,CAAAgF,OAAA,CAAAC,SAAA,EAAW;IAAA,EAAC;IAErBjF,qDAAA,GACF;;IAAAA,2DAAA,EAAS;;;IADPA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,6BACF;;;;;;IACAA,6DAAA,iBAMC;IADCA,yDAAA,mBAAAkF,4EAAA;MAAAlF,4DAAA,CAAAmF,IAAA;MAAA,MAAAC,OAAA,GAAApF,4DAAA;MAAA,OAAAA,0DAAA,CAAAoF,OAAA,CAAAC,SAAA,GAAqB,KAAK;IAAA,EAAC;IAE3BrF,qDAAA,GACF;;IAAAA,2DAAA,EAAS;;;IADPA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,oCACF;;;;;IAlBFA,6DAAA,cAAuD;IACrDA,yDAAA,IAAAsF,mDAAA,qBAQS;IACTtF,yDAAA,IAAAuF,mDAAA,qBAQS;IACXvF,2DAAA,EAAM;;;;IAdDA,wDAAA,GAAyB;IAAzBA,yDAAA,UAAAwF,OAAA,CAAAH,SAAA,KAAAG,OAAA,CAAAjE,IAAA,CAAyB;IASzBvB,wDAAA,GAAe;IAAfA,yDAAA,SAAAwF,OAAA,CAAAH,SAAA,CAAe;;;;;;IAMpBrF,6DAAA,cAA0C;IAE3BA,qDAAA,GAAwC;;IAAAA,2DAAA,EAAY;IAC/DA,6DAAA,mBAOC;IADCA,yDAAA,2BAAAyF,6EAAApD,MAAA;MAAArC,4DAAA,CAAA0F,IAAA;MAAA,MAAAC,OAAA,GAAA3F,4DAAA;MAAA,OAAaA,0DAAA,CAAA2F,OAAA,CAAA7D,QAAA,CAAAvB,OAAA,CAAAqF,KAAA,GAAAvD,MAAA,CACrB;IAAA,EAD4C;IACrCrC,2DAAA,EAAW;IAEdA,6DAAA,cAA4B;IACgBA,yDAAA,mBAAA6F,mEAAA;MAAA7F,4DAAA,CAAA0F,IAAA;MAAA,MAAAI,OAAA,GAAA9F,4DAAA;MAAA,OAASA,0DAAA,CAAA8F,OAAA,CAAAlB,SAAA,EAAW;IAAA,EAAC;IAC7D5E,qDAAA,GACF;;IAAAA,2DAAA,EAAS;;;;IAbEA,wDAAA,GAAwC;IAAxCA,gEAAA,CAAAA,0DAAA,+BAAwC;IAOjDA,wDAAA,GAAoC;IAApCA,yDAAA,YAAA+F,OAAA,CAAAjE,QAAA,CAAAvB,OAAA,CAAAqF,KAAA,CAAoC;IAKpC5F,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,oBACF;;;;;IAIFA,6DAAA,cAAgD;IAAAA,qDAAA,GAAwB;IAAAA,2DAAA,EAAM;;;;IAA9BA,wDAAA,GAAwB;IAAxBA,gEAAA,CAAAgG,OAAA,CAAA1F,IAAA,CAAAC,OAAA,CAAAqF,KAAA,CAAwB;;;;;IACxE5F,6DAAA,cAA+C;IAC7CA,qDAAA,GACF;;IAAAA,2DAAA,EAAM;;;;IADJA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,8BAAAiG,OAAA,CAAAC,IAAA,qBACF;;;;;IAJFlG,6DAAA,cAAsC;IACpCA,yDAAA,IAAAmG,gDAAA,kBAA8E;IAC9EnG,yDAAA,IAAAoG,gDAAA,kBAEM;IACRpG,2DAAA,EAAM;;;;IAJEA,wDAAA,GAAwB;IAAxBA,yDAAA,SAAAqG,OAAA,CAAA/F,IAAA,CAAAC,OAAA,CAAAqF,KAAA,CAAwB;IACxB5F,wDAAA,GAAyB;IAAzBA,yDAAA,UAAAqG,OAAA,CAAA/F,IAAA,CAAAC,OAAA,CAAAqF,KAAA,CAAyB;;;;;IAU7B5F,wDAAA,YAA8D;;;;;IAC9DA,wDAAA,YAAgE;;;;;;IAGpEA,6DAAA,cAA2F;IACzFA,wDAAA,0BAEmB;;IACnBA,6DAAA,yBAAoC;IACvBA,qDAAA,GAAiC;;IAAAA,2DAAA,EAAY;IACxDA,6DAAA,gBAME;IAHAA,yDAAA,2BAAAsG,gFAAAjE,MAAA;MAAArC,4DAAA,CAAAuG,IAAA;MAAA,MAAAC,OAAA,GAAAxG,4DAAA;MAAA,OAAaA,0DAAA,CAAAwG,OAAA,CAAA1E,QAAA,CAAAvB,OAAA,CAAAkD,KAAA,CAAAgD,KAAA,GAAApE,MAAA,CACrB;IAAA,EADkD;IAH5CrC,2DAAA,EAME;IACFA,wDAAA,mBAAwE;;IAC1EA,2DAAA,EAAiB;IACjBA,6DAAA,0BAAoC;IACvBA,qDAAA,IAAmC;;IAAAA,2DAAA,EAAY;IAC1DA,6DAAA,iBAME;IAHAA,yDAAA,2BAAA0G,iFAAArE,MAAA;MAAArC,4DAAA,CAAAuG,IAAA;MAAA,MAAAI,OAAA,GAAA3G,4DAAA;MAAA,OAAaA,0DAAA,CAAA2G,OAAA,CAAA7E,QAAA,CAAAvB,OAAA,CAAAkD,KAAA,CAAAmD,MAAA,GAAAvE,MAAA,CACrB;IAAA,EADmD;IAH7CrC,2DAAA,EAME;IACFA,wDAAA,oBAA0E;;IAC5EA,2DAAA,EAAiB;IACjBA,6DAAA,eAA4B;IACgBA,yDAAA,mBAAA6G,0EAAA;MAAA7G,4DAAA,CAAAuG,IAAA;MAAA,MAAAO,OAAA,GAAA9G,4DAAA;MAAA,OAASA,0DAAA,CAAA8G,OAAA,CAAAC,iBAAA,EAAmB;IAAA,EAAC;IACrE/G,qDAAA,IACF;;IAAAA,2DAAA,EAAS;;;;IA7BkBA,yDAAA,aAAAgH,OAAA,CAAAC,iBAAA,CAA8B;IAEzDjH,wDAAA,GAAyD;IAAzDA,oEAAA,YAAAA,0DAAA,sCAAyD;IAG9CA,wDAAA,GAAiC;IAAjCA,gEAAA,CAAAA,0DAAA,yBAAiC;IAI1CA,wDAAA,GAA0C;IAA1CA,yDAAA,YAAAgH,OAAA,CAAAlF,QAAA,CAAAvB,OAAA,CAAAkD,KAAA,CAAAgD,KAAA,CAA0C;IAIlCzG,wDAAA,GAAkD;IAAlDA,oEAAA,cAAAA,0DAAA,+BAAAA,6DAAA,CAAkD;IAGjDA,wDAAA,GAAmC;IAAnCA,gEAAA,CAAAA,0DAAA,4BAAmC;IAI5CA,wDAAA,GAA2C;IAA3CA,yDAAA,YAAAgH,OAAA,CAAAlF,QAAA,CAAAvB,OAAA,CAAAkD,KAAA,CAAAmD,MAAA,CAA2C;IAInC5G,wDAAA,GAAoD;IAApDA,oEAAA,cAAAA,0DAAA,kCAAAA,6DAAA,CAAoD;IAI5DA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,sBACF;;;;;;IAtCNA,6DAAA,cAAuD;IAEhBA,yDAAA,mBAAAmH,mEAAA;MAAAnH,4DAAA,CAAAoH,IAAA;MAAA,MAAAC,OAAA,GAAArH,4DAAA;MAAA,OAAAA,0DAAA,CAAAqH,OAAA,CAAAJ,iBAAA,IAAAI,OAAA,CAAAJ,iBAAA;IAAA,EAAgD;IACjFjH,wDAAA,YAA4B;IAC5BA,6DAAA,WAAM;IAAAA,qDAAA,GAAwD;;IAAAA,2DAAA,EAAO;IACrEA,yDAAA,IAAAsH,8CAAA,gBAA8D;IAC9DtH,yDAAA,IAAAuH,8CAAA,gBAAgE;IAClEvH,2DAAA,EAAS;IAEXA,yDAAA,IAAAwH,gDAAA,oBA+BM;IACRxH,2DAAA,EAAM;;;;IArCMA,wDAAA,GAAwD;IAAxDA,gEAAA,CAAAA,0DAAA,+CAAwD;IAC7BA,wDAAA,GAAuB;IAAvBA,yDAAA,SAAAyH,OAAA,CAAAR,iBAAA,CAAuB;IACtBjH,wDAAA,GAAwB;IAAxBA,yDAAA,UAAAyH,OAAA,CAAAR,iBAAA,CAAwB;IAGxDjH,wDAAA,GAAuB;IAAvBA,yDAAA,SAAAyH,OAAA,CAAAR,iBAAA,CAAuB;;;;;IAoCzBjH,wDAAA,YAA6C;;;;;IAC7CA,wDAAA,YAAiD;;;;;IAEjDA,wDAAA,YAAgF;;;;;IAChFA,wDAAA,YAA8E;;;;;;IAGlFA,6DAAA,cAAyE;IAIrEA,yDAAA,yBAAA0H,2FAAArF,MAAA;MAAArC,4DAAA,CAAA2H,IAAA;MAAA,MAAAC,OAAA,GAAA5H,4DAAA;MAAA,OAAAA,0DAAA,CAAA4H,OAAA,CAAAC,WAAA,GAAAxF,MAAA;IAAA,EAAuB;;IAGxBrC,2DAAA,EAAoB;IAErBA,6DAAA,gCAQC;IAHCA,yDAAA,yBAAA8H,2FAAAzF,MAAA;MAAArC,4DAAA,CAAA2H,IAAA;MAAA,MAAAI,OAAA,GAAA/H,4DAAA;MAAA,OAAAA,0DAAA,CAAA+H,OAAA,CAAAC,QAAA,GAAA3F,MAAA;IAAA,EAAoB;;;IAGrBrC,2DAAA,EAAoB;IACrBA,6DAAA,cAA4B;IAKxBA,yDAAA,mBAAAiI,0EAAA;MAAAjI,4DAAA,CAAA2H,IAAA;MAAA,MAAAO,OAAA,GAAAlI,4DAAA;MAAA,OAASA,0DAAA,CAAAkI,OAAA,CAAAC,YAAA,EAAc;IAAA,EAAC;IAExBnI,qDAAA,GACF;;IAAAA,2DAAA,EAAS;;;;;IA1BgCA,yDAAA,aAAAoI,OAAA,CAAAC,cAAA,CAA2B;IAEpErI,wDAAA,GAAwC;IAAxCA,oEAAA,UAAAA,0DAAA,wBAAwC;IACxCA,yDAAA,0BAAyB,UAAAoI,OAAA,CAAAP,WAAA;IAQzB7H,wDAAA,GAAwC;IAAxCA,oEAAA,UAAAA,0DAAA,wBAAwC;IACxCA,oEAAA,SAAAA,0DAAA,yBAAwC;IACxCA,yDAAA,yBAAwB,UAAAoI,OAAA,CAAAJ,QAAA;IAStBhI,wDAAA,GAA2E;IAA3EA,yDAAA,cAAAoI,OAAA,CAAAP,WAAA,CAAAS,IAAA,MAAAC,IAAA,CAAAC,gBAAA,YAA2E;IAG3ExI,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,sBACF;;;;;;IApCNA,6DAAA,cAA2E;IAEpCA,yDAAA,mBAAAyI,mEAAA;MAAAzI,4DAAA,CAAA0I,IAAA;MAAA,MAAAC,OAAA,GAAA3I,4DAAA;MAAA,OAASA,0DAAA,CAAA2I,OAAA,CAAAC,YAAA,EAAc;IAAA,EAAC;IACzD5I,yDAAA,IAAA6I,8CAAA,gBAA6C;IAC7C7I,yDAAA,IAAA8I,8CAAA,gBAAiD;IACjD9I,6DAAA,WAAM;IAAAA,qDAAA,GAAmC;;IAAAA,2DAAA,EAAO;IAChDA,yDAAA,IAAA+I,8CAAA,gBAAgF;IAChF/I,yDAAA,IAAAgJ,8CAAA,gBAA8E;IAChFhJ,2DAAA,EAAS;IAEXA,yDAAA,KAAAiJ,iDAAA,oBA4BM;IACRjJ,2DAAA,EAAM;;;;IApCIA,wDAAA,GAAqB;IAArBA,yDAAA,UAAAkJ,OAAA,CAAAb,cAAA,CAAqB;IACrBrI,wDAAA,GAAoB;IAApBA,yDAAA,SAAAkJ,OAAA,CAAAb,cAAA,CAAoB;IAClBrI,wDAAA,GAAmC;IAAnCA,gEAAA,CAAAA,0DAAA,0BAAmC;IACYA,wDAAA,GAAqB;IAArBA,yDAAA,UAAAkJ,OAAA,CAAAb,cAAA,CAAqB;IACtBrI,wDAAA,GAAoB;IAApBA,yDAAA,SAAAkJ,OAAA,CAAAb,cAAA,CAAoB;IAGtErI,wDAAA,GAAoB;IAApBA,yDAAA,SAAAkJ,OAAA,CAAAb,cAAA,CAAoB;;;;;;;;;;IAtOhCrI,6DAAA,aAAmC;IAG7BA,qDAAA,GACF;;;IAAAA,2DAAA,EAAK;IACLA,6DAAA,aAA0F;;IACxFA,wDAAA,aAAoC;IACpCA,yDAAA,IAAAmJ,yCAAA,kBAKE;IACFnJ,yDAAA,KAAAoJ,0CAAA,kBAKE;IACFpJ,yDAAA,KAAAqJ,0CAAA,kBAAmF;IAEnFrJ,yDAAA,KAAAsJ,mDAAA,2BAMgB;IAChBtJ,yDAAA,KAAAuJ,6CAAA,qBAES;IACTvJ,yDAAA,KAAAwJ,qDAAA,6BAA6D;IAC7DxJ,yDAAA,KAAAyJ,qDAAA,6BAA2F;IAE3FzJ,yDAAA,KAAA0J,0CAAA,kBAcM;IAEN1J,yDAAA,KAAA2J,0CAAA,kBAQM;IACN3J,yDAAA,KAAA4J,0CAAA,oBAqCM;IACN5J,6DAAA,eAAkB;IAChBA,yDAAA,KAAA6J,6CAAA,qBAES;IACX7J,2DAAA,EAAM;IAERA,6DAAA,eAA6B;IAIrBA,qDAAA,IACF;;IAAAA,2DAAA,EAAM;IACNA,6DAAA,eAAmB;IACjBA,qDAAA,IACF;IAAAA,2DAAA,EAAM;IAERA,6DAAA,WAAK;IAEDA,qDAAA,IACF;;IAAAA,2DAAA,EAAM;IACNA,6DAAA,eAAmB;IACjBA,qDAAA,IACF;IAAAA,2DAAA,EAAM;IAERA,6DAAA,WAAK;IAEDA,qDAAA,IACF;;IAAAA,2DAAA,EAAM;IACNA,6DAAA,eAAmB;IACjBA,qDAAA,IACF;IAAAA,2DAAA,EAAM;IAIZA,6DAAA,eAAmB;IACjBA,wDAAA,aAA0C;IAC1CA,yDAAA,KAAA8J,0CAAA,kBAmBM;IACN9J,yDAAA,KAAA+J,0CAAA,mBAiBM;IACN/J,yDAAA,KAAAgK,0CAAA,kBAKM;IACRhK,2DAAA,EAAM;IACNA,yDAAA,KAAAiK,0CAAA,mBAyCM;IACNjK,yDAAA,KAAAkK,0CAAA,mBAuCM;IACRlK,2DAAA,EAAM;;;;;;;IAjQFA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,0BAAAA,8DAAA,KAAAqK,GAAA,EAAArK,0DAAA,QAAAsK,MAAA,CAAAhK,IAAA,SACF;IACiBN,wDAAA,GAAwE;IAAxEA,0DAAA,qBAAAA,0DAAA,QAAAsK,MAAA,CAAA/I,IAAA,GAAA+I,MAAA,CAAAxI,QAAA,GAAAwI,MAAA,CAAAhK,IAAA,EAAwE;IAGpFN,wDAAA,GAAkC;IAAlCA,yDAAA,UAAAsK,MAAA,CAAA/I,IAAA,IAAA+I,MAAA,CAAAhK,IAAA,CAAAC,OAAA,CAAAC,MAAA,CAAkC;IAMlCR,wDAAA,GAAoD;IAApDA,yDAAA,SAAAsK,MAAA,CAAA/I,IAAA,KAAA+I,MAAA,CAAAvI,UAAA,IAAAuI,MAAA,CAAAxI,QAAA,CAAAvB,OAAA,CAAAC,MAAA,CAAoD;IAKjDR,wDAAA,GAAwB;IAAxBA,yDAAA,SAAAsK,MAAA,CAAA/I,IAAA,IAAA+I,MAAA,CAAAvI,UAAA,CAAwB;IAG3B/B,wDAAA,GAAmB;IAAnBA,yDAAA,SAAAsK,MAAA,CAAApE,IAAA,KAAAoE,MAAA,CAAA/I,IAAA,CAAmB;IAMqBvB,wDAAA,GAAkB;IAAlBA,yDAAA,SAAAsK,MAAA,CAAApE,IAAA,IAAAoE,MAAA,CAAA/I,IAAA,CAAkB;IAG5CvB,wDAAA,GAAW;IAAXA,yDAAA,UAAAsK,MAAA,CAAA/I,IAAA,CAAW;IACXvB,wDAAA,GAAU;IAAVA,yDAAA,SAAAsK,MAAA,CAAA/I,IAAA,CAAU;IAErBvB,wDAAA,GAAU;IAAVA,yDAAA,SAAAsK,MAAA,CAAA/I,IAAA,CAAU;IAgBVvB,wDAAA,GAAW;IAAXA,yDAAA,UAAAsK,MAAA,CAAA/I,IAAA,CAAW;IASXvB,wDAAA,GAAU;IAAVA,yDAAA,SAAAsK,MAAA,CAAA/I,IAAA,CAAU;IAuCavB,wDAAA,GAAU;IAAVA,yDAAA,SAAAsK,MAAA,CAAA/I,IAAA,CAAU;IASjCvB,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,0CACF;IAEEA,wDAAA,GACF;IADEA,iEAAA,OAAAwK,QAAA,GAAAF,MAAA,CAAAG,SAAA,kBAAAH,MAAA,CAAAG,SAAA,CAAAC,SAAA,cAAAF,QAAA,KAAAG,SAAA,GAAAH,QAAA,YACF;IAIExK,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,4CACF;IAEEA,wDAAA,GACF;IADEA,iEAAA,OAAA4K,QAAA,GAAAN,MAAA,CAAAG,SAAA,kBAAAH,MAAA,CAAAG,SAAA,CAAAI,eAAA,cAAAD,QAAA,KAAAD,SAAA,GAAAC,QAAA,YACF;IAIE5K,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,6CACF;IAEEA,wDAAA,GACF;IADEA,iEAAA,OAAA8K,QAAA,GAAAR,MAAA,CAAAG,SAAA,kBAAAH,MAAA,CAAAG,SAAA,CAAAM,WAAA,cAAAD,QAAA,KAAAH,SAAA,GAAAG,QAAA,YACF;IAMwB9K,wDAAA,GAAyB;IAAzBA,yDAAA,SAAAsK,MAAA,CAAApE,IAAA,IAAAoE,MAAA,CAAAU,WAAA,CAAyB;IAoB/ChL,wDAAA,GAAe;IAAfA,yDAAA,SAAAsK,MAAA,CAAAjF,SAAA,CAAe;IAkBfrF,wDAAA,GAAgB;IAAhBA,yDAAA,UAAAsK,MAAA,CAAAjF,SAAA,CAAgB;IAOlBrF,wDAAA,GAAyB;IAAzBA,yDAAA,SAAAsK,MAAA,CAAApE,IAAA,IAAAoE,MAAA,CAAAU,WAAA,CAAyB;IA0CzBhL,wDAAA,GAA4C;IAA5CA,yDAAA,SAAAsK,MAAA,CAAApE,IAAA,IAAAoE,MAAA,CAAAU,WAAA,IAAAV,MAAA,CAAAW,eAAA,CAA4C;;;ADrMlD,MAAOvM,oBAAoB;EAG7BwM,YACYC,KAAY,EACZC,KAAqB,EACrBC,OAAuB,EACvBC,SAA+B,EAC/BC,YAAiC,EACjCC,MAAc,EACdC,MAA4B,EAC5BC,SAAuB,EACvBC,aAAmC,EACnCC,UAA0B;IAT1B,KAAAT,KAAK,GAALA,KAAK;IACL,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,UAAU,GAAVA,UAAU;IAZd,KAAAC,SAAS,GAAG,IAAIrM,0CAAO,EAAQ;IAC/B,KAAAsM,WAAW,GAAG,IAAI,CAACH,aAAa,CAACI,cAAc,CAAC;MAAEC,KAAK,EAAE,IAAI,CAACH;IAAS,CAAE,CAAC;IAkC3E,KAAAxG,SAAS,GAAG,KAAK;IACjB,KAAAwC,WAAW,GAAG,EAAE;IAChB,KAAAG,QAAQ,GAAG,EAAE;IAWpB,KAAAf,iBAAiB,GAAG,KAAK;IAlCrB,IAAI,CAACsE,YAAY,CAACU,WAAW,EAAE,CAACC,SAAS,CAAC,MAAK;MAC3Cd,KAAK,CAACe,MAAM,CAACD,SAAS,CAAEC,MAAM,IAAI;QAC9B,IAAI,CAACC,cAAc,GAAG,IAAI,CAACX,MAAM,CAACY,OAAO,CAAC,gBAAgB,CAAC;QAC3D,IAAI,CAACrB,WAAW,GAAG,IAAI,CAACS,MAAM,CAACY,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC;QAC3D,IAAI,CAACC,QAAQ,CAACH,MAAM,CAACI,SAAS,CAAC;QAC/B,IAAI,CAACC,iBAAiB,CAACL,MAAM,CAACI,SAAS,CAAC;MAC5C,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI,CAACE,UAAU,GAAG,IAAI/M,2DAAU,CAAC,eAAe,EAAE,MAAM,EAAE,MAAM,IAAI,CAACgN,SAAS,EAAE,CAAC;IACjF,IAAI,CAACD,UAAU,CAACE,KAAK,GAAGlN,8DAAa,CAACmN,IAAI;IAC1C,IAAI,CAACH,UAAU,CAACI,YAAY,GAAG,IAAI;IACnC,IAAI,CAAC9L,OAAO,GAAG,CAAC,IAAI,CAAC0L,UAAU,CAAC;EACpC;EAAC,QAAA1N,CAAA,GACc,KAAA+N,mBAAmB,GAAG,CAAC;EAuBtCC,QAAQA,CAAA;IACJ,IAAI,CAAC1B,OAAO,CAAC2B,gBAAgB,CAAC;MAC1BtJ,KAAK,EAAE,oBAAoB;MAC3BuJ,YAAY,EAAE;KACjB,CAAC;EACN;EAEAC,WAAWA,CAAA;IACP,IAAI,CAACrB,SAAS,CAACsB,IAAI,EAAE;IACrB,IAAI,CAACtB,SAAS,CAACuB,QAAQ,EAAE;EAC7B;EAEOd,QAAQA,CAACC,SAAiB;IAC7B,IAAI,CAACpB,KAAK,CAACkC,mBAAmB,EAAE;IAChC,IAAI,CAAC/B,SAAS,CAACgC,UAAU,EAAE,CAACpB,SAAS,CAAEqB,KAAK,IAAI;MAC5ChO,+CAAkB,CACd,IAAI,CAACqM,UAAU,CAAC4B,OAAO,CAACjB,SAAS,CAAC,EAClC,IAAI,CAACX,UAAU,CAAC6B,YAAY,CAAClB,SAAS,CAAC,CAC1C,CAACL,SAAS,CACP,CAAC,CAAC3L,OAAO,EAAEmN,KAAK,CAAC,KAAI;QACjB,IAAI,CAACpN,IAAI,GAAGC,OAAO,CAACoN,MAAM;QAC1B,IAAI,CAAClD,SAAS,GAAGiD,KAAK;QACtB,IAAI,CAACzC,eAAe,GAAG1K,OAAO,CAACyK,WAAW;QAC1C,IAAI,CAACG,KAAK,CAACyC,oBAAoB,EAAE;QACjC,IAAI,CAAC9L,QAAQ,GAAG/B,4DAAM,CAAC8N,QAAQ,CAAC,IAAI,CAACvN,IAAI,CAAC;QAC1C,IAAI,EAAE,IAAI,CAACA,IAAI,CAACC,OAAO,CAACkD,KAAK,YAAY7D,sDAAK,CAAC,EAAE;UAC7C,IAAI,CAACU,IAAI,CAACC,OAAO,CAACkD,KAAK,GAAG,IAAI7D,sDAAK,CAC/B,IAAI,CAACU,IAAI,CAACC,OAAO,CAACkD,KAA0B,CAC/C;;QAEL,IAAI,CAAC3B,QAAQ,CAACvB,OAAO,CAACkD,KAAK,GAAG,IAAI,CAACnD,IAAI,CAACC,OAAO,CAACkD,KAAK,EAAEqK,IAAI,EAAE;QAC7D,IAAI,CAAC,IAAI,CAAChC,WAAW,CAACiC,MAAM,EAAE;UAC1B,IAAI,CAACjC,WAAW,CAACkC,IAAI,EAAE;;QAE3B,IAAI,CAACpC,UAAU,CAACqC,mBAAmB,EAAE,CAACC,IAAI,CAAEC,EAAE,IAAI;UAC9C,IAAI,CAACjI,IAAI,GAAG3F,OAAO,CAACoN,MAAM,CAACS,aAAa,KAAKD,EAAE,CAACR,MAAM,CAACS,aAAa;UACpE,IAAI,IAAI,CAAClI,IAAI,IAAIqH,KAAK,CAACc,OAAO,EAAE;YAC5BxO,gEAAU,CAACyO,SAAS,CAAC,IAAI,CAAC9C,MAAM,EAAE,IAAI,CAACC,MAAM,CAAC;;UAElD,IAAI,CAACgB,UAAU,CAAC8B,SAAS,GACrB,IAAI,CAACvD,WAAW,IAAI,CAAC,EAAE,IAAI,CAACC,eAAe,IAAI,IAAI,CAACmB,cAAc,CAAC;QAC3E,CAAC,CAAC;MACN,CAAC,EACAoC,KAAU,IAAI;QACX,IAAI,CAACrD,KAAK,CAACyC,oBAAoB,EAAE;QACjC,IAAI,CAAC,IAAI,CAAC9B,WAAW,CAACiC,MAAM,EAAE;UAC1B,IAAI,CAACjC,WAAW,CAACkC,IAAI,EAAE;;QAE3B,IAAI,CAAC7C,KAAK,CAACqD,KAAK,CAAC,IAAI,EAAE,qBAAqB,CAAC;MACjD,CAAC,CACJ;IACL,CAAC,CAAC;EACN;EACQhC,iBAAiBA,CAACD,SAAiB;IACvC,IAAI,CAACX,UAAU,CAAC6C,kBAAkB,CAAClC,SAAS,CAAC,CAACL,SAAS,CAClDwC,GAAoB,IAAI;MACrB,IAAI,CAACrK,eAAe,GAAGqK,GAAG;IAC9B,CAAC,EACAF,KAAU,IAAI;MACX,IAAI,CAACnK,eAAe,GAAG,IAAI;IAC/B,CAAC,CACJ;EACL;EACO7B,YAAYA,CAACmM,KAAU;IAC1B,IACI,IAAI,CAACC,aAAa,CAACC,aAAa,CAACC,KAAK,IACtC,IAAI,CAACF,aAAa,CAACC,aAAa,CAACC,KAAK,CAACC,MAAM,EAC/C;MACE,IAAI,CAAChN,UAAU,GAAG,IAAI,CAAC6M,aAAa,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;MAC3D,IAAI,CAAClO,WAAW,GAAG,IAAI,CAAC8K,SAAS,CAACsD,sBAAsB,CACpDC,GAAG,CAACC,eAAe,CAAC,IAAI,CAACnN,UAAU,CAAC,CACvC;;EAET;EACO2K,SAASA,CAAA;IACZ,IAAI,CAAC,IAAI,CAACzB,eAAe,IAAI,IAAI,CAACmB,cAAc,EAAE;MAC9C+C,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACjD,cAAc;MAC1C;;IAEJ,IAAI,CAACtK,QAAQ,GAAG/B,4DAAM,CAAC8N,QAAQ,CAAC,IAAI,CAACvN,IAAI,CAAC;IAC1C,IAAI,CAACwB,QAAQ,CAACvB,OAAO,CAACkD,KAAK,GAAG,IAAI,CAACnD,IAAI,CAACC,OAAO,CAACkD,KAAK,CAACqK,IAAI,EAAE;IAC5D,IAAI,CAACvM,IAAI,GAAG,IAAI;IAChB,IAAI,CAACQ,UAAU,GAAG,IAAI;EAC1B;EACOI,WAAWA,CAAA;IACd,IAAI,CAACJ,UAAU,GAAG,IAAI;IACtB,IAAI,CAACD,QAAQ,CAACvB,OAAO,CAACC,MAAM,GAAG,IAAI;EACvC;EACOwC,SAASA,CAAA;IACZ,OAAO,IAAI,CAAClB,QAAQ,CAACvB,OAAO,CAACC,MAAM,IAAI,IAAI,CAACuB,UAAU;EAC1D;EACOoG,YAAYA,CAAA;IACf,IAAI,IAAI,CAACE,cAAc,EAAE;MACrB,IAAI,CAAC8C,KAAK,CAACkC,mBAAmB,EAAE;MAChC,IAAI,IAAI,CAACrF,QAAQ,CAAC+G,MAAM,GAAGrQ,oBAAoB,CAACoO,mBAAmB,EAAE;QACjE,IAAI,CAAC3B,KAAK,CAACqD,KAAK,CAAC,IAAI,EAAE,qBAAqB,EAAE;UAC1CO,MAAM,EAAErQ,oBAAoB,CAACoO;SAChC,CAAC;QACF,IAAI,CAAC3B,KAAK,CAACyC,oBAAoB,EAAE;QACjC;;MAEJ,MAAM0B,WAAW,GAAG;QAAEzH,WAAW,EAAE,IAAI,CAACA,WAAW;QAAE0H,WAAW,EAAE,IAAI,CAACvH;MAAQ,CAAE;MACjF,IAAI,CAAC4D,UAAU,CAAC4D,mBAAmB,CAAC,IAAI,CAAClP,IAAI,CAAC8N,aAAa,EAAEkB,WAAW,CAAC,CAACpD,SAAS,CAC/E,MAAK;QACD,IAAI,CAACuD,UAAU,EAAE;MACrB,CAAC,EACAjB,KAAU,IAAI;QACX,IAAI3O,gEAAU,CAAC6P,oBAAoB,CAAClB,KAAK,EAAE,yBAAyB,CAAC,EAAE;UACnE,IAAI,CAACrD,KAAK,CAACqD,KAAK,CAAC,IAAI,EAAE,gBAAgB,CAAC;UACxC,IAAI,CAACrD,KAAK,CAACyC,oBAAoB,EAAE;SACpC,MAAM;UACH,IAAI,CAACzC,KAAK,CAACqD,KAAK,CAACA,KAAK,CAAC;UACvB,IAAI,CAACiB,UAAU,EAAE;;MAEzB,CAAC,CACJ;KACJ,MAAM;MACH,IAAI,CAACA,UAAU,EAAE;;EAEzB;EACO7K,SAASA,CAAA;IACZ,IAAI,CAAC,IAAI,CAAC9C,QAAQ,CAACvB,OAAO,CAACsD,SAAS,EAAEyE,IAAI,EAAE,EAAE;MAC1C,IAAI,CAAC6C,KAAK,CAACqD,KAAK,CAAC,IAAI,EAAE,2BAA2B,CAAC;MACnD;;IAEJ,IAAI,CAAC,IAAI,CAAC1M,QAAQ,CAACvB,OAAO,CAACyD,QAAQ,EAAEsE,IAAI,EAAE,EAAE;MACzC,IAAI,CAAC6C,KAAK,CAACqD,KAAK,CAAC,IAAI,EAAE,0BAA0B,CAAC;MAClD;;IAEJ,IAAI,CAAC,IAAI,CAAC1M,QAAQ,CAACvB,OAAO,CAAC4C,KAAK,EAAEmF,IAAI,EAAE,EAAE;MACtC,IAAI,CAAC6C,KAAK,CAACqD,KAAK,CAAC,IAAI,EAAE,sBAAsB,CAAC;MAC9C;;IAEJ,IAAI,CAACrD,KAAK,CAACkC,mBAAmB,EAAE;IAChC,IAAI,CAACzB,UAAU,CAAC+D,QAAQ,CAAC,IAAI,CAACrP,IAAI,CAAC8N,aAAa,EAAE,IAAI,CAACtM,QAAQ,CAACvB,OAAO,CAAC,CAAC2L,SAAS,CAC9E,MAAK;MACD,IAAI,CAAC0D,mBAAmB,EAAE;IAC9B,CAAC,EACApB,KAAU,IAAI;MACX,IAAI,CAACrD,KAAK,CAACyC,oBAAoB,EAAE;MACjC,IAAI,CAACzC,KAAK,CAACqD,KAAK,CAACA,KAAK,CAAC;IAC3B,CAAC,CACJ;EACL;EAEQiB,UAAUA,CAAA;IACd,IAAI,CAACnP,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,CAACwB,QAAQ,CAACvB,OAAO,CAACC,MAAM,IAAI,CAAC,IAAI,CAACuB,UAAU,EAAE;MACnD,IAAI,CAAC6J,UAAU,CAACiE,gBAAgB,CAAC,IAAI,CAAC/N,QAAQ,CAACsM,aAAa,CAAC,CAAClC,SAAS,CACnE,MAAK;QACD,IAAI,CAAC3K,IAAI,GAAG,KAAK;QACjB,IAAI,CAAC8D,SAAS,GAAG,KAAK;QACtB,IAAI,CAACwC,WAAW,GAAG,EAAE;QACrB,IAAI,CAACG,QAAQ,GAAG,EAAE;QAClB,IAAI,CAACK,cAAc,GAAG,KAAK;QAC3B,IAAI,CAAC8C,KAAK,CAACA,KAAK,CAAC,iBAAiB,CAAC;QACnC,IAAI,CAACmB,QAAQ,CAAC,IAAI,CAACxK,QAAQ,CAACsM,aAAa,CAAC;MAC9C,CAAC,EACAI,KAAK,IAAI;QACN,IAAI,CAACrD,KAAK,CAACqD,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CACJ;KACJ,MAAM,IAAI,IAAI,CAACzM,UAAU,EAAE;MACxB,IAAI,CAAC6J,UAAU,CAACkE,aAAa,CAAC,IAAI,CAAC/N,UAAU,EAAE,IAAI,CAACD,QAAQ,CAACsM,aAAa,CAAC,CAAClC,SAAS,CACjF,MAAK;QACD,IAAI,CAAC3K,IAAI,GAAG,KAAK;QACjB,IAAI,CAAC8D,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC8F,KAAK,CAACA,KAAK,CAAC,iBAAiB,CAAC;QACnC,IAAI,CAACmB,QAAQ,CAAC,IAAI,CAACxK,QAAQ,CAACsM,aAAa,CAAC;MAC9C,CAAC,EACAI,KAAK,IAAI;QACN,IAAI,CAACrD,KAAK,CAACqD,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CACJ;KACJ,MAAM;MACH,IAAI,CAACrD,KAAK,CAACyC,oBAAoB,EAAE;MACjC,IAAI,CAACrM,IAAI,GAAG,KAAK;MACjB,IAAI,CAAC8D,SAAS,GAAG,KAAK;MACtB,IAAI,CAAC8F,KAAK,CAACA,KAAK,CAAC,iBAAiB,CAAC;MACnC,IAAI,CAACmB,QAAQ,CAAC,IAAI,CAACxK,QAAQ,CAACsM,aAAa,CAAC;;EAElD;EAEQwB,mBAAmBA,CAAA;IACvB,IAAI,CAAChE,UAAU,CAACmE,kBAAkB,CAAC,IAAI,CAAC1L,eAAe,EAAE,IAAI,CAAC/D,IAAI,CAAC8N,aAAa,CAAC,CAAClC,SAAS,CACvF,MAAK;MACD,IAAI,CAACuD,UAAU,EAAE;IACrB,CAAC,EACAjB,KAAK,IAAI;MACN,IAAI,CAACrD,KAAK,CAACyC,oBAAoB,EAAE;MACjC,IAAI,CAACzC,KAAK,CAACqD,KAAK,CAACA,KAAK,CAAC;IAC3B,CAAC,CACJ;EACL;EACOvJ,SAASA,CAAA;IACZ,IAAI,CAACnD,QAAQ,GAAG/B,4DAAM,CAAC8N,QAAQ,CAAC,IAAI,CAACvN,IAAI,CAAC;IAC1C,IAAI,CAACwB,QAAQ,CAACvB,OAAO,CAACkD,KAAK,GAAG,IAAI,CAACnD,IAAI,CAACC,OAAO,CAACkD,KAAK,EAAEqK,IAAI,EAAE;IAC7D,IAAI,CAACzI,SAAS,GAAG,IAAI;EACzB;EAEOuD,YAAYA,CAAA;IACf,IAAI,CAACP,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;IAC1C,IAAI,CAACL,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACH,WAAW,GAAG,EAAE;EACzB;EAEAd,iBAAiBA,CAAA;IACb,IAAI,CAACnC,SAAS,EAAE;EACpB;EAAC,QAAA5F,EAAA;qBAnQQN,oBAAoB,EAAAsB,gEAAA,CAAAZ,kDAAA,GAAAY,gEAAA,CAAAkQ,4DAAA,GAAAlQ,gEAAA,CAAAoQ,6EAAA,GAAApQ,gEAAA,CAAAsQ,0EAAA,GAAAtQ,gEAAA,CAAAwQ,oEAAA,GAAAxQ,gEAAA,CAAAkQ,oDAAA,GAAAlQ,gEAAA,CAAAsQ,0EAAA,GAAAtQ,gEAAA,CAAA4Q,oEAAA,GAAA5Q,gEAAA,CAAA8Q,6FAAA,GAAA9Q,gEAAA,CAAAsQ,oEAAA;EAAA;EAAA,QAAArR,EAAA;UAApBP,oBAAoB;IAAAuS,SAAA;IAAAC,SAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;QCjCjCpR,yDAAA,IAAAsR,mCAAA,iBAQM;QACNtR,6DAAA,aAA8B;QAC5BA,yDAAA,IAAAuR,mCAAA,mBAqQM;QACRvR,2DAAA,EAAM;;;QAhRmBA,yDAAA,SAAAqR,GAAA,CAAA/Q,IAAA,CAAU;QAUVN,wDAAA,GAAU;QAAVA,yDAAA,SAAAqR,GAAA,CAAA/Q,IAAA,CAAU;;;;;;iBDqBnB,CAACR,6DAAO,CAAC,SAAS,EAAEH,4DAAW,CAAC6R,WAAW,CAAC7R,4DAAW,CAAC8R,mBAAmB,CAAC,CAAC;IAAC;EAAA;;;;;;;;;;;;;;;;;;;AE9BpC;AACe;AACT;;AAM1D,MAAOE,iBAAiB;EAAA,QAAA5S,CAAA;qBAAjB4S,iBAAiB;EAAA;EAAA,QAAA3S,EAAA;UAAjB2S;EAAiB;EAAA,QAAA1S,EAAA;cAFhByS,+DAAY,EAAE5S,kFAAwB;EAAA;;;sHAEvC6S,iBAAiB;IAAAC,YAAA,GAHXlT,yEAAoB;IAAAS,OAAA,GACzBuS,+DAAY,EAAE5S,kFAAwB;EAAA;AAAA","sources":["./src/app/pages/profile-page/profile-page-routing.module.ts","./src/app/pages/profile-page/profile-page.component.ts","./src/app/pages/profile-page/profile-page.component.html","./src/app/pages/profile-page/profile-page.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfilePageComponent } from './profile-page.component';\n\nconst routes: Routes = [\n    {\n        path: ':authority',\n        component: ProfilePageComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { forkJoin as observableForkJoin, Subject } from 'rxjs';\n\nimport { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n    DefaultGroups,\n    OptionItem,\n    TranslationsService,\n    UIAnimation,\n    VCard,\n} from 'ngx-edu-sharing-ui';\nimport {\n    ConfigurationService,\n    ProfileSettings,\n    RestConnectorService,\n    RestHelper,\n    RestIamService,\n    User,\n    UserStats,\n} from '../../core-module/core.module';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Toast } from '../../services/toast';\nimport { trigger } from '@angular/animations';\nimport { Helper } from '../../core-module/rest/helper';\nimport { LoadingScreenService } from '../../main/loading-screen/loading-screen.service';\nimport { MainNavService } from '../../main/navigation/main-nav.service';\n\n@Component({\n    selector: 'es-profile-page',\n    templateUrl: 'profile-page.component.html',\n    styleUrls: ['profile-page.component.scss'],\n    animations: [trigger('overlay', UIAnimation.openOverlay(UIAnimation.ANIMATION_TIME_FAST))],\n})\nexport class ProfilePageComponent implements OnInit, OnDestroy {\n    private destroyed = new Subject<void>();\n    private loadingTask = this.loadingScreen.addLoadingTask({ until: this.destroyed });\n    constructor(\n        private toast: Toast,\n        private route: ActivatedRoute,\n        private mainNav: MainNavService,\n        private connector: RestConnectorService,\n        private translations: TranslationsService,\n        private router: Router,\n        private config: ConfigurationService,\n        private sanitizer: DomSanitizer,\n        private loadingScreen: LoadingScreenService,\n        private iamService: RestIamService,\n    ) {\n        this.translations.waitForInit().subscribe(() => {\n            route.params.subscribe((params) => {\n                this.editProfileUrl = this.config.instant('editProfileUrl');\n                this.editProfile = this.config.instant('editProfile', true);\n                this.loadUser(params.authority);\n                this.getProfileSetting(params.authority);\n            });\n        });\n        this.editAction = new OptionItem('PROFILES.EDIT', 'edit', () => this.beginEdit());\n        this.editAction.group = DefaultGroups.Edit;\n        this.editAction.showAsAction = true;\n        this.actions = [this.editAction];\n    }\n    private static PASSWORD_MIN_LENGTH = 5;\n    public user: User;\n    public userStats: UserStats;\n    public userEdit: User;\n    public isMe: boolean;\n    public edit: boolean;\n    public avatarFile: any;\n    public changePassword: boolean;\n    public editAbout = false;\n    public oldPassword = '';\n    public password = '';\n    // is editing allowed at all (via global config)\n    editProfile: boolean;\n    private editProfileUrl: string;\n    avatarImage: any;\n    profileSettings: ProfileSettings;\n    @ViewChild('avatar') avatarElement: ElementRef;\n    // can the particular user profile (based on the source) be edited?\n    userEditProfile: boolean;\n    actions: OptionItem[];\n    private editAction: OptionItem;\n    showPersistentIds = false;\n\n    ngOnInit(): void {\n        this.mainNav.setMainNavConfig({\n            title: 'PROFILES.TITLE_NAV',\n            currentScope: 'profiles',\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    public loadUser(authority: string) {\n        this.toast.showProgressSpinner();\n        this.connector.isLoggedIn().subscribe((login) => {\n            observableForkJoin(\n                this.iamService.getUser(authority),\n                this.iamService.getUserStats(authority),\n            ).subscribe(\n                ([profile, stats]) => {\n                    this.user = profile.person;\n                    this.userStats = stats;\n                    this.userEditProfile = profile.editProfile;\n                    this.toast.closeProgressSpinner();\n                    this.userEdit = Helper.deepCopy(this.user);\n                    if (!(this.user.profile.vcard instanceof VCard)) {\n                        this.user.profile.vcard = new VCard(\n                            this.user.profile.vcard as unknown as string,\n                        );\n                    }\n                    this.userEdit.profile.vcard = this.user.profile.vcard?.copy();\n                    if (!this.loadingTask.isDone) {\n                        this.loadingTask.done();\n                    }\n                    this.iamService.getCurrentUserAsync().then((me) => {\n                        this.isMe = profile.person.authorityName === me.person.authorityName;\n                        if (this.isMe && login.isGuest) {\n                            RestHelper.goToLogin(this.router, this.config);\n                        }\n                        this.editAction.isEnabled =\n                            this.editProfile && !!(this.userEditProfile || this.editProfileUrl);\n                    });\n                },\n                (error: any) => {\n                    this.toast.closeProgressSpinner();\n                    if (!this.loadingTask.isDone) {\n                        this.loadingTask.done();\n                    }\n                    this.toast.error(null, 'PROFILES.LOAD_ERROR');\n                },\n            );\n        });\n    }\n    private getProfileSetting(authority: string) {\n        this.iamService.getProfileSettings(authority).subscribe(\n            (res: ProfileSettings) => {\n                this.profileSettings = res;\n            },\n            (error: any) => {\n                this.profileSettings = null;\n            },\n        );\n    }\n    public updateAvatar(event: any) {\n        if (\n            this.avatarElement.nativeElement.files &&\n            this.avatarElement.nativeElement.files.length\n        ) {\n            this.avatarFile = this.avatarElement.nativeElement.files[0];\n            this.avatarImage = this.sanitizer.bypassSecurityTrustUrl(\n                URL.createObjectURL(this.avatarFile),\n            );\n        }\n    }\n    public beginEdit() {\n        if (!this.userEditProfile && this.editProfileUrl) {\n            window.location.href = this.editProfileUrl;\n            return;\n        }\n        this.userEdit = Helper.deepCopy(this.user);\n        this.userEdit.profile.vcard = this.user.profile.vcard.copy();\n        this.edit = true;\n        this.avatarFile = null;\n    }\n    public clearAvatar() {\n        this.avatarFile = null;\n        this.userEdit.profile.avatar = null;\n    }\n    public hasAvatar() {\n        return this.userEdit.profile.avatar || this.avatarFile;\n    }\n    public savePassword() {\n        if (this.changePassword) {\n            this.toast.showProgressSpinner();\n            if (this.password.length < ProfilePageComponent.PASSWORD_MIN_LENGTH) {\n                this.toast.error(null, 'PASSWORD_MIN_LENGTH', {\n                    length: ProfilePageComponent.PASSWORD_MIN_LENGTH,\n                });\n                this.toast.closeProgressSpinner();\n                return;\n            }\n            const credentials = { oldPassword: this.oldPassword, newPassword: this.password };\n            this.iamService.editUserCredentials(this.user.authorityName, credentials).subscribe(\n                () => {\n                    this.saveAvatar();\n                },\n                (error: any) => {\n                    if (RestHelper.errorMessageContains(error, 'BadCredentialsException')) {\n                        this.toast.error(null, 'WRONG_PASSWORD');\n                        this.toast.closeProgressSpinner();\n                    } else {\n                        this.toast.error(error);\n                        this.saveAvatar();\n                    }\n                },\n            );\n        } else {\n            this.saveAvatar();\n        }\n    }\n    public saveEdits() {\n        if (!this.userEdit.profile.firstName?.trim()) {\n            this.toast.error(null, 'PROFILES.ERROR.FIRST_NAME');\n            return;\n        }\n        if (!this.userEdit.profile.lastName?.trim()) {\n            this.toast.error(null, 'PROFILES.ERROR.LAST_NAME');\n            return;\n        }\n        if (!this.userEdit.profile.email?.trim()) {\n            this.toast.error(null, 'PROFILES.ERROR.EMAIL');\n            return;\n        }\n        this.toast.showProgressSpinner();\n        this.iamService.editUser(this.user.authorityName, this.userEdit.profile).subscribe(\n            () => {\n                this.saveProfileSettings();\n            },\n            (error: any) => {\n                this.toast.closeProgressSpinner();\n                this.toast.error(error);\n            },\n        );\n    }\n\n    private saveAvatar() {\n        this.user = null;\n        if (!this.userEdit.profile.avatar && !this.avatarFile) {\n            this.iamService.removeUserAvatar(this.userEdit.authorityName).subscribe(\n                () => {\n                    this.edit = false;\n                    this.editAbout = false;\n                    this.oldPassword = '';\n                    this.password = '';\n                    this.changePassword = false;\n                    this.toast.toast('PROFILE_UPDATED');\n                    this.loadUser(this.userEdit.authorityName);\n                },\n                (error) => {\n                    this.toast.error(error);\n                },\n            );\n        } else if (this.avatarFile) {\n            this.iamService.setUserAvatar(this.avatarFile, this.userEdit.authorityName).subscribe(\n                () => {\n                    this.edit = false;\n                    this.editAbout = false;\n                    this.toast.toast('PROFILE_UPDATED');\n                    this.loadUser(this.userEdit.authorityName);\n                },\n                (error) => {\n                    this.toast.error(error);\n                },\n            );\n        } else {\n            this.toast.closeProgressSpinner();\n            this.edit = false;\n            this.editAbout = false;\n            this.toast.toast('PROFILE_UPDATED');\n            this.loadUser(this.userEdit.authorityName);\n        }\n    }\n\n    private saveProfileSettings() {\n        this.iamService.setProfileSettings(this.profileSettings, this.user.authorityName).subscribe(\n            () => {\n                this.saveAvatar();\n            },\n            (error) => {\n                this.toast.closeProgressSpinner();\n                this.toast.error(error);\n            },\n        );\n    }\n    public aboutEdit() {\n        this.userEdit = Helper.deepCopy(this.user);\n        this.userEdit.profile.vcard = this.user.profile.vcard?.copy();\n        this.editAbout = true;\n    }\n\n    public editPassword() {\n        this.changePassword = !this.changePassword;\n        this.password = '';\n        this.oldPassword = '';\n    }\n\n    savePersistentIds() {\n        this.saveEdits();\n    }\n}\n","<div class=\"profile-bg\" *ngIf=\"user\">\n  <div class=\"avatar-default\"></div>\n  <!--\n  <img *ngIf=\"!edit && !avatarFile && user.profile.avatar\" [src]=\"user.profile.avatar+'&crop=true&width=1000&height=1000'\" alt=\"\">\n  <img *ngIf=\"edit && !avatarFile && userEdit.profile.avatar\" [src]=\"user.profile.avatar+'&crop=true&width=1000&height=1000'\" alt=\"\">\n  <img *ngIf=\"avatarFile\" [src]=\"avatarImage\" alt=\"\">\n  -->\n  <div class=\"profile-gradient\"></div>\n</div>\n<div class=\"profiles-wrapper\">\n  <div class=\"profiles\" *ngIf=\"user\">\n    <div role=\"main\" esSkipTarget=\"MAIN_CONTENT\" class=\"main\">\n      <h1 esTitle class=\"cdk-visually-hidden\">\n        {{ 'PROFILES.TITLE' | translate : { name: user | authorityName } }}\n      </h1>\n      <div class=\"top\" style.background-color=\"{{ (edit ? userEdit : user) | authorityColor }}\">\n        <div class=\"profile-gradient\"></div>\n        <img\n          *ngIf=\"!edit && user.profile.avatar\"\n          class=\"blurred-image\"\n          [src]=\"user.profile.avatar + '&crop=true&width=400&height=400'\"\n          alt=\"\"\n        />\n        <img\n          *ngIf=\"edit && !avatarFile && userEdit.profile.avatar\"\n          class=\"blurred-image\"\n          [src]=\"user.profile.avatar + '&crop=true&width=400&height=400'\"\n          alt=\"\"\n        />\n        <img *ngIf=\"edit && avatarFile\" class=\"blurred-image\" [src]=\"avatarImage\" alt=\"\" />\n        <!--<button mat-button class=\"edit clickable\" *ngIf=\"isMe && !edit && !editAbout && editProfile && (userEditProfile || editProfileUrl)\" (click)=\"beginEdit()\"><i class=\"material-icons\">edit</i><span>{{'PROFILES.EDIT' | translate}}</span></button>-->\n        <es-actionbar\n          *ngIf=\"isMe && !edit\"\n          [style]=\"'flat'\"\n          [numberOfAlwaysVisibleOptions]=\"1\"\n          [numberOfAlwaysVisibleOptionsMobile]=\"1\"\n          [options]=\"actions\"\n        ></es-actionbar>\n        <button mat-button class=\"edit clickable\" *ngIf=\"isMe && edit\" (click)=\"edit = false\">\n          <i esIcon=\"close\"></i><span>{{ 'PROFILES.CANCEL_EDIT' | translate }}</span>\n        </button>\n        <es-user-avatar *ngIf=\"!edit\" [user]=\"user\"></es-user-avatar>\n        <es-user-avatar *ngIf=\"edit\" [user]=\"userEdit\" [customImage]=\"avatarFile\"></es-user-avatar>\n\n        <div *ngIf=\"edit\" class=\"editAvatar\">\n          <input\n            #avatar\n            type=\"file\"\n            (change)=\"updateAvatar($event)\"\n            accept=\"image/*\"\n            class=\"hide\"\n          />\n          <div class=\"new-avatar-button\" (click)=\"avatar.click()\">\n            <span>{{ 'PROFILES.IMG_CHANGE' | translate }}</span>\n          </div>\n          <button mat-button *ngIf=\"hasAvatar()\" (click)=\"clearAvatar()\">\n            <i esIcon=\"delete\"></i>\n          </button>\n        </div>\n\n        <div *ngIf=\"!edit\">\n          <div class=\"name\">{{ user | authorityName }}</div>\n          <div *ngIf=\"user.profile.email\" class=\"mail\">\n            <a href=\"mailto:{{ user.profile.email }}\">{{ user.profile.email }}</a>\n          </div>\n          <!--<div class=\"authorityName\">-->\n          <!--<div>{{'USER.authorityName' | translate}}: {{ user.authorityName }}</div>-->\n          <!--</div>-->\n        </div>\n        <div *ngIf=\"edit\">\n          <div class=\"vcard\">\n            <div class=\"title\">\n              <mat-form-field class=\"mat-form-field-bright\">\n                <mat-label>{{ 'VCARD.Title' | translate }}</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"userEdit.profile.vcard.title\" />\n              </mat-form-field>\n            </div>\n            <div class=\"givenname\">\n              <mat-form-field class=\"mat-form-field-bright\">\n                <mat-label>{{ 'USER.firstName' | translate }}</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"userEdit.profile.firstName\" />\n              </mat-form-field>\n            </div>\n            <div class=\"surname\">\n              <mat-form-field class=\"mat-form-field-bright\">\n                <mat-label>{{ 'USER.lastName' | translate }}</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"userEdit.profile.lastName\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"email-group-form\">\n            <mat-form-field class=\"mat-form-field-bright email\">\n              <mat-label>{{ 'USER.email' | translate }}</mat-label>\n              <input matInput type=\"email\" [(ngModel)]=\"userEdit.profile.email\" />\n            </mat-form-field>\n            <mat-slide-toggle\n              [color]=\"$any('primary-bright')\"\n              matTooltip=\"{{ 'PROFILE_SETTINGS.SHOW_EMAIL_TOOLTIP' | translate }}\"\n              [checked]=\"profileSettings.showEmail\"\n              [(ngModel)]=\"profileSettings.showEmail\"\n            >\n              <mat-label class=\"mat-slide-label\">{{\n                'PROFILE_SETTINGS.SHOW_EMAIL_LABEL' | translate\n              }}</mat-label>\n            </mat-slide-toggle>\n          </div>\n        </div>\n        <div class=\"save\">\n          <button mat-raised-button *ngIf=\"edit\" (click)=\"saveEdits()\">\n            {{ 'SAVE' | translate }}\n          </button>\n        </div>\n      </div>\n      <div class=\"statsBackground\">\n        <div class=\"stats\">\n          <div>\n            <div class=\"stat\">\n              {{ 'PROFILES.STATS.MATERIALS' | translate }}\n            </div>\n            <div class=\"value\">\n              {{ userStats?.nodeCount ?? '-' }}\n            </div>\n          </div>\n          <div>\n            <div class=\"stat\">\n              {{ 'PROFILES.STATS.COLLECTIONS' | translate }}\n            </div>\n            <div class=\"value\">\n              {{ userStats?.collectionCount ?? '-' }}\n            </div>\n          </div>\n          <div>\n            <div class=\"stat\">\n              {{ 'PROFILES.STATS.MATERIALS_CC' | translate }}\n            </div>\n            <div class=\"value\">\n              {{ userStats?.nodeCountCC ?? '-' }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"about\">\n        <i esIcon=\"edu-quotes\" class=\"quotes\"></i>\n        <div class=\"about-buttons\" *ngIf=\"isMe && editProfile\">\n          <button\n            mat-button\n            color=\"primary\"\n            class=\"edit\"\n            *ngIf=\"!editAbout && !edit\"\n            (click)=\"aboutEdit()\"\n          >\n            {{ 'PROFILES.EDIT' | translate }}\n          </button>\n          <button\n            mat-button\n            color=\"primary\"\n            class=\"edit\"\n            *ngIf=\"editAbout\"\n            (click)=\"editAbout = false\"\n          >\n            {{ 'PROFILES.CANCEL_EDIT' | translate }}\n          </button>\n        </div>\n        <div *ngIf=\"editAbout\" class=\"about-edit\">\n          <mat-form-field>\n            <mat-label>{{ 'PROFILES.ABOUT_LABEL' | translate }}</mat-label>\n            <textarea\n              matInput\n              cdkTextareaAutosize\n              cdkAutosizeMinRows=\"2\"\n              cdkAutosizeMaxRows=\"4\"\n              id=\"about\"\n              [(ngModel)]=\"userEdit.profile.about\"\n            ></textarea>\n          </mat-form-field>\n          <div class=\"change-buttons\">\n            <button mat-raised-button color=\"primary\" (click)=\"saveEdits()\">\n              {{ 'SAVE' | translate }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!editAbout\" class=\"about\">\n          <div *ngIf=\"user.profile.about\" class=\"profile\">{{ user.profile.about }}</div>\n          <div *ngIf=\"!user.profile.about\" class=\"empty\">\n            {{ 'PROFILES.NO_ABOUT' + (isMe ? '_ME' : '') | translate }}\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"isMe && editProfile\" class=\"persistent-id\">\n        <div class=\"toggle\">\n          <button mat-button color=\"primary\" (click)=\"showPersistentIds = !showPersistentIds\">\n            <i esIcon=\"fingerprint\"></i>\n            <span>{{ 'WORKSPACE.CONTRIBUTOR.PERSISTENT_IDS' | translate }}</span>\n            <i esIcon=\"keyboard_arrow_down\" *ngIf=\"showPersistentIds\"></i>\n            <i esIcon=\"keyboard_arrow_right\" *ngIf=\"!showPersistentIds\"></i>\n          </button>\n        </div>\n        <div *ngIf=\"showPersistentIds\" [@overlay]=\"showPersistentIds\" class=\"persistent-id-inputs\">\n          <es-info-message\n            message=\"{{ 'PROFILES.PERSISTENT_ID_INFO' | translate }}\"\n          ></es-info-message>\n          <mat-form-field floatLabel=\"always\">\n            <mat-label>{{ 'VCARD.X-ORCID' | translate }}</mat-label>\n            <input\n              matInput\n              id=\"orcid\"\n              [(ngModel)]=\"userEdit.profile.vcard.orcid\"\n              pattern=\"https?:\\/\\/orcid.org\\/\\d{4}(-\\d{4}){3}\"\n              placeholder=\"http://orcid.org/0000-0000-0000-0000\"\n            />\n            <mat-hint innerHTML=\"{{ 'VCARD_HINT.X-ORCID' | translate }}\"></mat-hint>\n          </mat-form-field>\n          <mat-form-field floatLabel=\"always\">\n            <mat-label>{{ 'VCARD.X-GND-URI' | translate }}</mat-label>\n            <input\n              matInput\n              id=\"gnduri\"\n              [(ngModel)]=\"userEdit.profile.vcard.gnduri\"\n              pattern=\"https?:\\/\\/d-nb.info\\/gnd\\/(\\d|x|X)+\"\n              placeholder=\"http://d-nb.info/gnd/0000000000\"\n            />\n            <mat-hint innerHTML=\"{{ 'VCARD_HINT.X-GND-URI' | translate }}\"></mat-hint>\n          </mat-form-field>\n          <div class=\"change-buttons\">\n            <button mat-raised-button color=\"primary\" (click)=\"savePersistentIds()\">\n              {{ 'SAVE' | translate }}\n            </button>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"isMe && editProfile && userEditProfile\" class=\"changePassword\">\n        <div class=\"toggle\">\n          <button mat-button color=\"primary\" (click)=\"editPassword()\">\n            <i *ngIf=\"!changePassword\" esIcon=\"lock\"></i>\n            <i *ngIf=\"changePassword\" esIcon=\"lock_open\"></i>\n            <span>{{ 'CHANGE_PASSWORD' | translate }}</span>\n            <i aria-hidden=\"true\" esIcon=\"keyboard_arrow_right\" *ngIf=\"!changePassword\"></i>\n            <i aria-hidden=\"true\" esIcon=\"keyboard_arrow_down\" *ngIf=\"changePassword\"></i>\n          </button>\n        </div>\n        <div *ngIf=\"changePassword\" class=\"password\" [@overlay]=\"changePassword\">\n          <es-input-password\n            label=\"{{ 'OLD_PASSWORD' | translate }}\"\n            [displayStrength]=\"false\"\n            [(value)]=\"oldPassword\"\n            [required]=\"true\"\n            inputId=\"oldPassword\"\n          ></es-input-password>\n          <!--<input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)]=\"\" required=\"true\">-->\n          <es-input-password\n            #newPassword\n            label=\"{{ 'NEW_PASSWORD' | translate }}\"\n            hint=\"{{ 'REGISTER.HINT' | translate }}\"\n            [displayStrength]=\"true\"\n            [(value)]=\"password\"\n            [required]=\"true\"\n            inputId=\"password\"\n          ></es-input-password>\n          <div class=\"change-buttons\">\n            <button\n              mat-raised-button\n              color=\"primary\"\n              [disabled]=\"!oldPassword.trim() || newPassword.passwordStrength === 'weak'\"\n              (click)=\"savePassword()\"\n            >\n              {{ 'SAVE' | translate }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ProfilePageRoutingModule } from './profile-page-routing.module';\nimport { ProfilePageComponent } from './profile-page.component';\n\n@NgModule({\n    declarations: [ProfilePageComponent],\n    imports: [SharedModule, ProfilePageRoutingModule],\n})\nexport class ProfilePageModule {}\n"],"names":["RouterModule","ProfilePageComponent","routes","path","component","ProfilePageRoutingModule","_","_2","_3","forChild","imports","i1","exports","forkJoin","observableForkJoin","Subject","DefaultGroups","OptionItem","UIAnimation","VCard","RestHelper","trigger","Helper","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ctx_r2","user","profile","avatar","ɵɵsanitizeUrl","ctx_r3","ctx_r4","avatarImage","ɵɵstyleMap","ctx_r5","actions","ɵɵlistener","ProfilePageComponent_div_2_button_13_Template_button_click_0_listener","ɵɵrestoreView","_r19","ctx_r18","ɵɵnextContext","ɵɵresetView","edit","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r7","ctx_r8","userEdit","avatarFile","ProfilePageComponent_div_2_div_16_button_7_Template_button_click_0_listener","_r23","ctx_r22","clearAvatar","ProfilePageComponent_div_2_div_16_Template_input_change_1_listener","$event","_r25","ctx_r24","updateAvatar","ProfilePageComponent_div_2_div_16_Template_div_click_3_listener","_r20","ɵɵreference","click","ɵɵtemplate","ProfilePageComponent_div_2_div_16_button_7_Template","ctx_r9","hasAvatar","ɵɵpropertyInterpolate1","ctx_r27","email","ProfilePageComponent_div_2_div_17_div_4_Template","ctx_r10","ProfilePageComponent_div_2_div_18_Template_input_ngModelChange_7_listener","_r29","ctx_r28","vcard","title","ProfilePageComponent_div_2_div_18_Template_input_ngModelChange_13_listener","ctx_r30","firstName","ProfilePageComponent_div_2_div_18_Template_input_ngModelChange_19_listener","ctx_r31","lastName","ProfilePageComponent_div_2_div_18_Template_input_ngModelChange_25_listener","ctx_r32","ProfilePageComponent_div_2_div_18_Template_mat_slide_toggle_ngModelChange_26_listener","ctx_r33","profileSettings","showEmail","ctx_r11","ɵɵpropertyInterpolate","ProfilePageComponent_div_2_button_20_Template_button_click_0_listener","_r35","ctx_r34","saveEdits","ɵɵtextInterpolate1","ProfilePageComponent_div_2_div_43_button_1_Template_button_click_0_listener","_r39","ctx_r38","aboutEdit","ProfilePageComponent_div_2_div_43_button_2_Template_button_click_0_listener","_r41","ctx_r40","editAbout","ProfilePageComponent_div_2_div_43_button_1_Template","ProfilePageComponent_div_2_div_43_button_2_Template","ctx_r13","ProfilePageComponent_div_2_div_44_Template_textarea_ngModelChange_5_listener","_r43","ctx_r42","about","ProfilePageComponent_div_2_div_44_Template_button_click_7_listener","ctx_r44","ctx_r14","ctx_r45","ctx_r46","isMe","ProfilePageComponent_div_2_div_45_div_1_Template","ProfilePageComponent_div_2_div_45_div_2_Template","ctx_r15","ProfilePageComponent_div_2_div_46_div_9_Template_input_ngModelChange_7_listener","_r51","ctx_r50","orcid","ProfilePageComponent_div_2_div_46_div_9_Template_input_ngModelChange_14_listener","ctx_r52","gnduri","ProfilePageComponent_div_2_div_46_div_9_Template_button_click_18_listener","ctx_r53","savePersistentIds","ctx_r49","showPersistentIds","ɵɵsanitizeHtml","ProfilePageComponent_div_2_div_46_Template_button_click_2_listener","_r55","ctx_r54","ProfilePageComponent_div_2_div_46_i_7_Template","ProfilePageComponent_div_2_div_46_i_8_Template","ProfilePageComponent_div_2_div_46_div_9_Template","ctx_r16","ProfilePageComponent_div_2_div_47_div_10_Template_es_input_password_valueChange_1_listener","_r63","ctx_r62","oldPassword","ProfilePageComponent_div_2_div_47_div_10_Template_es_input_password_valueChange_3_listener","ctx_r64","password","ProfilePageComponent_div_2_div_47_div_10_Template_button_click_8_listener","ctx_r65","savePassword","ctx_r60","changePassword","trim","_r61","passwordStrength","ProfilePageComponent_div_2_div_47_Template_button_click_2_listener","_r67","ctx_r66","editPassword","ProfilePageComponent_div_2_div_47_i_3_Template","ProfilePageComponent_div_2_div_47_i_4_Template","ProfilePageComponent_div_2_div_47_i_8_Template","ProfilePageComponent_div_2_div_47_i_9_Template","ProfilePageComponent_div_2_div_47_div_10_Template","ctx_r17","ProfilePageComponent_div_2_img_9_Template","ProfilePageComponent_div_2_img_10_Template","ProfilePageComponent_div_2_img_11_Template","ProfilePageComponent_div_2_es_actionbar_12_Template","ProfilePageComponent_div_2_button_13_Template","ProfilePageComponent_div_2_es_user_avatar_14_Template","ProfilePageComponent_div_2_es_user_avatar_15_Template","ProfilePageComponent_div_2_div_16_Template","ProfilePageComponent_div_2_div_17_Template","ProfilePageComponent_div_2_div_18_Template","ProfilePageComponent_div_2_button_20_Template","ProfilePageComponent_div_2_div_43_Template","ProfilePageComponent_div_2_div_44_Template","ProfilePageComponent_div_2_div_45_Template","ProfilePageComponent_div_2_div_46_Template","ProfilePageComponent_div_2_div_47_Template","ɵɵpipeBind2","ɵɵpureFunction1","_c1","ctx_r1","ɵɵstyleProp","tmp_14_0","userStats","nodeCount","undefined","tmp_16_0","collectionCount","tmp_18_0","nodeCountCC","editProfile","userEditProfile","constructor","toast","route","mainNav","connector","translations","router","config","sanitizer","loadingScreen","iamService","destroyed","loadingTask","addLoadingTask","until","waitForInit","subscribe","params","editProfileUrl","instant","loadUser","authority","getProfileSetting","editAction","beginEdit","group","Edit","showAsAction","PASSWORD_MIN_LENGTH","ngOnInit","setMainNavConfig","currentScope","ngOnDestroy","next","complete","showProgressSpinner","isLoggedIn","login","getUser","getUserStats","stats","person","closeProgressSpinner","deepCopy","copy","isDone","done","getCurrentUserAsync","then","me","authorityName","isGuest","goToLogin","isEnabled","error","getProfileSettings","res","event","avatarElement","nativeElement","files","length","bypassSecurityTrustUrl","URL","createObjectURL","window","location","href","credentials","newPassword","editUserCredentials","saveAvatar","errorMessageContains","editUser","saveProfileSettings","removeUserAvatar","setUserAvatar","setProfileSettings","ɵɵdirectiveInject","Toast","i2","ActivatedRoute","i3","MainNavService","i4","RestConnectorService","i5","TranslationsService","Router","ConfigurationService","i6","DomSanitizer","i7","LoadingScreenService","RestIamService","selectors","viewQuery","ProfilePageComponent_Query","rf","ctx","ProfilePageComponent_div_0_Template","ProfilePageComponent_div_2_Template","openOverlay","ANIMATION_TIME_FAST","SharedModule","ProfilePageModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}