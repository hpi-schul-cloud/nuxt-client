{"version":3,"file":"src_app_features_dialogs_dialog-modules_join-group-dialog_join-group-dialog_module_ts.js","mappings":"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","sources":["./src/app/features/dialogs/dialog-modules/join-group-dialog/join-group-dialog.component.ts","./src/app/features/dialogs/dialog-modules/join-group-dialog/join-group-dialog.component.html","./src/app/features/dialogs/dialog-modules/join-group-dialog/join-group-dialog.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    DialogButton,\n    Group,\n    LoginResult,\n    RestConnectorService,\n    RestConstants,\n    RestIamService,\n} from '../../../../core-module/core.module';\nimport { Toast } from '../../../../services/toast';\nimport { CARD_DIALOG_DATA, Closable } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport { JoinGroupDialogData, JoinGroupDialogResult } from './join-group-dialog-data';\n\nenum Step {\n    selectGroup,\n    confirmGroup,\n}\n\n@Component({\n    selector: 'es-join-group-dialog',\n    templateUrl: './join-group-dialog.component.html',\n    styleUrls: ['./join-group-dialog.component.scss'],\n})\nexport class JoinGroupDialogComponent implements OnInit {\n    readonly STEP = Step;\n    dialogStep: Step = Step.selectGroup;\n    group: Group;\n    groups: Group[];\n    password = '';\n    groupsLoading = true;\n    userGroups: Group[];\n\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: JoinGroupDialogData,\n        private dialogRef: CardDialogRef<JoinGroupDialogData, JoinGroupDialogResult>,\n        private connector: RestConnectorService,\n        private iam: RestIamService,\n        private toast: Toast,\n    ) {\n        this.updateButtons();\n        this.connector.isLoggedIn(false).subscribe((data: LoginResult) => {\n            const request = {\n                count: RestConstants.COUNT_UNLIMITED,\n            };\n            this.iam.searchGroups('*', true, '', '*', request).subscribe(\n                (groups) => {\n                    this.groups = groups.groups;\n                    this.groupsLoading = false;\n                },\n                (error) => {\n                    this.toast.error(error);\n                    this.groupsLoading = false;\n                    this.toast.closeProgressSpinner();\n                },\n            );\n        });\n    }\n\n    async ngOnInit() {\n        this.userGroups = (await this.iam.getUserGroups().toPromise()).groups;\n    }\n\n    private cancel(): void {\n        this.dialogRef.close(null);\n    }\n\n    updateButtons() {\n        let buttons: DialogButton[];\n        if (this.dialogStep === Step.selectGroup) {\n            buttons = DialogButton.getNextCancel(\n                () => this.cancel(),\n                () => {\n                    this.dialogStep = Step.confirmGroup;\n                    this.updateButtons();\n                },\n            );\n            buttons[1].disabled = !this.group || this.isMemberOf(this.group);\n        }\n        if (this.dialogStep === Step.confirmGroup) {\n            const back = new DialogButton('BACK', { color: 'standard' }, () => {\n                this.dialogStep = Step.selectGroup;\n                this.updateButtons();\n            });\n            const signup = new DialogButton('SIGNUP_GROUP.SIGNUP', { color: 'primary' }, () =>\n                this.signup(),\n            );\n            signup.disabled = this.group.signupMethod === 'password' && !this.password;\n            buttons = [back, signup];\n        }\n        this.dialogRef.patchConfig({ buttons });\n    }\n\n    private signup(): void {\n        this.toast.showProgressSpinner();\n        this.iam.signupGroup(this.group.authorityName, this.password).subscribe(\n            (result) => {\n                if (result !== 'Ok') {\n                    this.toast.error(null, 'SIGNUP_GROUP.TOAST.' + result);\n                } else {\n                    if (this.group.signupMethod === 'list') {\n                        this.toast.toast('SIGNUP_GROUP.TOAST.ADDED_TO_LIST');\n                    } else {\n                        this.toast.toast('SIGNUP_GROUP.TOAST.ADDED_TO_GROUP', {\n                            group: this.group.profile.displayName,\n                        });\n                    }\n                    this.cancel();\n                }\n                this.toast.closeProgressSpinner();\n            },\n            (error) => {\n                this.toast.error(error);\n                this.toast.closeProgressSpinner();\n            },\n        );\n    }\n\n    select(group: Group) {\n        this.group = group;\n        this.updateButtons();\n        this.dialogRef.patchConfig({ closable: Closable.Standard });\n    }\n\n    isMemberOf(group: Group) {\n        return !!this.userGroups?.find((g) => g.authorityName === group.authorityName);\n    }\n}\n","<div *ngIf=\"dialogStep === STEP.selectGroup\" class=\"select-group\">\n  <p class=\"mat-heading-5\">{{ 'SIGNUP_GROUP.SELECT_GROUP' | translate }}</p>\n  <es-spinner *ngIf=\"groupsLoading\"></es-spinner>\n  <ng-container *ngIf=\"!groupsLoading\">\n    <button\n      *ngFor=\"let g of groups\"\n      mat-ripple\n      (click)=\"select(g)\"\n      [class.selected]=\"g === group\"\n      [class.is-member]=\"isMemberOf(g)\"\n    >\n      <es-authority-row\n        [authority]=\"g\"\n        [secondaryTitle]=\"\n          (isMemberOf(g)\n            ? 'SIGNUP_GROUP.ALREADY_MEMBER'\n            : 'SIGNUP_GROUP.SIGNUP_TYPE.' + g.signupMethod\n          ) | translate\n        \"\n      ></es-authority-row>\n    </button>\n  </ng-container>\n  <p class=\"mat-heading-4 no-groups-message\" *ngIf=\"!groupsLoading && !groups?.length\">\n    {{ 'SIGNUP_GROUP.NO_GROUPS' | translate }}\n  </p>\n</div>\n<div *ngIf=\"dialogStep === STEP.confirmGroup\" class=\"confirm-group card-content-padding\">\n  <p class=\"mat-heading-5\">{{ 'SIGNUP_GROUP.CONFIRM_GROUP' | translate }}</p>\n  <p class=\"mat-heading-4 group-name\">{{ group | authorityName }}</p>\n  <es-info-message\n    mode=\"info\"\n    message=\"{{ 'SIGNUP_GROUP.DESCRIPTION.' + group.signupMethod | translate }}\"\n  ></es-info-message>\n  <es-input-password\n    *ngIf=\"group.signupMethod === 'password'\"\n    [(value)]=\"password\"\n    label=\"{{ 'SIGNUP_GROUP.GROUP_PASSWORD' | translate }}\"\n    autocomplete=\"new-password\"\n    (valueChange)=\"updateButtons()\"\n  ></es-input-password>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { JoinGroupDialogComponent } from './join-group-dialog.component';\n\nexport { JoinGroupDialogComponent };\n\n@NgModule({\n    declarations: [JoinGroupDialogComponent],\n    imports: [SharedModule],\n})\nexport class JoinGroupDialogModule {}\n"],"names":["DialogButton","RestConstants","CARD_DIALOG_DATA","Closable","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","JoinGroupDialogComponent_div_0_ng_container_5_button_1_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r8","g_r6","$implicit","ctx_r7","ɵɵnextContext","ɵɵresetView","select","ɵɵelementEnd","ɵɵclassProp","ctx_r5","group","isMemberOf","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","signupMethod","ɵɵelementContainerStart","ɵɵtemplate","JoinGroupDialogComponent_div_0_ng_container_5_button_1_Template","ɵɵelementContainerEnd","ctx_r3","groups","ɵɵtext","ɵɵtextInterpolate1","JoinGroupDialogComponent_div_0_es_spinner_4_Template","JoinGroupDialogComponent_div_0_ng_container_5_Template","JoinGroupDialogComponent_div_0_p_6_Template","ɵɵtextInterpolate","ctx_r0","groupsLoading","length","JoinGroupDialogComponent_div_1_es_input_password_9_Template_es_input_password_valueChange_0_listener","$event","_r11","ctx_r10","password","ctx_r12","updateButtons","ɵɵpropertyInterpolate","ctx_r9","JoinGroupDialogComponent_div_1_es_input_password_9_Template","ctx_r1","Step","JoinGroupDialogComponent","constructor","data","dialogRef","connector","iam","toast","STEP","dialogStep","selectGroup","isLoggedIn","subscribe","request","count","COUNT_UNLIMITED","searchGroups","error","closeProgressSpinner","ngOnInit","_this","_asyncToGenerator","userGroups","getUserGroups","toPromise","cancel","close","buttons","getNextCancel","confirmGroup","disabled","back","color","signup","patchConfig","showProgressSpinner","signupGroup","authorityName","result","profile","displayName","closable","Standard","find","g","_","ɵɵdirectiveInject","i1","CardDialogRef","i2","RestConnectorService","RestIamService","i3","Toast","_2","selectors","decls","vars","consts","template","JoinGroupDialogComponent_Template","rf","ctx","JoinGroupDialogComponent_div_0_Template","JoinGroupDialogComponent_div_1_Template","SharedModule","JoinGroupDialogModule","_3","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}