{"version":3,"file":"src_app_features_dialogs_dialog-modules_node-template-dialog_node-template-dialog_module_ts.js","mappings":"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","sources":["./src/app/features/dialogs/dialog-modules/node-template-dialog/node-template-dialog.component.ts","./src/app/features/dialogs/dialog-modules/node-template-dialog/node-template-dialog.component.html","./src/app/features/dialogs/dialog-modules/node-template-dialog/node-template-dialog.module.ts"],"sourcesContent":["import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {\n    DialogButton,\n    Node,\n    RestConstants,\n    RestNodeService,\n} from '../../../../core-module/core.module';\nimport { Toast } from '../../../../services/toast';\nimport { MdsEditorWrapperComponent } from '../../../../features/mds/mds-editor/mds-editor-wrapper/mds-editor-wrapper.component';\nimport { CARD_DIALOG_DATA } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport { NodeTemplateDialogData, NodeTemplateDialogResult } from './node-template-dialog-data';\n\n@Component({\n    selector: 'es-node-template-dialog',\n    templateUrl: './node-template-dialog.component.html',\n    styleUrls: ['./node-template-dialog.component.scss'],\n})\nexport class NodeTemplateDialogComponent implements OnInit {\n    @ViewChild('mds') mdsRef: MdsEditorWrapperComponent;\n\n    templateNode: Node;\n    enabled: boolean;\n\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: NodeTemplateDialogData,\n        private dialogRef: CardDialogRef<NodeTemplateDialogData, NodeTemplateDialogResult>,\n        private nodeService: RestNodeService,\n        private toast: Toast,\n    ) {\n        this.dialogRef.patchState({ isLoading: true });\n    }\n\n    ngOnInit(): void {\n        this.dialogRef.patchConfig({\n            buttons: [\n                new DialogButton('CANCEL', { color: 'standard' }, () => this.dialogRef.close(null)),\n                new DialogButton('SAVE', { color: 'primary' }, () => this.save()),\n            ],\n        });\n        this.initNode();\n    }\n\n    private async initNode() {\n        const nodeId = this.data.node.ref.id;\n        const template = await this.nodeService.getNodeTemplate(nodeId).toPromise();\n        this.templateNode = template.node;\n        this.enabled = template.enabled;\n\n        if (!template.enabled) {\n            // check if this is the first time opening -> activate it\n            const aspects = (await this.nodeService.getNodeMetadata(nodeId).toPromise()).node\n                .aspects;\n            if (!aspects.includes(RestConstants.CCM_ASPECT_METADATA_PRESETTING)) {\n                this.enabled = true;\n            }\n        }\n\n        this.dialogRef.patchState({ isLoading: false });\n        // @TODO this is only required for the legacy mds and might be removed as soon as the legacy\n        // mds is obsolete.\n        setTimeout(() => this.mdsRef.loadMds(true));\n    }\n\n    private async save() {\n        const data = this.enabled ? await this.mdsRef.getValues() : {};\n        this.dialogRef.patchState({ isLoading: true });\n        this.nodeService.setNodeTemplate(this.data.node.ref.id, this.enabled, data).subscribe(\n            () => {\n                this.dialogRef.close(null);\n                this.toast.toast('WORKSPACE.TOAST.METADATA_TEMPLATE_UPDATED');\n            },\n            (error) => {\n                this.toast.error(error);\n            },\n        );\n    }\n}\n","<div class=\"enable-toggle\">\n  <mat-slide-toggle [(ngModel)]=\"enabled\"></mat-slide-toggle>\n  <div class=\"node-status\">\n    <strong>{{ 'WORKSPACE.NODE_TEMPLATE.STATUS' | translate }}</strong>\n    <p>{{ 'WORKSPACE.NODE_TEMPLATE.STATUS_DESKRIPTION' | translate }}</p>\n  </div>\n</div>\n<div class=\"template-content\">\n  <es-mds-editor-wrapper\n    #mds\n    [groupId]=\"'io_template'\"\n    [embedded]=\"true\"\n    [editorMode]=\"'nodes'\"\n    [currentValues]=\"templateNode?.properties ?? {}\"\n    [class.display-none]=\"!enabled\"\n  ></es-mds-editor-wrapper>\n  <div *ngIf=\"!enabled\" class=\"template-disabled\">\n    <div class=\"disabled-info\" data-i18n=\"[html]content.body\">\n      {{ 'WORKSPACE.NODE_TEMPLATE.STATUS_DISABLED' | translate }}\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { MdsModule } from '../../../mds/mds.module';\nimport { NodeTemplateDialogComponent } from './node-template-dialog.component';\n\nexport { NodeTemplateDialogComponent };\n\n@NgModule({\n    declarations: [NodeTemplateDialogComponent],\n    imports: [SharedModule, MdsModule],\n})\nexport class NodeTemplateDialogModule {}\n"],"names":["DialogButton","RestConstants","CARD_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","NodeTemplateDialogComponent","constructor","data","dialogRef","nodeService","toast","patchState","isLoading","ngOnInit","patchConfig","buttons","color","close","save","initNode","_this","_asyncToGenerator","nodeId","node","ref","id","template","getNodeTemplate","toPromise","templateNode","enabled","aspects","getNodeMetadata","includes","CCM_ASPECT_METADATA_PRESETTING","setTimeout","mdsRef","loadMds","_this2","getValues","setNodeTemplate","subscribe","error","_","ɵɵdirectiveInject","i1","CardDialogRef","i2","RestNodeService","i3","Toast","_2","selectors","viewQuery","NodeTemplateDialogComponent_Query","rf","ctx","ɵɵlistener","NodeTemplateDialogComponent_Template_mat_slide_toggle_ngModelChange_1_listener","$event","ɵɵelement","ɵɵtemplate","NodeTemplateDialogComponent_div_12_Template","ɵɵproperty","ɵɵtextInterpolate","ɵɵclassProp","tmp_7_0","properties","undefined","ɵɵpureFunction0","_c1","SharedModule","MdsModule","NodeTemplateDialogModule","_3","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}