{"version":3,"file":"src_app_features_dialogs_dialog-modules_node-relations-dialog_node-relations-dialog_module_ts.js","mappings":"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","sources":["./src/app/features/dialogs/dialog-modules/node-relations-dialog/node-relations-dialog.component.ts","./src/app/features/dialogs/dialog-modules/node-relations-dialog/node-relations-dialog.component.html","./src/app/features/dialogs/dialog-modules/node-relations-dialog/node-relations-dialog.module.ts","./src/app/features/dialogs/dialog-modules/node-relations-dialog/node-search-selector/node-search-selector.component.ts","./src/app/features/dialogs/dialog-modules/node-relations-dialog/node-search-selector/node-search-selector.component.html"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnInit,\n} from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { NodeService, RelationData, RelationService, UserService } from 'ngx-edu-sharing-api';\nimport { forkJoin } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { UniversalNode } from '../../../../core-module/rest/definitions';\nimport { BridgeService } from '../../../../services/bridge.service';\nimport {\n    DialogButton,\n    Node,\n    RestConstants,\n    RestHelper,\n    SearchRequestCriteria,\n} from '../../../../core-module/core.module';\nimport { NodeHelperService } from '../../../../services/node-helper.service';\nimport { Toast } from '../../../../services/toast';\nimport { UIHelper } from '../../../../core-ui-module/ui-helper';\nimport { CARD_DIALOG_DATA, Closable } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport { NodeRelationsDialogData, NodeRelationsDialogResult } from './node-relations-dialog-data';\nimport { ListItem, LocalEventsService, NodesRightMode, OPEN_URL_MODE } from 'ngx-edu-sharing-ui';\n\n@Component({\n    selector: 'es-node-relations-dialog',\n    templateUrl: './node-relations-dialog.component.html',\n    styleUrls: ['./node-relations-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NodeRelationsDialogComponent implements OnInit {\n    readonly Relations = Object.values(Relations);\n    readonly RelationsInverted = {\n        [Relations.isBasedOn]: 'isBasisFor',\n        [Relations.isPartOf]: 'hasPart',\n        [Relations.references]: 'references',\n    };\n\n    source: UniversalNode;\n    relations: RelationData[];\n    addRelations: RelationData[] = [];\n    deleteRelations: RelationData[] = [];\n    swapRelation: boolean;\n    readonly form = new UntypedFormGroup({\n        relation: new UntypedFormControl(Relations.isBasedOn, Validators.required),\n    });\n    permissions = [RestConstants.PERMISSION_WRITE];\n    target: UniversalNode;\n    columns = [new ListItem('NODE', RestConstants.LOM_PROP_TITLE)];\n\n    private readonly buttons = [\n        new DialogButton('CANCEL', DialogButton.TYPE_CANCEL, () => this.dialogRef.close(null)),\n        new DialogButton('SAVE', DialogButton.TYPE_PRIMARY, () => this.save()),\n    ];\n\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: NodeRelationsDialogData,\n        private dialogRef: CardDialogRef<NodeRelationsDialogData, NodeRelationsDialogResult>,\n        private bridgeService: BridgeService,\n        private cdr: ChangeDetectorRef,\n        private localEvents: LocalEventsService,\n        private nodeHelper: NodeHelperService,\n        private nodeService: NodeService,\n        private relationService: RelationService,\n        private toast: Toast,\n        private userService: UserService,\n    ) {\n        this.dialogRef.patchState({ isLoading: true });\n    }\n\n    ngOnInit(): void {\n        this.dialogRef.patchConfig({ buttons: this.buttons });\n        this.initNode(this.data.node);\n        this.updateButtons();\n    }\n\n    getRelationKeys() {\n        return [\n            ...new Set(this.addRelations.concat(this.relations || [])?.map((r) => r.type)),\n        ].sort();\n    }\n\n    swap() {\n        this.swapRelation = !this.swapRelation;\n    }\n\n    getCriteria(): SearchRequestCriteria[] {\n        return [\n            {\n                property: 'sourceNode',\n                values: [this.source.ref.id],\n            },\n        ];\n    }\n\n    getAllExistingRelations() {\n        return this.getAllRelations().filter((r) => !this.deleteRelations.includes(r));\n    }\n\n    getAllRelations() {\n        return this.relations.concat(this.addRelations);\n    }\n\n    getRelations(\n        key: 'isPartOf' | 'isBasedOn' | 'references' | 'hasPart' | 'isBasisFor',\n    ): RelationData[] {\n        return this.getAllRelations()\n            .filter((r) => r.type === key)\n            .sort((a, b) => (a.timestamp > b.timestamp ? 1 : -1));\n    }\n\n    openNode(node: UniversalNode) {\n        UIHelper.openUrl(\n            this.nodeHelper.getNodeUrl(node, {\n                closeOnBack: true,\n            }),\n            this.bridgeService,\n            OPEN_URL_MODE.Blank,\n        );\n    }\n\n    removeRelation(relation: RelationData) {\n        if (!this.deleteRelations.includes(relation)) {\n            this.deleteRelations.push(relation);\n        }\n        this.updateButtons();\n    }\n\n    resolveRelationSendData(r: RelationData) {\n        const inverted = this.isInverted(r);\n        let source = this.source.ref.id;\n        let target = r.node.ref.id;\n        let type: string = r.type;\n        if (inverted) {\n            source = r.node.ref.id;\n            target = this.source.ref.id;\n            type = inverted;\n        }\n        return {\n            source,\n            target,\n            type,\n        };\n    }\n\n    private async save() {\n        this.toast.showProgressSpinner();\n        try {\n            await forkJoin(\n                this.addRelations.map((r) => {\n                    const data = this.resolveRelationSendData(r);\n                    return this.relationService.createRelation(\n                        data.source,\n                        data.target,\n                        data.type as any,\n                    );\n                }),\n            ).toPromise();\n            await forkJoin(\n                this.deleteRelations.map((r) => {\n                    const data = this.resolveRelationSendData(r);\n                    return this.relationService.deleteRelation(\n                        data.source,\n                        data.target,\n                        data.type as any,\n                    );\n                }),\n            ).toPromise();\n            this.dialogRef.close(true);\n            this.localEvents.nodesChanged.emit([this.data.node]);\n        } catch (e) {}\n        this.toast.closeProgressSpinner();\n    }\n\n    updateButtons() {\n        const hasChanges = this.hasChanges();\n        this.buttons[1].disabled = !hasChanges;\n        if (hasChanges) {\n            this.dialogRef.patchConfig({ closable: Closable.Confirm });\n        } else if (this.target) {\n            this.dialogRef.patchConfig({ closable: Closable.Standard });\n        } else {\n            this.dialogRef.patchConfig({ closable: Closable.Casual });\n        }\n    }\n\n    getCurrentType() {}\n\n    async createRelation() {\n        let type = this.form.get('relation').value;\n        if (this.swapRelation) {\n            type = (this.RelationsInverted as any)[type];\n        }\n        if (\n            this.getAllExistingRelations().find(\n                (r) => r.node.ref.id === this.target.ref.id && r.type === type,\n            )\n        ) {\n            this.toast.error(null, 'NODE_RELATIONS.RELATION_EXISTS');\n            return;\n        }\n        this.addRelations.push({\n            node: this.target,\n            type,\n            // @TODO: check if api model is invalid\n            timestamp: new Date().getTime() as any,\n            creator: (await this.userService.observeCurrentUser().pipe(first()).toPromise()).person,\n        });\n        this.form.reset();\n        this.form.setValue({ relation: Relations.isBasedOn });\n        this.swapRelation = false;\n        this.target = null;\n        this.updateButtons();\n    }\n\n    private isInverted(r: RelationData) {\n        return Object.keys(this.RelationsInverted).find(\n            (k) => (this.RelationsInverted as any)[k] === r.type && k !== r.type,\n        );\n    }\n\n    isPublishedCopy() {\n        return !!this.source.properties[RestConstants.CCM_PROP_PUBLISHED_ORIGINAL]?.[0];\n    }\n\n    isSwappable() {\n        const relation = this.form.get('relation').value;\n        return !((this.RelationsInverted as any)[relation] === relation);\n    }\n\n    canModify(relation: RelationData) {\n        return this.nodeHelper.getNodesRight(\n            [relation.node],\n            RestConstants.PERMISSION_WRITE,\n            NodesRightMode.Effective,\n        );\n    }\n\n    private hasChanges() {\n        return this.addRelations?.length || this.deleteRelations?.length;\n    }\n\n    private async initNode(node: Node): Promise<void> {\n        // published original: we now need to switch to the original id!\n        if (node.properties[RestConstants.CCM_PROP_PUBLISHED_ORIGINAL]) {\n            // switch to original node id!\n            node = await this.nodeService\n                .getNode(\n                    RestHelper.removeSpacesStoreRef(\n                        node.properties[RestConstants.CCM_PROP_PUBLISHED_ORIGINAL][0],\n                    ),\n                )\n                .toPromise();\n        }\n        this.source = node;\n        this.relationService.getRelations(node.ref.id).subscribe(\n            (relations) => {\n                this.relations = relations.relations;\n                this.dialogRef.patchState({ isLoading: false });\n                this.cdr.detectChanges();\n            },\n            (e) => {\n                this.dialogRef.close(null);\n            },\n        );\n    }\n}\n\nenum Relations {\n    isBasedOn = 'isBasedOn',\n    isPartOf = 'isPartOf',\n    references = 'references',\n}\n","<es-info-message mode=\"info\" *ngIf=\"isPublishedCopy()\">\n  {{ 'NODE_RELATIONS.RELATION_COPY_HINT' | translate }}\n</es-info-message>\n<h2 class=\"mat-heading-4\">{{ 'NODE_RELATIONS.CREATE_RELATION' | translate }}</h2>\n<form #formElement [formGroup]=\"form\">\n  <mat-form-field>\n    <mat-label>{{ 'NODE_RELATIONS.RELATION_TYPE_LABEL' | translate }}</mat-label>\n    <mat-select formControlName=\"relation\">\n      <mat-option *ngFor=\"let key of Relations\" [value]=\"key\">\n        {{ 'NODE_RELATIONS.RELATION_TYPE_FULLY.' + key | translate }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <es-node-search-selector\n    #selector\n    [class.display-none]=\"target\"\n    [groupId]=\"'search_relation_node'\"\n    [queryId]=\"'search_relation_query'\"\n    [columnsIds]=\"'relationNodes'\"\n    [permissions]=\"permissions\"\n    [criteria]=\"getCriteria()\"\n    (onSelect)=\"target = $event; updateButtons()\"\n    label=\"{{ 'NODE_RELATIONS.RELATION_SEARCH_LABEL' | translate }}\"\n  >\n    <ng-template #noPermissions>\n      <i esIcon=\"security\" matTooltip=\"{{ 'NODE_RELATIONS.NO_PERMISSIONS' | translate }}\"></i>\n    </ng-template>\n  </es-node-search-selector>\n</form>\n<div class=\"relation-result\" *ngIf=\"target\">\n  <div class=\"relation-node\">\n    <es-node-row [node]=\"swapRelation ? target : source\" [columns]=\"selector.columns\"></es-node-row>\n    <button\n      mat-icon-button\n      color=\"primary\"\n      (click)=\"openNode(swapRelation ? target : source)\"\n      matTooltip=\"{{ 'NODE_RELATIONS.OPEN_NODE' | translate }}\"\n    >\n      <i esIcon=\"open_in_new\" [aria]=\"false\"></i>\n    </button>\n  </div>\n  <div class=\"relation-details\">\n    <span>{{\n      'NODE_RELATIONS.RELATION_TYPE.' + $any(RelationsInverted)[form.get('relation').value]\n        | translate\n    }}</span>\n    <i esIcon=\"swap_horiz\" altText=\"{{ 'NODE_RELATIONS.RELATES_TO' | translate }}\"></i>\n    <span>{{ 'NODE_RELATIONS.RELATION_TYPE.' + form.get('relation').value | translate }}</span>\n  </div>\n  <div class=\"relation-node\">\n    <es-node-row [node]=\"swapRelation ? source : target\" [columns]=\"selector.columns\"></es-node-row>\n    <button\n      mat-icon-button\n      color=\"primary\"\n      (click)=\"openNode(swapRelation ? source : target)\"\n      matTooltip=\"{{ 'NODE_RELATIONS.OPEN_NODE' | translate }}\"\n    >\n      <i esIcon=\"open_in_new\" [aria]=\"false\"></i>\n    </button>\n  </div>\n</div>\n<div class=\"actions\" *ngIf=\"target\">\n  <button mat-flat-button color=\"warn\" (click)=\"target = null; updateButtons()\">\n    <i esIcon=\"clear\" [aria]=\"false\"></i>\n    {{ 'NODE_RELATIONS.RESELECT' | translate }}\n  </button>\n  <button mat-button color=\"primary\" (click)=\"swap()\" [disabled]=\"!isSwappable()\">\n    <i esIcon=\"swap_horiz\" [aria]=\"false\"></i>\n    {{ 'NODE_RELATIONS.SWAP' | translate }}\n  </button>\n  <button mat-flat-button color=\"primary\" [disabled]=\"!form.valid\" (click)=\"createRelation()\">\n    <i esIcon=\"add\" [aria]=\"false\"></i>\n    {{ 'NODE_RELATIONS.CREATE_CONFIRM' | translate }}\n  </button>\n</div>\n<h2 class=\"mat-heading-4\">{{ 'NODE_RELATIONS.EXISTING_RELATIONS' | translate }}</h2>\n<div class=\"relations-none\" *ngIf=\"!getRelationKeys().length\">\n  {{ 'NODE_RELATIONS.NO_RELATIONS' | translate }}\n</div>\n<div class=\"relations-group\" *ngFor=\"let key of getRelationKeys()\">\n  <div>\n    <h5 class=\"mat-heading-5\">\n      \"{{ source | nodeTitle }}\" {{ 'NODE_RELATIONS.RELATION_TYPE.' + key | translate }}\n    </h5>\n    <div class=\"relation-nodes\">\n      <!--[node]=\"relation.node\" -->\n      <div\n        class=\"relation-node\"\n        *ngFor=\"let relation of getRelations(key)\"\n        [class.added]=\"addRelations.includes(relation)\"\n      >\n        <es-node-row [node]=\"relation.node\" [columns]=\"columns\">\n          <ng-template #customMetadata>\n            <div class=\"info-group\">\n              <label>{{ 'NODE_RELATIONS.RELATION_CREATED' | translate }}</label>\n              <span>{{ relation.timestamp | formatDate : { relative: false } }}</span>\n            </div>\n            <div class=\"info-group\">\n              <label>{{ 'NODE_RELATIONS.RELATION_CREATOR' | translate }}</label>\n              <span>{{ relation.creator | authorityName }}</span>\n            </div>\n          </ng-template>\n        </es-node-row>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"openNode(relation.node)\"\n          matTooltip=\"{{ 'NODE_RELATIONS.OPEN_NODE' | translate }}\"\n        >\n          <i esIcon=\"open_in_new\" [aria]=\"false\"></i>\n        </button>\n        <button\n          mat-icon-button\n          color=\"primary\"\n          *ngIf=\"!deleteRelations.includes(relation)\"\n          [disabled]=\"!canModify(relation)\"\n          (click)=\"removeRelation(relation)\"\n          matTooltip=\"{{ 'NODE_RELATIONS.REMOVE_RELATION' | translate }}\"\n        >\n          <i esIcon=\"delete\" [aria]=\"false\"></i>\n        </button>\n        <div *ngIf=\"deleteRelations.includes(relation)\" class=\"deleted-overlay\">\n          <div class=\"deleted-info\">\n            <div class=\"line\"><hr /></div>\n            <div class=\"info\">{{ 'WORKSPACE.SHARE.DELETED' | translate }}</div>\n            <div class=\"line\"><hr /></div>\n          </div>\n          <button\n            mat-icon-button\n            color=\"primary\"\n            (click)=\"deleteRelations.splice(deleteRelations.indexOf(relation), 1)\"\n            matTooltip=\"{{ 'NODE_RELATIONS.RESTORE_RELATION' | translate }}\"\n          >\n            <i esIcon=\"undo\" [aria]=\"false\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { MdsModule } from '../../../mds/mds.module';\nimport { NodeRelationsDialogComponent } from './node-relations-dialog.component';\nimport { NodeSearchSelectorComponent } from './node-search-selector/node-search-selector.component';\nimport { EduSharingUiModule } from 'ngx-edu-sharing-ui';\n\nexport { NodeRelationsDialogComponent };\n\n@NgModule({\n    declarations: [NodeRelationsDialogComponent, NodeSearchSelectorComponent],\n    imports: [SharedModule, EduSharingUiModule, MdsModule],\n})\nexport class NodeRelationsDialogModule {}\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    EventEmitter,\n    Input,\n    Output,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { UntypedFormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { debounceTime, filter, map, switchMap, tap } from 'rxjs/operators';\nimport { RestSearchService } from '../../../../../core-module/rest/services/rest-search.service';\nimport { Node, SearchRequestCriteria } from '../../../../../core-module/rest/data-object';\nimport { RestConstants } from '../../../../../core-module/rest/rest-constants';\nimport { MdsHelper } from '../../../../../core-module/rest/mds-helper';\nimport { RestMdsService } from '../../../../../core-module/rest/services/rest-mds.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ListItem, NodesRightMode, UIAnimation } from 'ngx-edu-sharing-ui';\nimport { NodeHelperService } from '../../../../../services/node-helper.service';\nimport { trigger } from '@angular/animations';\nimport { MdsEditorWrapperComponent } from '../../../../mds/mds-editor/mds-editor-wrapper/mds-editor-wrapper.component';\n\ntype Status = {\n    loading: boolean;\n    result?: Node[];\n};\n@Component({\n    selector: 'es-node-search-selector',\n    templateUrl: 'node-search-selector.component.html',\n    styleUrls: ['node-search-selector.component.scss'],\n    animations: [trigger('switchDialog', UIAnimation.switchDialogBoolean())],\n})\nexport class NodeSearchSelectorComponent implements AfterViewInit {\n    @ContentChild('noPermissions') noPermissionsRef: TemplateRef<any>;\n    @ViewChild(MdsEditorWrapperComponent) mdsEditor: MdsEditorWrapperComponent;\n    /**\n     * group id of the mds set to use the search filters from\n     */\n    @Input() groupId: string;\n    /**\n     * query id to use for the search query\n     */\n    @Input() queryId: string;\n    /**\n     * the id to use for the displayed columns\n     */\n    @Input() columnsIds: string;\n    /**\n     * label of the search field\n     */\n    @Input() label: string;\n    /**\n     * only show nodes with appropriate permissions\n     */\n    @Input() permissions: string[] = [];\n    /**\n     * additional search criterias that should be added\n     */\n    @Input() criteria: SearchRequestCriteria[] = [];\n    /**\n     * count of items to search\n     */\n    @Input() itemCount = 25;\n    @Output() onSelect = new EventEmitter<Node>();\n    searchStatus: Status = {\n        loading: false,\n    };\n    input = new UntypedFormControl('');\n    columns: ListItem[];\n    showMds = false;\n    private values: { [p: string]: string[] };\n    hasMds = false;\n\n    constructor(\n        private searchApi: RestSearchService,\n        private mdsService: RestMdsService,\n        private translate: TranslateService,\n        private nodeHelper: NodeHelperService,\n        private changeDetectorRef: ChangeDetectorRef,\n    ) {}\n\n    setOption(event: MatAutocompleteSelectedEvent) {\n        this.onSelect.emit(event.option.value);\n        this.input.setValue('');\n    }\n\n    private searchNodes(): Observable<Node[]> {\n        let criterias: SearchRequestCriteria[] = [];\n        if (this.input.value) {\n            criterias.push({\n                property: RestConstants.PRIMARY_SEARCH_CRITERIA,\n                values: [this.input.value],\n            });\n        }\n        if (this.values) {\n            criterias = criterias.concat(\n                RestSearchService.convertCritierias(this.values, this.mdsEditor.currentWidgets),\n            );\n        }\n        criterias = criterias.concat(this.criteria);\n        const request = {\n            count: this.itemCount,\n            sortBy: [RestConstants.LUCENE_SCORE],\n            sortAscending: [false],\n        };\n        return this.searchApi\n            .search(\n                criterias,\n                [],\n                request,\n                RestConstants.CONTENT_TYPE_ALL,\n                RestConstants.HOME_REPOSITORY,\n                RestConstants.DEFAULT,\n                [RestConstants.ALL],\n                this.queryId,\n                this.permissions,\n            )\n            .pipe(\n                map((m) =>\n                    m.nodes.sort((a, b) =>\n                        !this.hasPermissions(a) && this.hasPermissions(b)\n                            ? 1\n                            : this.hasPermissions(a) && !this.hasPermissions(b)\n                            ? -1\n                            : 0,\n                    ),\n                ),\n            );\n    }\n\n    ngAfterViewInit(): void {\n        this.mdsService.getSet().subscribe((set) => {\n            this.columns = MdsHelper.getColumns(this.translate, set, this.columnsIds);\n        });\n        combineLatest([this.input.valueChanges, this.mdsEditor.mdsEditorInstance.values])\n            .pipe(\n                debounceTime(500),\n                filter(() => {\n                    if (this.input.value?.length < 2) {\n                        this.searchStatus = {\n                            loading: false,\n                        };\n                        this.changeDetectorRef.detectChanges();\n                        return false;\n                    }\n                    return true;\n                }),\n                tap(() => {\n                    this.searchStatus.loading = true;\n                    this.changeDetectorRef.detectChanges();\n                }),\n                switchMap(() => this.searchNodes()),\n            )\n            .subscribe((result) => {\n                this.searchStatus = {\n                    loading: false,\n                    result,\n                };\n                this.changeDetectorRef.detectChanges();\n            });\n        this.mdsEditor.loadMds();\n        this.mdsEditor.mdsEditorInstance.values.subscribe((v) => (this.values = v));\n    }\n\n    hasPermissions(suggestion: Node) {\n        return this.permissions.every((p) =>\n            this.nodeHelper.getNodesRight([suggestion], p, NodesRightMode.Effective),\n        );\n    }\n\n    onMdsLoaded() {\n        console.log('mds loaded', this.mdsEditor.currentWidgets);\n        this.hasMds = this.mdsEditor.currentWidgets?.length > 0;\n    }\n}\n","<mat-form-field>\n  <mat-label>{{ label }}</mat-label>\n  <i esIcon=\"search\" matPrefix></i>\n  <input\n    type=\"search\"\n    matInput\n    #inputElement\n    [matAutocomplete]=\"autoGroup\"\n    name=\"authoritySearch\"\n    [formControl]=\"input\"\n  />\n  <es-spinner-small *ngIf=\"searchStatus.loading\" matSuffix></es-spinner-small>\n  <mat-autocomplete\n    #autoGroup=\"matAutocomplete\"\n    class=\"mat-autocomplete-high\"\n    (optionSelected)=\"setOption($event)\"\n  >\n    <ng-container *ngIf=\"!searchStatus.loading\">\n      <mat-option *ngIf=\"searchStatus.result?.length === 0\" [disabled]=\"true\">\n        <div class=\"no-match\">{{ 'NODE_SEARCH_SELECTOR.NO_MATCHES' | translate }}</div>\n      </mat-option>\n      <mat-option\n        class=\"node-row-option\"\n        *ngFor=\"let suggestion of searchStatus.result\"\n        [value]=\"suggestion\"\n        [disabled]=\"!hasPermissions(suggestion)\"\n      >\n        <div *ngIf=\"!hasPermissions(suggestion)\" class=\"missing-permissions\">\n          <ng-container\n            *ngTemplateOutlet=\"noPermissionsRef; context: { node: suggestion }\"\n          ></ng-container>\n          <ng-container *ngIf=\"!noPermissionsRef\">\n            <i\n              esIcon=\"security\"\n              matTooltip=\"{{ 'NODE_SEARCH_SELECTOR.NO_PERMISSIONS' | translate }}\"\n            ></i>\n          </ng-container>\n        </div>\n        <es-node-row [node]=\"suggestion\" [columns]=\"columns\"></es-node-row>\n      </mat-option>\n    </ng-container>\n  </mat-autocomplete>\n</mat-form-field>\n<div class=\"more clickable\" *ngIf=\"hasMds\" (click)=\"showMds = !showMds\">\n  <span>{{ 'NODE_SEARCH_SELECTOR.MORE_FILTERS' | translate }}</span>\n  <button mat-icon-button color=\"primary\" (click)=\"showMds = !showMds; $event.stopPropagation()\">\n    <i [esIcon]=\"'keyboard_arrow_' + (showMds ? 'up' : 'down')\"></i>\n  </button>\n</div>\n<div [@switchDialog]=\"showMds\" class=\"mds-wrapper\">\n  <es-mds-editor-wrapper\n    #mds\n    [embedded]=\"true\"\n    [editorMode]=\"'search'\"\n    [groupId]=\"groupId\"\n    [currentValues]=\"{}\"\n    (onMdsLoaded)=\"onMdsLoaded()\"\n  ></es-mds-editor-wrapper>\n</div>\n"],"names":["UntypedFormControl","UntypedFormGroup","Validators","forkJoin","first","DialogButton","RestConstants","RestHelper","UIHelper","CARD_DIALOG_DATA","Closable","ListItem","NodesRightMode","OPEN_URL_MODE","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty","key_r10","ɵɵelement","ɵɵpropertyInterpolate","ɵɵlistener","NodeRelationsDialogComponent_div_17_Template_button_click_3_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","openNode","swapRelation","target","source","NodeRelationsDialogComponent_div_17_Template_button_click_17_listener","ctx_r13","ctx_r6","_r3","columns","ɵɵtextInterpolate","RelationsInverted","form","get","value","NodeRelationsDialogComponent_div_18_Template_button_click_1_listener","_r15","ctx_r14","updateButtons","NodeRelationsDialogComponent_div_18_Template_button_click_5_listener","ctx_r16","swap","NodeRelationsDialogComponent_div_18_Template_button_click_9_listener","ctx_r17","createRelation","ctx_r7","isSwappable","valid","ɵɵpipeBind2","relation_r20","timestamp","ɵɵpureFunction0","_c0","creator","NodeRelationsDialogComponent_div_23_div_7_button_7_Template_button_click_0_listener","_r28","$implicit","ctx_r26","removeRelation","ctx_r23","canModify","NodeRelationsDialogComponent_div_23_div_7_div_8_Template_button_click_9_listener","_r32","ctx_r30","deleteRelations","splice","indexOf","ɵɵtemplate","NodeRelationsDialogComponent_div_23_div_7_ng_template_2_Template","ɵɵtemplateRefExtractor","NodeRelationsDialogComponent_div_23_div_7_Template_button_click_4_listener","restoredCtx","_r34","ctx_r33","node","NodeRelationsDialogComponent_div_23_div_7_button_7_Template","NodeRelationsDialogComponent_div_23_div_7_div_8_Template","ɵɵclassProp","ctx_r19","addRelations","includes","NodeRelationsDialogComponent_div_23_div_7_Template","ɵɵtextInterpolate2","ctx_r9","key_r18","getRelations","NodeRelationsDialogComponent","constructor","data","dialogRef","bridgeService","cdr","localEvents","nodeHelper","nodeService","relationService","toast","userService","Relations","Object","values","isBasedOn","isPartOf","references","relation","required","permissions","PERMISSION_WRITE","LOM_PROP_TITLE","buttons","TYPE_CANCEL","close","TYPE_PRIMARY","save","patchState","isLoading","ngOnInit","patchConfig","initNode","getRelationKeys","Set","concat","relations","map","r","type","sort","getCriteria","property","ref","id","getAllExistingRelations","getAllRelations","filter","key","a","b","openUrl","getNodeUrl","closeOnBack","Blank","push","resolveRelationSendData","inverted","isInverted","_this","_asyncToGenerator","showProgressSpinner","toPromise","deleteRelation","nodesChanged","emit","e","closeProgressSpinner","hasChanges","disabled","closable","Confirm","Standard","Casual","getCurrentType","_this2","find","error","Date","getTime","observeCurrentUser","pipe","person","reset","setValue","keys","k","isPublishedCopy","properties","CCM_PROP_PUBLISHED_ORIGINAL","getNodesRight","Effective","length","_this3","getNode","removeSpacesStoreRef","subscribe","detectChanges","_","ɵɵdirectiveInject","i1","CardDialogRef","i2","BridgeService","ChangeDetectorRef","i3","LocalEventsService","i4","NodeHelperService","i5","NodeService","RelationService","i6","Toast","UserService","_2","selectors","decls","vars","consts","template","NodeRelationsDialogComponent_Template","rf","ctx","NodeRelationsDialogComponent_es_info_message_0_Template","NodeRelationsDialogComponent_mat_option_11_Template","NodeRelationsDialogComponent_Template_es_node_search_selector_onSelect_12_listener","$event","NodeRelationsDialogComponent_ng_template_15_Template","NodeRelationsDialogComponent_div_17_Template","NodeRelationsDialogComponent_div_18_Template","NodeRelationsDialogComponent_div_22_Template","NodeRelationsDialogComponent_div_23_Template","SharedModule","MdsModule","NodeSearchSelectorComponent","EduSharingUiModule","NodeRelationsDialogModule","_3","declarations","imports","EventEmitter","combineLatest","debounceTime","switchMap","tap","RestSearchService","MdsHelper","UIAnimation","trigger","MdsEditorWrapperComponent","ɵɵelementContainer","ɵɵelementContainerStart","ɵɵelementContainerEnd","NodeSearchSelectorComponent_ng_container_9_mat_option_2_div_1_ng_container_1_Template","NodeSearchSelectorComponent_ng_container_9_mat_option_2_div_1_ng_container_2_Template","noPermissionsRef","ɵɵpureFunction1","_c1","suggestion_r8","NodeSearchSelectorComponent_ng_container_9_mat_option_2_div_1_Template","hasPermissions","NodeSearchSelectorComponent_ng_container_9_mat_option_1_Template","NodeSearchSelectorComponent_ng_container_9_mat_option_2_Template","ctx_r3","searchStatus","result","NodeSearchSelectorComponent_div_10_Template_div_click_0_listener","_r14","showMds","NodeSearchSelectorComponent_div_10_Template_button_click_4_listener","ctx_r15","stopPropagation","ctx_r4","searchApi","mdsService","translate","changeDetectorRef","criteria","itemCount","onSelect","loading","input","hasMds","setOption","event","option","searchNodes","criterias","PRIMARY_SEARCH_CRITERIA","convertCritierias","mdsEditor","currentWidgets","request","count","sortBy","LUCENE_SCORE","sortAscending","search","CONTENT_TYPE_ALL","HOME_REPOSITORY","DEFAULT","ALL","queryId","m","nodes","ngAfterViewInit","getSet","set","getColumns","columnsIds","valueChanges","mdsEditorInstance","loadMds","v","suggestion","every","p","onMdsLoaded","console","log","RestMdsService","TranslateService","contentQueries","NodeSearchSelectorComponent_ContentQueries","dirIndex","NodeSearchSelectorComponent_es_spinner_small_6_Template","NodeSearchSelectorComponent_Template_mat_autocomplete_optionSelected_7_listener","NodeSearchSelectorComponent_ng_container_9_Template","NodeSearchSelectorComponent_div_10_Template","NodeSearchSelectorComponent_Template_es_mds_editor_wrapper_onMdsLoaded_12_listener","label","_r2","groupId","_c2","switchDialogBoolean"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}