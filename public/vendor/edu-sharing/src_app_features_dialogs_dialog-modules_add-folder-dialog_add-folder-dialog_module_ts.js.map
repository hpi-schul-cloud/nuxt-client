{"version":3,"file":"src_app_features_dialogs_dialog-modules_add-folder-dialog_add-folder-dialog_module_ts.js","mappings":"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","sources":["./src/app/features/dialogs/dialog-modules/add-folder-dialog/add-folder-dialog-data.ts","./src/app/features/dialogs/dialog-modules/add-folder-dialog/add-folder-dialog.component.ts","./src/app/features/dialogs/dialog-modules/add-folder-dialog/add-folder-dialog.component.html","./src/app/features/dialogs/dialog-modules/add-folder-dialog/add-folder-dialog.module.ts"],"sourcesContent":["import { Node } from '../../../../core-module/core.module';\n\nexport class AddFolderDialogData {\n    parent: Node;\n    /** Folder name to be pre-filled. */\n    name?: string;\n}\n\nexport interface AddFolderDialogResult {\n    /** The folder name chosen by the user. */\n    name: string;\n    metadataSet?: string;\n}\n","import { Component, Inject, OnInit } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n    ConfigurationHelper,\n    DialogButton,\n    MdsInfo,\n    MdsMetadatasets,\n    Node,\n    RestConstants,\n    RestMdsService,\n} from '../../../../core-module/core.module';\nimport { UIHelper } from '../../../../core-ui-module/ui-helper';\nimport { CARD_DIALOG_DATA } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport { AddFolderDialogData, AddFolderDialogResult } from './add-folder-dialog-data';\nimport { ConfigService } from 'ngx-edu-sharing-api';\n\n@Component({\n    selector: 'es-add-folder-dialog',\n    templateUrl: './add-folder-dialog.component.html',\n    styleUrls: ['./add-folder-dialog.component.scss'],\n})\nexport class AddFolderDialogComponent implements OnInit {\n    folderName = '';\n    mdsSetsIds: MdsInfo[];\n    mdsSets: MdsInfo[];\n    mdsSet: string;\n    _parent: Node;\n\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: AddFolderDialogData,\n        private dialogRef: CardDialogRef<AddFolderDialogData, AddFolderDialogResult>,\n        private mds: RestMdsService,\n        private translate: TranslateService,\n        private config: ConfigService,\n    ) {}\n\n    ngOnInit(): void {\n        this.processDialogData();\n        this.updateButtons();\n    }\n\n    private processDialogData() {\n        this.mds.getSets().subscribe((data: MdsMetadatasets) => {\n            this.mdsSets = ConfigurationHelper.filterValidMds(\n                RestConstants.HOME_REPOSITORY,\n                data.metadatasets,\n                this.config,\n            );\n            if (this.mdsSets) {\n                UIHelper.prepareMetadatasets(this.translate, this.mdsSets);\n                if (this.mdsSets.length) {\n                    this.mdsSet = this.mdsSets[0].id;\n                } else {\n                    console.error(\n                        'Filtering valid mds failed, no mds was available after filtering. Will use default mds',\n                    );\n                    console.error('Check availableMds in config');\n                }\n            }\n            this._parent = this.data.parent;\n            if (\n                this._parent &&\n                this._parent.metadataset &&\n                this._parent.metadataset !== 'default'\n            ) {\n                this.mdsSet = this._parent.metadataset;\n            }\n        });\n    }\n\n    private cancel() {\n        this.dialogRef.close(null);\n    }\n\n    addFolder() {\n        const name = this.folderName.trim();\n        if (!name) {\n            return;\n        }\n        this.dialogRef.close({\n            name,\n            metadataSet: this.mdsSets ? this.mdsSet : null,\n        });\n    }\n\n    updateButtons() {\n        const buttons = [\n            new DialogButton('CANCEL', { color: 'standard' }, () => this.cancel()),\n            new DialogButton('SAVE', { color: 'primary' }, () => this.addFolder()),\n        ];\n        buttons[1].disabled = !this.folderName.trim();\n        this.dialogRef.patchConfig({ buttons });\n    }\n}\n","<mat-form-field>\n  <mat-label>{{ 'WORKSPACE.FOLDER_PLACEHOLDER' | translate }}</mat-label>\n  <input\n    matInput\n    [(ngModel)]=\"folderName\"\n    (ngModelChange)=\"updateButtons()\"\n    (keyup.enter)=\"addFolder()\"\n    autofocus\n    autocomplete=\"off\"\n    data-test=\"add-folder-name-input\"\n  />\n</mat-form-field>\n<div *ngIf=\"mdsSets && mdsSets.length > 1\">\n  <mat-form-field>\n    <mat-label>{{ 'WORKSPACE.ADD_FOLDER_METADATASET' | translate }}</mat-label>\n    <mat-select id=\"mdsSet\" [(ngModel)]=\"mdsSet\">\n      <mat-option *ngFor=\"let mds of mdsSets\" [value]=\"mds.id\">{{ mds.name }}</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { AddFolderDialogComponent } from './add-folder-dialog.component';\n\nexport { AddFolderDialogComponent };\n\n@NgModule({\n    declarations: [AddFolderDialogComponent],\n    imports: [SharedModule],\n})\nexport class AddFolderDialogModule {}\n"],"names":["AddFolderDialogData","ConfigurationHelper","DialogButton","RestConstants","UIHelper","CARD_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","mds_r2","id","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵlistener","AddFolderDialogComponent_div_5_Template_mat_select_ngModelChange_5_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","mdsSet","ɵɵtemplate","AddFolderDialogComponent_div_5_mat_option_6_Template","ɵɵpipeBind1","ctx_r0","mdsSets","AddFolderDialogComponent","constructor","data","dialogRef","mds","translate","config","folderName","ngOnInit","processDialogData","updateButtons","getSets","subscribe","filterValidMds","HOME_REPOSITORY","metadatasets","prepareMetadatasets","length","console","error","_parent","parent","metadataset","cancel","close","addFolder","trim","metadataSet","buttons","color","disabled","patchConfig","_","ɵɵdirectiveInject","i1","CardDialogRef","i2","RestMdsService","i3","TranslateService","i4","ConfigService","_2","selectors","decls","vars","consts","template","AddFolderDialogComponent_Template","rf","ctx","AddFolderDialogComponent_Template_input_ngModelChange_4_listener","AddFolderDialogComponent_Template_input_keyup_enter_4_listener","AddFolderDialogComponent_div_5_Template","SharedModule","AddFolderDialogModule","_3","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}