{"version":3,"file":"src_app_features_dialogs_dialog-modules_workflow-dialog_workflow-dialog_module_ts.js","mappings":"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","sources":["./src/app/features/dialogs/dialog-modules/workflow-dialog/workflow-dialog-data.ts","./src/app/features/dialogs/dialog-modules/workflow-dialog/workflow-dialog.component.ts","./src/app/features/dialogs/dialog-modules/workflow-dialog/workflow-dialog.component.html","./src/app/features/dialogs/dialog-modules/workflow-dialog/workflow-dialog.module.ts","./src/app/features/dialogs/dialog-modules/workflow-dialog/workflow-history/workflow-history.component.ts","./src/app/features/dialogs/dialog-modules/workflow-dialog/workflow-history/workflow-history.component.html"],"sourcesContent":["import { Node } from '../../../../core-module/core.module';\n\nexport class WorkflowDialogData {\n    nodes: Node[];\n}\n\nexport type WorkflowDialogResult = void;\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n    LocalEventsService,\n    WORKFLOW_STATUS_UNCHECKED,\n    WorkflowDefinition,\n} from 'ngx-edu-sharing-ui';\nimport { Observable, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n    Authority,\n    ConfigurationService,\n    DialogButton,\n    Group,\n    Node,\n    Permission,\n    RestConnectorService,\n    RestConstants,\n    RestHelper,\n    RestIamService,\n    RestNodeService,\n    UserSimple,\n    WorkflowEntry,\n} from '../../../../core-module/core.module';\nimport { NodeHelperService } from '../../../../services/node-helper.service';\nimport { Toast } from '../../../../services/toast';\nimport { AuthorityNamePipe } from '../../../../shared/pipes/authority-name.pipe';\nimport { CARD_DIALOG_DATA } from '../../card-dialog/card-dialog-config';\nimport { CardDialogRef } from '../../card-dialog/card-dialog-ref';\nimport { DialogsService } from '../../dialogs.service';\nimport { WorkflowDialogData, WorkflowDialogResult } from './workflow-dialog-data';\n\ntype WorkflowReceiver = Authority;\n\n@Component({\n    selector: 'es-workflow-dialog',\n    templateUrl: './workflow-dialog.component.html',\n    styleUrls: ['./workflow-dialog.component.scss'],\n})\nexport class WorkflowDialogComponent {\n    readonly TYPE_EDITORIAL = RestConstants.GROUP_TYPE_EDITORIAL;\n\n    comment: string;\n    globalAllowed: boolean;\n    history: WorkflowEntry[];\n    receivers: WorkflowReceiver[] = [];\n    status = WORKFLOW_STATUS_UNCHECKED;\n    validStatus: WorkflowDefinition[];\n\n    private initialStatus = WORKFLOW_STATUS_UNCHECKED;\n    private nodes: Node[] = this.data.nodes;\n\n    constructor(\n        @Inject(CARD_DIALOG_DATA) public data: WorkflowDialogData,\n        private dialogRef: CardDialogRef<WorkflowDialogData, WorkflowDialogResult>,\n        private config: ConfigurationService,\n        private connector: RestConnectorService,\n        private dialogs: DialogsService,\n        private iam: RestIamService,\n        private localEvents: LocalEventsService,\n        private nodeHelper: NodeHelperService,\n        private nodeService: RestNodeService,\n        private toast: Toast,\n        private translate: TranslateService,\n    ) {\n        this.updateButtons();\n        this.connector\n            .hasToolPermission(RestConstants.TOOLPERMISSION_GLOBAL_AUTHORITY_SEARCH)\n            .subscribe((has: boolean) => (this.globalAllowed = has));\n        this.config.getAll().subscribe(async () => {\n            this.validStatus = this.nodeHelper.getWorkflows();\n            const receiver = this.config.instant('workflow.defaultReceiver');\n            if (receiver) {\n                try {\n                    this.receivers = [(await this.iam.getGroup(receiver).toPromise()).group];\n                } catch (e) {\n                    toast.clientConfigError('workflow.defaultReceiver', 'group not found');\n                }\n            }\n        });\n        void this.initNodes(this.data.nodes);\n    }\n\n    isAllowedAsNext(status: WorkflowDefinition) {\n        if (!this.initialStatus.next) {\n            return true;\n        }\n        if (this.initialStatus.id === status.id) {\n            return true;\n        }\n        return this.initialStatus.next.indexOf(status.id) !== -1;\n    }\n\n    setStatus(status: WorkflowDefinition) {\n        if (!this.isAllowedAsNext(status)) {\n            return;\n        }\n        this.status = status;\n        this.updateButtons();\n    }\n\n    addSuggestion(data: Authority) {\n        this.receivers = [data];\n        this.updateButtons();\n    }\n\n    removeReceiver(data: WorkflowReceiver) {\n        const pos = this.receivers.indexOf(data);\n        if (pos !== -1) {\n            this.receivers.splice(pos, 1);\n        }\n        this.updateButtons();\n    }\n\n    private hasChanges() {\n        return this.statusChanged() || this.receiversChanged();\n    }\n\n    private async saveWorkflow() {\n        if (\n            !this.comment &&\n            this.receiversChanged() &&\n            this.config.instant('workflow.commentRequired', true)\n        ) {\n            this.toast.error(null, 'WORKSPACE.WORKFLOW.NO_COMMENT');\n            return;\n        }\n        const receivers = this.status.hasReceiver ? this.receivers : [];\n        if (receivers.length) {\n            const hasPermission = await this.requestReceiverPermissionIfNeeded(this.receivers[0]);\n            if (!hasPermission) {\n                return;\n            }\n        } else if (this.status.hasReceiver) {\n            this.toast.error(null, 'WORKSPACE.WORKFLOW.NO_RECEIVER');\n            return;\n        }\n        this.saveWorkflowFinal(receivers);\n    }\n\n    private cancel() {\n        this.dialogRef.close(null);\n    }\n\n    private async initNodes(nodes: Node[]): Promise<void> {\n        if (!nodes || nodes.length === 0) {\n            return;\n        }\n        this.dialogRef.patchState({ isLoading: true });\n        try {\n            await this.initNodesInner(nodes);\n        } catch (error) {\n            this.toast.error(error);\n            this.cancel();\n        } finally {\n            this.dialogRef.patchState({ isLoading: false });\n            this.updateButtons();\n        }\n    }\n\n    private async initNodesInner(nodes: Node[]): Promise<void> {\n        this.nodes = await this.fetchCompleteNodes(nodes).toPromise();\n        const histories = await forkJoin(\n            nodes.map((node) => this.nodeService.getWorkflowHistory(node.ref.id)),\n        ).toPromise();\n        if (nodes.length > 1) {\n            if (histories.some((history) => history.length > 0)) {\n                this.toast.error(null, 'WORKSPACE.WORKFLOW.BULK_WORKFLOWS_EXIST');\n                this.cancel();\n                return;\n            } else {\n                this.history = [];\n                this.receivers = [];\n                ({ current: this.status, initial: this.initialStatus } =\n                    this.nodeHelper.getDefaultWorkflowStatus(true));\n            }\n        } else {\n            this.history = histories[0];\n            if (this.history.length) {\n                this.receivers = this.history[0].receiver as Authority[];\n            }\n            if (!this.receivers || (this.receivers.length === 1 && !this.receivers[0])) {\n                this.receivers = [];\n            }\n            ({ current: this.status, initial: this.initialStatus } =\n                this.nodeHelper.getWorkflowStatus(this.nodes[0], true));\n        }\n    }\n\n    private fetchCompleteNodes(nodes: Node[]): Observable<Node[]> {\n        return forkJoin(\n            nodes.map((node) =>\n                this.nodeService\n                    .getNodeMetadata(node.ref.id, [RestConstants.ALL])\n                    .pipe(map((nodeWrapper) => nodeWrapper.node)),\n            ),\n        );\n    }\n\n    private saveWorkflowFinal(receivers: WorkflowReceiver[]) {\n        const entry = new WorkflowEntry();\n        const receiversClean: any[] = [];\n        for (const r of receivers) {\n            receiversClean.push({ authorityName: r.authorityName });\n        }\n        entry.receiver = receiversClean;\n        entry.comment = this.comment;\n        entry.status = this.status.id;\n        this.dialogRef.patchState({ isLoading: true });\n        forkJoin(\n            this.nodes.map((node) => this.nodeService.addWorkflow(node.ref.id, entry)),\n        ).subscribe(\n            () => {\n                this.toast.toast('WORKSPACE.TOAST.WORKFLOW_UPDATED');\n                this.fetchCompleteNodes(this.nodes).subscribe(\n                    (nodes) => {\n                        this.afterSaved(nodes);\n                    },\n                    (error) => {\n                        this.toast.error(error);\n                        this.dialogRef.patchState({ isLoading: false });\n                    },\n                );\n            },\n            (error) => {\n                this.toast.error(error);\n                this.dialogRef.patchState({ isLoading: false });\n            },\n        );\n    }\n\n    private afterSaved(nodes: Node[]): void {\n        this.localEvents.nodesChanged.emit(nodes);\n        this.dialogRef.close(null);\n    }\n\n    private receiversChanged() {\n        if (this.nodes.length > 1) {\n            return this.receivers.length !== 0;\n        } else {\n            const prop: string[] = this.nodes[0].properties[RestConstants.CCM_PROP_WF_RECEIVER];\n            if (prop) {\n                if (prop.length !== this.receivers.length) {\n                    return true;\n                }\n                for (const receiver of this.receivers) {\n                    if (prop.indexOf(receiver.authorityName) === -1) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            return this.receivers.length > 0;\n        }\n    }\n\n    private statusChanged() {\n        return this.status.id !== this.initialStatus.id;\n    }\n\n    private updateButtons() {\n        const save = new DialogButton('SAVE', { color: 'primary' }, () => this.saveWorkflow());\n        save.disabled = !this.hasChanges();\n        const buttons = [\n            new DialogButton('CANCEL', { color: 'standard' }, () => this.cancel()),\n            save,\n        ];\n        this.dialogRef.patchConfig({ buttons });\n    }\n\n    /**\n     * Checks if the given receiver has the 'coordinator' permission and requests to grant it to\n     * them if not.\n     *\n     * @returns `true` if the receiver had or was granted the permission\n     */\n    private async requestReceiverPermissionIfNeeded(receiver: WorkflowReceiver): Promise<boolean> {\n        const permissionsList = await forkJoin(\n            this.nodes.map((node) =>\n                this.nodeService.getNodePermissionsForUser(node.ref.id, receiver.authorityName),\n            ),\n        ).toPromise();\n        const nodesMissingPermission = this.nodes.filter(\n            (_, index) => !permissionsList[index].includes(RestConstants.PERMISSION_COORDINATOR),\n        );\n        if (nodesMissingPermission.length === 0) {\n            return true;\n        } else {\n            const shouldGrantPermission = await this.requestReceiverPermissionDialog(receiver);\n            if (shouldGrantPermission) {\n                await this.grantReceiverPermission(nodesMissingPermission, receiver);\n            }\n            return shouldGrantPermission;\n        }\n    }\n\n    /**\n     * Shows a dialog to the user, asking them whether to grant missing permissions to the receiver.\n     *\n     * @returns `true` if the user decided to grant the permissions.\n     */\n    private async requestReceiverPermissionDialog(receiver: WorkflowReceiver): Promise<boolean> {\n        const dialogRef = await this.dialogs.openGenericDialog({\n            title: 'WORKSPACE.WORKFLOW.USER_NO_PERMISSION',\n            message: 'WORKSPACE.WORKFLOW.USER_NO_PERMISSION_INFO',\n            messageParameters: {\n                user: new AuthorityNamePipe(this.translate).transform(receiver, null),\n            },\n            buttons: [\n                { label: 'CANCEL', config: { color: 'standard' } },\n                { label: 'WORKSPACE.WORKFLOW.PROCEED', config: { color: 'primary' } },\n            ],\n        });\n        const response = await dialogRef.afterClosed().toPromise();\n        return response === 'WORKSPACE.WORKFLOW.PROCEED';\n    }\n\n    private async grantReceiverPermission(\n        nodes: Node[],\n        receiver: WorkflowReceiver,\n    ): Promise<void> {\n        this.dialogRef.patchState({ isLoading: true });\n        try {\n            await Promise.all(nodes.map((node) => this.addWritePermission(receiver, node)));\n        } catch (error) {\n            this.toast.error(error);\n        }\n    }\n\n    private async addWritePermission(authority: WorkflowReceiver, node: Node): Promise<void> {\n        const nodePermissions = await this.nodeService.getNodePermissions(node.ref.id).toPromise();\n        const permissions = RestHelper.addCoordinatorPermission(nodePermissions, authority);\n        await this.nodeService.setNodePermissions(node.ref.id, permissions, false).toPromise();\n    }\n}\n","<div class=\"workflow-content\">\n  <div class=\"row\">\n    <div class=\"inputs\">\n      <es-authority-search-input\n        [disabled]=\"!status.hasReceiver\"\n        [globalSearchAllowed]=\"globalAllowed\"\n        [groupType]=\"TYPE_EDITORIAL\"\n        [showRecent]=\"false\"\n        (onChooseAuthority)=\"addSuggestion($event)\"\n        [placeholder]=\"'WORKSPACE.WORKFLOW.RECEIVERS'\"\n        hint=\"{{ 'WORKSPACE.WORKFLOW.RECEIVERS_HINT' | translate }}\"\n      ></es-authority-search-input>\n      <mat-form-field class=\"status-select\">\n        <mat-select\n          [value]=\"status\"\n          (valueChange)=\"setStatus($event)\"\n          [style.--status-color]=\"status.color\"\n        >\n          <mat-option\n            *ngFor=\"let option of validStatus\"\n            [value]=\"option\"\n            [disabled]=\"!isAllowedAsNext(option)\"\n          >\n            <span class=\"workflow-dialog-status-option\" [style.--status-color]=\"option.color\">\n              {{ 'WORKFLOW.' + option.id | translate }}\n            </span>\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"receivers\">\n      <mat-chip-listbox *ngIf=\"status.hasReceiver\">\n        <mat-chip-option\n          *ngFor=\"let receiver of receivers\"\n          [selectable]=\"false\"\n          (removed)=\"removeReceiver(receiver)\"\n          class=\"badge\"\n        >\n          <div class=\"mat-chip-group\">\n            <span class=\"primary\">{{ receiver | authorityName }}</span>\n            <span class=\"secondary\">{{ receiver | permissionName : { field: 'secondary' } }}</span>\n          </div>\n          <i matChipRemove esIcon=\"cancel\"></i>\n        </mat-chip-option>\n      </mat-chip-listbox>\n    </div>\n  </div>\n  <mat-form-field class=\"comment\">\n    <mat-label>{{ 'WORKSPACE.WORKFLOW.COMMENT' | translate }}</mat-label>\n    <input matInput [(ngModel)]=\"comment\" />\n    <mat-hint>{{ 'WORKSPACE.WORKFLOW.COMMENT_INFO' | translate }}</mat-hint>\n  </mat-form-field>\n  <div class=\"historyLabel\" *ngIf=\"history?.length\">\n    {{ 'WORKSPACE.WORKFLOW.HISTORY' | translate }}\n  </div>\n</div>\n<es-workflow-list [history]=\"history\"></es-workflow-list>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { WorkflowDialogComponent } from './workflow-dialog.component';\nimport { WorkflowListComponent } from './workflow-history/workflow-history.component';\n\nexport { WorkflowDialogComponent };\n\n@NgModule({\n    declarations: [WorkflowDialogComponent, WorkflowListComponent],\n    imports: [SharedModule],\n})\nexport class WorkflowDialogModule {}\n","import { Component, Input } from '@angular/core';\nimport { WorkflowDefinition } from 'ngx-edu-sharing-ui';\nimport { WorkflowEntry } from '../../../../../core-module/rest/data-object';\nimport { NodeHelperService } from '../../../../../services/node-helper.service';\n\n@Component({\n    selector: 'es-workflow-list',\n    templateUrl: 'workflow-history.component.html',\n    styleUrls: ['workflow-history.component.scss'],\n})\nexport class WorkflowListComponent {\n    @Input() history: WorkflowEntry[];\n    defaultStatus: WorkflowDefinition;\n\n    constructor(private nodeHelper: NodeHelperService) {\n        ({ initial: this.defaultStatus } = this.nodeHelper.getDefaultWorkflowStatus(false));\n    }\n\n    getWorkflowForId(id: string) {\n        return this.nodeHelper.getWorkflowStatusById(id);\n    }\n}\n","<ng-container *ngIf=\"history\">\n  <div class=\"no-history\" *ngIf=\"!history.length\">\n    {{ 'WORKSPACE.WORKFLOW.NO_HISTORY' | translate }}\n  </div>\n  <div *ngIf=\"history.length\" class=\"history\">\n    <div *ngFor=\"let entry of history; let i = index; let last = last\">\n      <div class=\"user\">{{ entry.editor | authorityName }}</div>\n      <div class=\"date\">{{ entry.time | formatDate : { time: true, relative: true } }}</div>\n      <div class=\"box\">\n        <div class=\"row origin\">\n          <div class=\"receivers\">\n            <label>{{ 'WORKSPACE.WORKFLOW.RECEIVERS' | translate }}</label>\n            <mat-chip-set\n              *ngIf=\"\n                i === history.length - 1 || !getWorkflowForId(history[i + 1].status).hasReceiver\n              \"\n            >\n              <mat-chip>\n                {{ 'WORKSPACE.WORKFLOW.NOBODY' | translate }}\n              </mat-chip>\n            </mat-chip-set>\n            <mat-chip-set\n              *ngIf=\"\n                !(i === history.length - 1 || !getWorkflowForId(history[i + 1].status).hasReceiver)\n              \"\n            >\n              <mat-chip *ngFor=\"let receiver of history[i + 1].receiver\" class=\"badge\">\n                <i\n                  matChipAvatar\n                  [esIcon]=\"receiver.authorityType === 'USER' ? 'person' : 'group'\"\n                ></i>\n                <div class=\"mat-chip-group\">\n                  <span class=\"primary\">{{ receiver | authorityName }}</span>\n                  <span class=\"secondary\">{{\n                    receiver | permissionName : { field: 'secondary' }\n                  }}</span>\n                </div>\n              </mat-chip>\n            </mat-chip-set>\n          </div>\n          <div class=\"status\" *ngIf=\"i < history.length - 1\">\n            <label>{{ 'WORKSPACE.WORKFLOW.OLD_STATUS' | translate }}</label>\n            <div\n              class=\"workflowStatus\"\n              [style.background-color]=\"getWorkflowForId(history[i + 1].status).color\"\n            >\n              {{ 'WORKFLOW.' + history[i + 1].status | translate }}\n            </div>\n          </div>\n          <div class=\"status\" *ngIf=\"i === history.length - 1\">\n            <label>{{ 'WORKSPACE.WORKFLOW.OLD_STATUS' | translate }}</label>\n            <div class=\"workflowStatus\" [style.background-color]=\"defaultStatus.color\">\n              {{ 'WORKFLOW.' + defaultStatus.id | translate }}\n            </div>\n          </div>\n        </div>\n        <div class=\"row arrow\">\n          <i esIcon=\"keyboard_arrow_right\"></i>\n        </div>\n        <div class=\"row target\">\n          <div class=\"receivers\">\n            <label>{{ 'WORKSPACE.WORKFLOW.RECEIVERS_NEXT' | translate }}</label>\n            <mat-chip-set *ngIf=\"!getWorkflowForId(history[i].status).hasReceiver\">\n              <mat-chip>\n                {{ 'WORKSPACE.WORKFLOW.NOBODY' | translate }}\n              </mat-chip>\n            </mat-chip-set>\n            <mat-chip-set\n              *ngIf=\"getWorkflowForId(history[i].status).hasReceiver && entry.receiver?.length\"\n            >\n              <mat-chip *ngFor=\"let receiver of entry.receiver\" class=\"badge\">\n                <i\n                  matChipAvatar\n                  [esIcon]=\"receiver.authorityType === 'USER' ? 'person' : 'group'\"\n                ></i>\n                <div class=\"mat-chip-group\">\n                  <span class=\"primary\">{{ receiver | authorityName }}</span>\n                  <span class=\"secondary\">{{\n                    receiver | permissionName : { field: 'secondary' }\n                  }}</span>\n                </div>\n              </mat-chip>\n            </mat-chip-set>\n          </div>\n          <div class=\"status\">\n            <label>{{ 'WORKSPACE.WORKFLOW.NEW_STATUS' | translate }}</label>\n            <div\n              class=\"workflowStatus\"\n              [style.background-color]=\"getWorkflowForId(entry.status).color\"\n            >\n              {{ 'WORKFLOW.' + entry.status | translate }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"comment\" *ngIf=\"entry.comment\">\n        <label>{{ 'WORKSPACE.WORKFLOW.COMMENT' | translate }}</label>\n        <div>{{ entry.comment }}</div>\n      </div>\n      <hr *ngIf=\"!last\" />\n    </div>\n  </div>\n</ng-container>\n"],"names":["WorkflowDialogData","WORKFLOW_STATUS_UNCHECKED","forkJoin","map","DialogButton","RestConstants","RestHelper","WorkflowEntry","AuthorityNamePipe","CARD_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r3","ctx_r0","isAllowedAsNext","ɵɵadvance","ɵɵstyleProp","color","ɵɵtextInterpolate1","ɵɵpipeBind1","id","ɵɵlistener","WorkflowDialogComponent_mat_chip_listbox_9_mat_chip_option_1_Template_mat_chip_option_removed_0_listener","restoredCtx","ɵɵrestoreView","_r7","receiver_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","removeReceiver","ɵɵelement","ɵɵtextInterpolate","ɵɵpipeBind2","ɵɵpureFunction0","_c0","ɵɵtemplate","WorkflowDialogComponent_mat_chip_listbox_9_mat_chip_option_1_Template","ctx_r1","receivers","WorkflowDialogComponent","constructor","data","dialogRef","config","connector","dialogs","iam","localEvents","nodeHelper","nodeService","toast","translate","_this","TYPE_EDITORIAL","GROUP_TYPE_EDITORIAL","status","initialStatus","nodes","updateButtons","hasToolPermission","TOOLPERMISSION_GLOBAL_AUTHORITY_SEARCH","subscribe","has","globalAllowed","getAll","_asyncToGenerator","validStatus","getWorkflows","receiver","instant","getGroup","toPromise","group","e","clientConfigError","initNodes","next","indexOf","setStatus","addSuggestion","pos","splice","hasChanges","statusChanged","receiversChanged","saveWorkflow","_this2","comment","error","hasReceiver","length","hasPermission","requestReceiverPermissionIfNeeded","saveWorkflowFinal","cancel","close","_this3","patchState","isLoading","initNodesInner","_this4","fetchCompleteNodes","histories","node","getWorkflowHistory","ref","some","history","current","initial","getDefaultWorkflowStatus","getWorkflowStatus","getNodeMetadata","ALL","pipe","nodeWrapper","entry","receiversClean","r","push","authorityName","addWorkflow","afterSaved","nodesChanged","emit","prop","properties","CCM_PROP_WF_RECEIVER","save","disabled","buttons","patchConfig","_this5","permissionsList","getNodePermissionsForUser","nodesMissingPermission","filter","_","index","includes","PERMISSION_COORDINATOR","shouldGrantPermission","requestReceiverPermissionDialog","grantReceiverPermission","_this6","openGenericDialog","title","message","messageParameters","user","transform","label","response","afterClosed","_this7","Promise","all","addWritePermission","authority","_this8","nodePermissions","getNodePermissions","permissions","addCoordinatorPermission","setNodePermissions","ɵɵdirectiveInject","i1","CardDialogRef","i2","ConfigurationService","RestConnectorService","i3","DialogsService","RestIamService","i4","LocalEventsService","i5","NodeHelperService","RestNodeService","i6","Toast","i7","TranslateService","_2","selectors","decls","vars","consts","template","WorkflowDialogComponent_Template","rf","ctx","WorkflowDialogComponent_Template_es_authority_search_input_onChooseAuthority_3_listener","$event","WorkflowDialogComponent_Template_mat_select_valueChange_6_listener","WorkflowDialogComponent_mat_option_7_Template","WorkflowDialogComponent_mat_chip_listbox_9_Template","WorkflowDialogComponent_Template_input_ngModelChange_14_listener","WorkflowDialogComponent_div_18_Template","ɵɵpropertyInterpolate","SharedModule","WorkflowListComponent","WorkflowDialogModule","_3","declarations","imports","receiver_r16","authorityType","WorkflowListComponent_ng_container_0_div_2_div_1_mat_chip_set_14_mat_chip_1_Template","ctx_r8","i_r5","ctx_r9","getWorkflowForId","ctx_r10","defaultStatus","receiver_r20","WorkflowListComponent_ng_container_0_div_2_div_1_mat_chip_set_25_mat_chip_1_Template","entry_r4","WorkflowListComponent_ng_container_0_div_2_div_1_mat_chip_set_13_Template","WorkflowListComponent_ng_container_0_div_2_div_1_mat_chip_set_14_Template","WorkflowListComponent_ng_container_0_div_2_div_1_div_15_Template","WorkflowListComponent_ng_container_0_div_2_div_1_div_16_Template","WorkflowListComponent_ng_container_0_div_2_div_1_mat_chip_set_24_Template","WorkflowListComponent_ng_container_0_div_2_div_1_mat_chip_set_25_Template","WorkflowListComponent_ng_container_0_div_2_div_1_div_33_Template","WorkflowListComponent_ng_container_0_div_2_div_1_hr_34_Template","editor","time","_c1","ctx_r3","last_r6","WorkflowListComponent_ng_container_0_div_2_div_1_Template","ctx_r2","ɵɵelementContainerStart","WorkflowListComponent_ng_container_0_div_1_Template","WorkflowListComponent_ng_container_0_div_2_Template","ɵɵelementContainerEnd","getWorkflowStatusById","inputs","WorkflowListComponent_Template","WorkflowListComponent_ng_container_0_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}