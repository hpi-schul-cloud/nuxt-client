{"version":3,"file":"src_app_pages_app-login-page_app-login-page_module_ts.js","mappings":"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","sources":["./src/app/pages/app-login-page/app-login-page-routing.module.ts","./src/app/pages/app-login-page/app-login-page.component.ts","./src/app/pages/app-login-page/app-login-page.component.html","./src/app/pages/app-login-page/app-login-page.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppLoginPageComponent } from './app-login-page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AppLoginPageComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AppLoginPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Toast } from '../../services/toast';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ConfigurationService,\n    DialogButton,\n    OAuthResult,\n    RestConnectorService,\n    RestConstants,\n    RestLocatorService,\n} from '../../core-module/core.module';\nimport { OPEN_URL_MODE, TranslationsService, UIConstants } from 'ngx-edu-sharing-ui';\nimport { CordovaService } from '../../services/cordova.service';\nimport { UIHelper } from '../../core-ui-module/ui-helper';\nimport { BridgeService } from '../../services/bridge.service';\nimport { PlatformLocation } from '@angular/common';\n\n// possible states this UI component can be in\nenum StateUI {\n    SERVERLIST = 0,\n    LOGIN = 1,\n    SERVERURL = 2,\n    NOINTERNET = 3,\n}\n\n@Component({\n    selector: 'es-app-login-page',\n    templateUrl: 'app-login-page.component.html',\n    styleUrls: ['app-login-page.component.scss'],\n})\n// tslint:disable:no-console\nexport class AppLoginPageComponent implements OnInit {\n    public isLoading = true;\n    public disabled = true;\n\n    username = '';\n    password = '';\n    private serverurl = 'https://';\n\n    errorURL: string = null;\n\n    servers: any;\n    currentServer: any;\n    private locationNext: string;\n    config: any;\n    buttons: DialogButton[];\n\n    constructor(\n        private toast: Toast,\n        private router: Router,\n        private route: ActivatedRoute,\n        private translations: TranslationsService,\n        private platformLocation: PlatformLocation,\n        private cordova: CordovaService,\n        private connector: RestConnectorService,\n        private bridge: BridgeService,\n        private configService: ConfigurationService,\n        private locator: RestLocatorService,\n    ) {\n        console.info('startup app');\n        this.isLoading = true;\n\n        // WHEN RUNNING ON DESKTOP --> FORWARD TO BASIC LOGIN PAGE\n        if (!this.cordova.isRunningCordova()) {\n            this.router.navigate([UIConstants.ROUTER_PREFIX + 'login']);\n            return;\n        }\n\n        this.route.queryParams.subscribe((params) => {\n            this.locationNext = params['next'];\n        });\n\n        // 1. Wait until Cordova is Ready\n        this.cordova.subscribeServiceReady().subscribe(async () => {\n            // app startup, cordova has valid data ?\n            // -> go to default location (this will check oauth)\n            if (await this.cordova.hasValidConfig()) {\n                console.info('app config valid, continuing to default location');\n                this.cordova.refreshOAuth().subscribe(() => {\n                    this.goToDefaultLocation();\n                });\n                return;\n            }\n\n            // set the self set server url if available from persistence\n            // for this value its no problem that result is async\n            // init translation service\n            this.init();\n        });\n    }\n    private recoverPassword() {\n        if (this.config.register.local) {\n            this.router.navigate([UIConstants.ROUTER_PREFIX + 'register', 'request']);\n        } else {\n            window.location.href = this.config.register.recoverUrl;\n        }\n    }\n    buttonExitApp(): void {\n        this.cordova.exitApp();\n    }\n\n    ngOnInit() {}\n\n    checkConditions(): void {\n        this.disabled = !this.username; // || !this.password;\n        this.updateButtons();\n    }\n\n    buttonLoginBack(): void {\n        //window.history.back();\n        //window.location.replace(this.cordova.getIndexPath()+\"?reset=true\");\n        this.cordova.restartCordova();\n        //(navigator as any).app.loadUrl(this.cordova.getIndexPath()+\"?reset=true\");\n    }\n\n    login() {\n        /*\n        // test camera\n        this.cordova.getPhotoFromCamera(\n        (win:any)=>{\n        },\n        (error:any, info:any)=>{\n            console.dir(info);\n        });\n        if (1==1) return;\n        */\n\n        /*\n        // test file download\n        this.cordova.downloadContent(\"http://sample-videos.com/video/mp4/240/big_buck_bunny_240p_20mb.mp4\", \"test.mp4\",(win:any)=>{\n            alert(\"OK \"+win);\n            this.cordova.openContentNative(win,()=>{\n                alert(\"OK Open\");\n            }, (text:string, error:any) => {\n                alert(\"FAIL open\");\n            });\n        }, (text:string,error:any) => {\n            console.error(text, error);\n            alert(\"FAIL: \"+text);\n        });\n        if (1==1) return;\n        */\n        this.isLoading = true;\n        // APP: oAuth Login\n        this.cordova.loginOAuth(this.locator.endpointUrl, this.username, this.password).subscribe(\n            (oauthTokens: OAuthResult) => {\n                this.cordova.setPermanentStorage(\n                    RestConstants.CORDOVA_STORAGE_OAUTHTOKENS,\n                    JSON.stringify(oauthTokens),\n                );\n                // continue to within the app\n                this.goToDefaultLocation();\n            },\n            (error) => {\n                console.warn(error);\n                this.isLoading = false;\n                if (typeof error == 'string') {\n                    this.toast.error(null, error);\n                } else {\n                    this.toast.error(null, 'LOGIN.ERROR');\n                }\n            },\n        );\n        /*\n        this.cordova.setServerURL(this.currentServer.url+\"rest/\",true).subscribe(()=> {\n\n\n        });\n        */\n    }\n\n    private goToDefaultLocation() {\n        if (this.locationNext) {\n            console.info('location next', this.locationNext);\n            window.location.replace(this.locationNext);\n        } else {\n            this.configService.getAll().subscribe(() => {\n                UIHelper.goToDefaultLocation(\n                    this.router,\n                    this.platformLocation,\n                    this.configService,\n                    true,\n                );\n            });\n        }\n    }\n    getServerIcon() {\n        return 'assets/images/app-icon.svg';\n    }\n    private init() {\n        this.translations.waitForInit().subscribe(() => {\n            this.serverurl = this.locator.endpointUrl;\n            this.configService.getAll().subscribe((config) => {\n                this.config = config;\n                if (!this.config.register) {\n                    // default register mode: allow local registration if not disabled\n                    this.config.register = { local: true };\n                }\n                this.isLoading = false;\n\n                this.handleCurrentState();\n            });\n        });\n    }\n    register() {\n        if (this.config.register.local) {\n            this.router.navigate([UIConstants.ROUTER_PREFIX + 'register']);\n        } else {\n            UIHelper.openUrl(\n                this.config.register.registerUrl,\n                this.bridge,\n                OPEN_URL_MODE.BlankSystemBrowser,\n            );\n        }\n    }\n    updateButtons() {\n        const login = new DialogButton('LOGIN.LOGIN', { color: 'primary' }, () => this.login());\n        login.disabled = this.disabled;\n        if (this.config && (this.config.register.local || this.config.register.recoverUrl)) {\n            const recover = new DialogButton('LOGIN.RECOVER_PASSWORD', { color: 'standard' }, () =>\n                this.recoverPassword(),\n            );\n            this.buttons = [recover, login];\n        } else {\n            this.buttons = [login];\n        }\n    }\n\n    private async handleCurrentState() {\n        // an external login, e.g. via shibboleth, may occured. get oauth for the session, and store it\n\n        // this will break shibboleth/sso!\n        /*if (!(await this.cordova.hasValidConfig())) {\n            console.info('empty app oauth status, show login');\n            this.checkLoginUrl();\n            return;\n        }*/\n        this.connector.isLoggedIn(true).subscribe(\n            (data) => {\n                console.info('app login status', data);\n                if (data.statusCode === RestConstants.STATUS_CODE_OK) {\n                    this.cordova\n                        .loginOAuth(this.locator.endpointUrl, null, null, 'client_credentials')\n                        .subscribe((oauthTokens: OAuthResult) => {\n                            this.cordova.setPermanentStorage(\n                                RestConstants.CORDOVA_STORAGE_OAUTHTOKENS,\n                                JSON.stringify(oauthTokens),\n                            );\n                            // continue to within the app\n                            this.goToDefaultLocation();\n                        });\n                } else {\n                    this.checkLoginUrl();\n                }\n            },\n            (error) => {\n                this.checkLoginUrl();\n            },\n        );\n    }\n\n    private checkLoginUrl() {\n        if (this.configService.instant('loginUrl')) {\n            window.location.href = this.configService.instant('loginUrl');\n        }\n    }\n}\n","<es-global-progress *ngIf=\"isLoading\"></es-global-progress>\n<div class=\"appLogin\" *ngIf=\"!isLoading\">\n  <div class=\"infoTop\" style=\"margin-top: -10px\">\n    <h1>{{ 'LOGIN_APP.LOGIN' | translate }}</h1>\n    <div>{{ 'LOGIN_APP.LOGIN_INFO' | translate }}</div>\n  </div>\n  <es-card\n    modal=\"auto\"\n    title=\"{{ 'LOGIN_APP.LOGIN_TITLE' | translate }}\"\n    width=\"mlarge\"\n    height=\"large\"\n    avatar=\"assets/images/app-icon.svg\"\n    [isCancelable]=\"true\"\n    (onCancel)=\"buttonLoginBack()\"\n    [buttons]=\"buttons\"\n  >\n    <div class=\"card-content-padding\">\n      <form (ngSubmit)=\"login()\" #loginForm>\n        <mat-form-field>\n          <mat-label>{{ 'LOGIN.USERNAME' | translate }}</mat-label>\n          <input\n            matInput\n            required\n            autofocus\n            name=\"username\"\n            id=\"username\"\n            (ngModelChange)=\"checkConditions()\"\n            [(ngModel)]=\"username\"\n          />\n        </mat-form-field>\n        <div>\n          <es-input-password\n            label=\"{{ 'LOGIN.PASSWORD' | translate }}\"\n            inputId=\"password\"\n            [required]=\"true\"\n            (valueChange)=\"checkConditions()\"\n            (keydown.enter)=\"login()\"\n            [(value)]=\"password\"\n          ></es-input-password>\n        </div>\n      </form>\n      <div class=\"register\" *ngIf=\"config.register.local || config.register.registerUrl\">\n        {{ 'LOGIN.REGISTER_TEXT' | translate }}\n        <button mat-button color=\"primary\" (click)=\"register()\">\n          {{ 'LOGIN.REGISTER_LINK' | translate }} <i esIcon=\"arrow_forward\"></i>\n        </button>\n      </div>\n    </div>\n  </es-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AppLoginPageRoutingModule } from './app-login-page-routing.module';\nimport { AppLoginPageComponent } from './app-login-page.component';\n\n@NgModule({\n    declarations: [AppLoginPageComponent],\n    imports: [SharedModule, AppLoginPageRoutingModule],\n})\nexport class AppLoginPageModule {}\n"],"names":["RouterModule","AppLoginPageComponent","routes","path","component","AppLoginPageRoutingModule","_","_2","_3","forChild","imports","i1","exports","DialogButton","RestConstants","OPEN_URL_MODE","UIConstants","UIHelper","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵlistener","AppLoginPageComponent_div_1_div_21_Template_button_click_3_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","register","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","AppLoginPageComponent_div_1_Template_es_card_onCancel_8_listener","_r7","ctx_r6","buttonLoginBack","AppLoginPageComponent_div_1_Template_form_ngSubmit_11_listener","ctx_r8","login","AppLoginPageComponent_div_1_Template_input_ngModelChange_17_listener","ctx_r9","checkConditions","$event","ctx_r10","username","AppLoginPageComponent_div_1_Template_es_input_password_valueChange_19_listener","ctx_r11","AppLoginPageComponent_div_1_Template_es_input_password_keydown_enter_19_listener","ctx_r12","ctx_r13","password","ɵɵtemplate","AppLoginPageComponent_div_1_div_21_Template","ɵɵtextInterpolate","ɵɵpropertyInterpolate","ɵɵproperty","ctx_r1","buttons","config","local","registerUrl","StateUI","constructor","toast","router","route","translations","platformLocation","cordova","connector","bridge","configService","locator","_this","isLoading","disabled","serverurl","errorURL","console","info","isRunningCordova","navigate","ROUTER_PREFIX","queryParams","subscribe","params","locationNext","subscribeServiceReady","_asyncToGenerator","hasValidConfig","refreshOAuth","goToDefaultLocation","init","recoverPassword","window","location","href","recoverUrl","buttonExitApp","exitApp","ngOnInit","updateButtons","restartCordova","loginOAuth","endpointUrl","oauthTokens","setPermanentStorage","CORDOVA_STORAGE_OAUTHTOKENS","JSON","stringify","error","warn","replace","getAll","getServerIcon","waitForInit","handleCurrentState","openUrl","BlankSystemBrowser","color","recover","_this2","isLoggedIn","data","statusCode","STATUS_CODE_OK","checkLoginUrl","instant","ɵɵdirectiveInject","Toast","i2","Router","ActivatedRoute","i3","TranslationsService","i4","PlatformLocation","i5","CordovaService","i6","RestConnectorService","i7","BridgeService","ConfigurationService","RestLocatorService","selectors","decls","vars","consts","template","AppLoginPageComponent_Template","rf","ctx","AppLoginPageComponent_es_global_progress_0_Template","AppLoginPageComponent_div_1_Template","SharedModule","AppLoginPageModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}