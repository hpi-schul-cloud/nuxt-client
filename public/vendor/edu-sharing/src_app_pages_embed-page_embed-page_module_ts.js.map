{"version":3,"file":"src_app_pages_embed-page_embed-page_module_ts.js","mappings":"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","sources":["./src/app/pages/embed-page/embed-page-routing.module.ts","./src/app/pages/embed-page/embed-page.component.ts","./src/app/pages/embed-page/embed-page.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmbedPageComponent } from './embed-page.component';\n\nconst routes: Routes = [\n    {\n        path: ':component',\n        component: EmbedPageComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class EmbedPageRoutingModule {}\n","import { Component, NgZone, OnDestroy, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n    EventListener,\n    FrameEventsService,\n} from '../../core-module/rest/services/frame-events.service';\nimport { TranslationsService } from 'ngx-edu-sharing-ui';\nimport { LicenseDialogContentComponent } from '../../features/dialogs/dialog-modules/license-dialog/license-dialog-content.component';\nimport { Toast } from '../../services/toast';\nimport { RestConstants } from '../../core-module/rest/rest-constants';\nimport { UIHelper } from '../../core-ui-module/ui-helper';\nimport { MainNavService } from '../../main/navigation/main-nav.service';\nimport { MdsEditorWrapperComponent } from '../../features/mds/mds-editor/mds-editor-wrapper/mds-editor-wrapper.component';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'es-mds-embed',\n    encapsulation: ViewEncapsulation.None,\n    template: `\n        <es-mds-editor-wrapper\n            #mdsRef\n            [embedded]=\"true\"\n            editorMode=\"form\"\n            [currentValues]=\"data\"\n            [setId]=\"setId\"\n            [groupId]=\"groupId\"\n            *ngIf=\"component === 'mds'\"\n        ></es-mds-editor-wrapper>\n        <es-license-dialog-content\n            *ngIf=\"component === 'license'\"\n            #licenseRef\n            [data]=\"{ kind: 'properties', properties: data }\"\n        ></es-license-dialog-content>\n    `,\n    styleUrls: ['embed-page.component.scss'],\n})\nexport class EmbedPageComponent implements EventListener, OnDestroy {\n    @ViewChild('mdsRef') mdsRef: MdsEditorWrapperComponent;\n    @ViewChild('licenseRef') licenseRef: LicenseDialogContentComponent;\n    component: string;\n    data: any = {};\n    groupId = 'io';\n    setId = RestConstants.DEFAULT;\n    refresh: Boolean;\n    private destroyed = new Subject<void>();\n    constructor(\n        private translations: TranslationsService,\n        private mainNavService: MainNavService,\n        private toast: Toast,\n        private ngZone: NgZone,\n        private route: ActivatedRoute,\n        private event: FrameEventsService,\n    ) {\n        (window as any).ngEmbed = this;\n        // disable the cookie info when in embedded context\n        this.mainNavService.getCookieInfo().show = false;\n        this.mainNavService.patchMainNavConfig({\n            currentScope: 'embed',\n            show: false,\n        });\n        this.event.addListener(this, this.destroyed);\n        this.toast.showProgressSpinner();\n        this.translations.waitForInit().subscribe(() => {\n            this.route.params.subscribe((params) => {\n                this.component = params.component;\n                this.route.queryParams.subscribe((params) => {\n                    if (params.group) {\n                        this.groupId = params.group;\n                    }\n                    if (params.set) {\n                        this.setId = params.set;\n                    }\n                    if (params.data) {\n                        this.data = JSON.parse(params.data);\n                    }\n                    if (this.component === 'mds') {\n                        UIHelper.waitForComponent(this.ngZone, this, 'mdsRef').subscribe(\n                            async () => {\n                                await this.mdsRef.reInit();\n                                this.toast.closeProgressSpinner();\n                            },\n                        );\n                    } else {\n                        this.toast.closeProgressSpinner();\n                    }\n                });\n            });\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    async onEvent(event: string, data: any) {\n        if (event === FrameEventsService.EVENT_PARENT_FETCH_DATA) {\n            if (this.component === 'mds') {\n                this.event.broadcastEvent(\n                    FrameEventsService.EVENT_POST_DATA,\n                    await this.mdsRef.getValues(),\n                );\n            } else if (this.component === 'license') {\n                this.event.broadcastEvent(\n                    FrameEventsService.EVENT_POST_DATA,\n                    this.licenseRef.getProperties(),\n                );\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { LicenseDialogModule } from '../../features/dialogs/dialog-modules/license-dialog/license-dialog.module';\nimport { MdsModule } from '../../features/mds/mds.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { EmbedPageRoutingModule } from './embed-page-routing.module';\nimport { EmbedPageComponent } from './embed-page.component';\n\n@NgModule({\n    declarations: [EmbedPageComponent],\n    imports: [SharedModule, EmbedPageRoutingModule, MdsModule, LicenseDialogModule],\n})\nexport class EmbedPageModule {}\n"],"names":["RouterModule","EmbedPageComponent","routes","path","component","EmbedPageRoutingModule","_","_2","_3","forChild","imports","i1","exports","FrameEventsService","RestConstants","UIHelper","Subject","i0","ɵɵelement","ɵɵproperty","ctx_r0","data","setId","groupId","ɵɵpureFunction1","_c2","ctx_r1","constructor","translations","mainNavService","toast","ngZone","route","event","_this","DEFAULT","destroyed","window","ngEmbed","getCookieInfo","show","patchMainNavConfig","currentScope","addListener","showProgressSpinner","waitForInit","subscribe","params","queryParams","group","set","JSON","parse","waitForComponent","_asyncToGenerator","mdsRef","reInit","closeProgressSpinner","ngOnDestroy","next","complete","onEvent","_this2","EVENT_PARENT_FETCH_DATA","broadcastEvent","EVENT_POST_DATA","getValues","licenseRef","getProperties","ɵɵdirectiveInject","TranslationsService","i2","MainNavService","i3","Toast","NgZone","i4","ActivatedRoute","i5","selectors","viewQuery","EmbedPageComponent_Query","rf","ctx","ɵɵtemplate","EmbedPageComponent_es_mds_editor_wrapper_0_Template","EmbedPageComponent_es_license_dialog_content_1_Template","ɵɵadvance","LicenseDialogModule","MdsModule","SharedModule","EmbedPageModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}