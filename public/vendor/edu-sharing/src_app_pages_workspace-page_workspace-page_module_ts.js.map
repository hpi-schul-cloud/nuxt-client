{"version":3,"file":"src_app_pages_workspace-page_workspace-page_module_ts.js","mappings":"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","sources":["./src/app/pages/workspace-page/metadata/metadata-block.component.ts","./src/app/pages/workspace-page/metadata/metadata-block.component.html","./src/app/pages/workspace-page/metadata/metadata-sidebar.component.ts","./src/app/pages/workspace-page/metadata/metadata-sidebar.component.html","./src/app/pages/workspace-page/metadata/metadata.component.ts","./src/app/pages/workspace-page/metadata/metadata.component.html","./src/app/pages/workspace-page/recycle/recycle.component.ts","./src/app/pages/workspace-page/recycle/recycle.component.html","./src/app/pages/workspace-page/sub-tree/sub-tree.component.ts","./src/app/pages/workspace-page/sub-tree/sub-tree.component.html","./src/app/pages/workspace-page/tree/tree.component.ts","./src/app/pages/workspace-page/tree/tree.component.html","./src/app/pages/workspace-page/workspace-page-routing.module.ts","./src/app/pages/workspace-page/workspace-page.component.ts","./src/app/pages/workspace-page/workspace-page.component.html","./src/app/pages/workspace-page/workspace-page.module.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    ConfigurationHelper,\n    Node,\n    NodePermissions,\n    Permission,\n    RestConnectorService,\n    RestConstants,\n    RestNodeService,\n} from '../../../core-module/core.module';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DurationHelper, FormatDatePipe, NodeImageSizePipe, VCard } from 'ngx-edu-sharing-ui';\nimport { NodeHelperService } from '../../../services/node-helper.service';\nimport { ConfigService } from 'ngx-edu-sharing-api';\n\n// Charts.js\ndeclare var Chart: any;\n\n@Component({\n    selector: 'es-workspace-metadata-block',\n    templateUrl: 'metadata-block.component.html',\n    styleUrls: ['metadata-block.component.scss'],\n})\nexport class WorkspaceMetadataBlockComponent {\n    @Input() set node(node: Node) {\n        this.load(node);\n    }\n    @Output() onEditMetadata = new EventEmitter();\n    @Output() onDisplay = new EventEmitter();\n    permissions: any;\n    data: any;\n    _node: Node;\n\n    private async load(node: Node) {\n        this._node = node;\n        this.data = await this.format(node);\n        this.nodeApi.getNodePermissions(node.ref.id).subscribe((data: NodePermissions) => {\n            this.permissions = this.formatPermissions(data);\n        });\n    }\n    private format(node: Node): any {\n        const data: any = {};\n        data.name = node.name;\n        data.title = node.title;\n        data.isDirectory = node.isDirectory;\n        data.isCollection = node.collection != null;\n        data.description = node.properties[RestConstants.LOM_PROP_GENERAL_DESCRIPTION];\n        data.preview = node.preview.url;\n        data.keywords = node.properties[RestConstants.LOM_PROP_GENERAL_KEYWORD];\n        if (data.keywords && data.keywords.length === 1 && !data.keywords[0]) data.keywords = null;\n        // data[\"creator\"]=node.properties[RestConstants.CM_CREATOR];\n        data.creator = ConfigurationHelper.getPersonWithConfigDisplayName(\n            node.createdBy,\n            this.configService,\n        );\n        data.createDate = new FormatDatePipe(this.translate).transform(node.createdAt);\n        data.duration = DurationHelper.getDurationFormatted(\n            node.properties[RestConstants.LOM_PROP_TECHNICAL_DURATION],\n        );\n        data.author = this.toVCards(\n            node.properties[RestConstants.CCM_PROP_LIFECYCLECONTRIBUTER_AUTHOR],\n        ).join(', ');\n        data.author_freetext = node.properties[RestConstants.CCM_PROP_AUTHOR_FREETEXT]\n            ? node.properties[RestConstants.CCM_PROP_AUTHOR_FREETEXT][0]\n            : null;\n        data.mediatype = node.mediatype === 'file' ? node.mimetype : node.mediatype;\n        data.mimetype = node.mimetype;\n        data.size = node.size;\n        if (node.properties[RestConstants.EXIF_PROP_DATE_TIME_ORIGINAL]) {\n            data.exifDate = new FormatDatePipe(this.translate).transform(\n                node.properties[RestConstants.EXIF_PROP_DATE_TIME_ORIGINAL][0],\n            );\n        }\n\n        data.dimensions = new NodeImageSizePipe().transform(node);\n\n        data.license = this.nodeHelper.getLicenseIcon(node);\n        data.licenseName = this.nodeHelper.getLicenseName(node);\n\n        data.properties = [];\n        data.aspects = node.aspects.sort();\n\n        for (const k of Object.keys(node.properties).sort()) {\n            data.properties.push([k, node.properties[k].join(', ')]);\n        }\n        return data;\n    }\n    constructor(\n        public connector: RestConnectorService,\n        private nodeApi: RestNodeService,\n        private translate: TranslateService,\n        private configService: ConfigService,\n        private nodeHelper: NodeHelperService,\n    ) {}\n    isAnimated() {\n        return this.nodeHelper.hasAnimatedPreview(this._node);\n    }\n    private formatPermissions(permissions: NodePermissions): any {\n        const currentAuth = this.connector.getCurrentLogin()?.authorityName;\n        const data: any = {};\n        data.users = [];\n        data.groups = [];\n        if (!permissions.permissions) return data;\n        for (const permission of permissions.permissions.inheritedPermissions) {\n            if (\n                permission.authority.authorityName === currentAuth ||\n                permission.authority.authorityType === RestConstants.AUTHORITY_TYPE_OWNER\n            ) {\n            } else if (permission.authority.authorityType === RestConstants.AUTHORITY_TYPE_USER) {\n                data.users.push(permission);\n            } else {\n                data.groups.push(permission);\n            }\n        }\n        for (const permission of permissions.permissions.localPermissions.permissions) {\n            if (\n                permission.authority.authorityName === currentAuth ||\n                permission.authority.authorityType === RestConstants.AUTHORITY_TYPE_OWNER\n            ) {\n            } else if (permission.authority.authorityType === RestConstants.AUTHORITY_TYPE_USER) {\n                if (!this.containsPermission(data.groups, permission)) data.users.push(permission);\n            } else {\n                if (!this.containsPermission(data.groups, permission)) data.groups.push(permission);\n            }\n        }\n        return data;\n    }\n\n    toVCards(properties: any[]) {\n        const vcards: string[] = [];\n        if (properties) {\n            for (const p of properties) {\n                vcards.push(new VCard(p).getDisplayName());\n            }\n        }\n        return vcards;\n    }\n\n    containsPermission(permissions: Permission[], permission: Permission) {\n        for (const perm of permissions) {\n            if (perm.authority.authorityName == permission.authority.authorityName) return true;\n        }\n        return false;\n    }\n    canEdit() {\n        return this._node && this._node.access.indexOf(RestConstants.ACCESS_WRITE) !== -1;\n    }\n}\n","<ng-container *ngIf=\"data\">\n  <img\n    class=\"preview clickable\"\n    (click)=\"onDisplay.emit(_node)\"\n    [src]=\"\n      _node | esNodeImage : (isAnimated() ? {} : { crop: true, width: 600, height: 450 }) | async\n    \"\n  />\n  <div class=\"metadata-container\">\n    <button mat-icon-button class=\"edit\" (click)=\"onEditMetadata.emit(_node)\" *ngIf=\"canEdit()\">\n      <i class=\"material-icons\">edit</i>\n    </button>\n    <div class=\"metadata\">\n      <div class=\"description\">{{ 'NODE.cm:name' | translate }}</div>\n      <div class=\"value\">{{ data.name }}</div>\n      <div class=\"description\" *ngIf=\"data.title\">{{ 'NODE.cclom:title' | translate }}</div>\n      <div class=\"value\" *ngIf=\"data.title\">{{ data.title }}</div>\n      <div class=\"description\" *ngIf=\"data.keywords\">\n        {{ 'NODE.cclom:general_keyword' | translate }}\n      </div>\n      <div class=\"value\" *ngIf=\"data.keywords\">\n        <div class=\"badge\" *ngFor=\"let keyword of data.keywords\">\n          <span class=\"text\">{{ keyword }}</span>\n        </div>\n      </div>\n      <div class=\"description\" *ngIf=\"data.description\">{{ 'NODE.description' | translate }}</div>\n      <div class=\"value descriptionValue\" *ngIf=\"data.description\">{{ data.description }}</div>\n      <div class=\"description\" *ngIf=\"data.author_freetext\">\n        {{ 'NODE.ccm:author_freetext' | translate }}\n      </div>\n      <div class=\"value valueFreetext\" *ngIf=\"data.author_freetext\">{{ data.author_freetext }}</div>\n      <div class=\"description\" *ngIf=\"data.author\">\n        {{ 'NODE.ccm:lifecyclecontributer_authorFN' | translate }}\n      </div>\n      <div class=\"value\" *ngIf=\"data.author\">{{ data.author }}</div>\n      <div class=\"description\">{{ 'NODE.cm:creator' | translate }}</div>\n      <div class=\"value\">{{ data.creator }}<br />{{ data.createDate }}</div>\n      <div class=\"description\">{{ 'NODE.mimetype' | translate }}</div>\n      <div class=\"value\">\n        <span *ngIf=\"data.mediatype && !data.isDirectory\">{{\n          'MEDIATYPE.' + data.mediatype | translate\n        }}</span>\n        <span *ngIf=\"!data.mediatype\">{{ 'MEDIATYPE.file' | translate }}</span>\n        <span *ngIf=\"data.isDirectory && !data.isCollection\">{{\n          'MEDIATYPE.folder' | translate\n        }}</span>\n        <span *ngIf=\"data.isCollection\">{{ 'MEDIATYPE.collection' | translate }}</span>\n        <span\n          class=\"mimetype\"\n          *ngIf=\"data.mimetype && data.mediatype != data.mimetype && !data.isDirectory\"\n          >({{ data.mimetype }})</span\n        >\n      </div>\n      <div class=\"description\" *ngIf=\"data.exifDate\">\n        {{ 'NODE.exif:dateTimeOriginal' | translate }}\n      </div>\n      <div class=\"value\" *ngIf=\"data.exifDate\">{{ data.exifDate }}</div>\n      <div class=\"description\" *ngIf=\"data.dimensions\">{{ 'NODE.dimensions' | translate }}</div>\n      <div class=\"value\" *ngIf=\"data.dimensions\">{{ data.dimensions }}</div>\n      <div class=\"description\" *ngIf=\"data.duration\">{{ 'NODE.cclom:duration' | translate }}</div>\n      <div class=\"value\" *ngIf=\"data.duration\">{{ data.duration }}</div>\n      <div class=\"description\" *ngIf=\"!data.isDirectory\">{{ 'NODE.size' | translate }}</div>\n      <div class=\"value\" *ngIf=\"!data.isDirectory && data.size\">{{ data.size | formatSize }}</div>\n      <div class=\"value\" *ngIf=\"!data.isDirectory && !data.size\">{{ 'NO_SIZE' | translate }}</div>\n      <div *ngIf=\"permissions\">\n        <div class=\"description\" *ngIf=\"permissions.users.length\">\n          {{ 'WORKSPACE.METADATA.INVITED_USERS' | translate }}\n        </div>\n        <div class=\"value\" *ngIf=\"permissions.users.length\">\n          <div *ngFor=\"let authority of permissions.users\">{{ authority | permissionName }}</div>\n        </div>\n        <div class=\"description\" *ngIf=\"permissions.groups.length\">\n          {{ 'WORKSPACE.METADATA.INVITED_GROUPS' | translate }}\n        </div>\n        <div class=\"value\" *ngIf=\"permissions.groups.length\">\n          <div *ngFor=\"let authority of permissions.groups\">{{ authority | permissionName }}</div>\n        </div>\n      </div>\n      <div class=\"description\" *ngIf=\"data.license\">\n        {{ 'NODE.ccm:commonlicense_key' | translate }}\n      </div>\n      <div class=\"value license-value\" *ngIf=\"data.license | async as license\">\n        <img class=\"license\" [src]=\"license\" />\n        <div class=\"licenseName\">{{ data.licenseName }}</div>\n      </div>\n      <div *ngIf=\"connector.getCurrentLogin()?.isAdmin\">\n        <div class=\"description\">{{ 'Aspects' }}</div>\n        <div class=\"value\">\n          <div class=\"aspect\" *ngFor=\"let aspect of data.aspects\">{{ aspect }}</div>\n        </div>\n        <div *ngFor=\"let property of data.properties\">\n          <div class=\"description\">{{ property[0] }}</div>\n          <div class=\"value\">{{ property[1] }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { trigger } from '@angular/animations';\nimport { Component, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalEventsService, UIAnimation, UIConstants } from 'ngx-edu-sharing-ui';\nimport {\n    Node,\n    NodeVersions,\n    RestConstants,\n    RestNodeService,\n    Version,\n} from '../../../core-module/core.module';\nimport { Toast } from '../../../services/toast';\nimport { YES_OR_NO } from '../../../features/dialogs/dialog-modules/generic-dialog/generic-dialog-data';\nimport { DialogsService } from '../../../features/dialogs/dialogs.service';\nimport { BulkBehavior } from '../../../features/mds/types/types';\nimport { WorkspaceService } from '../workspace.service';\n\n/**\n * Container Component for the workspace's metadata sidebar.\n *\n * Handles input and output of the inner metadata component and shows / hides the sidebar as\n * requested.\n */\n@Component({\n    selector: 'es-metadata-sidebar',\n    templateUrl: './metadata-sidebar.component.html',\n    styleUrls: ['./metadata-sidebar.component.scss'],\n    animations: [trigger('fromRight', UIAnimation.fromRight())],\n})\nexport class MetadataSidebarComponent {\n    get nodeSidebar() {\n        return this.workspace.nodeSidebar;\n    }\n\n    constructor(\n        private dialogs: DialogsService,\n        private localEvents: LocalEventsService,\n        private node: RestNodeService,\n        private router: Router,\n        private toast: Toast,\n        private workspace: WorkspaceService,\n    ) {}\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        if (event.key === 'Escape') {\n            if (this.workspace.nodeSidebar != null) {\n                this.closeSidebar();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n        }\n    }\n\n    async restoreVersion(restore: { version: Version; node: Node }) {\n        const dialogRef = await this.dialogs.openGenericDialog({\n            title: 'WORKSPACE.METADATA.RESTORE_TITLE',\n            message: 'WORKSPACE.METADATA.RESTORE_MESSAGE',\n            buttons: YES_OR_NO,\n            nodes: [restore.node],\n        });\n        dialogRef.afterClosed().subscribe((response) => {\n            if (response === 'YES') {\n                this.doRestoreVersion(restore.version);\n            }\n        });\n    }\n\n    private doRestoreVersion(version: Version): void {\n        this.toast.showProgressSpinner();\n        this.node\n            .revertNodeToVersion(\n                version.version.node.id,\n                version.version.major,\n                version.version.minor,\n            )\n            .subscribe(\n                (data: NodeVersions) => {\n                    this.toast.closeProgressSpinner();\n                    this.closeSidebar();\n                    // @TODO type is not compatible\n                    this.node\n                        .getNodeMetadata(version.version.node.id, [RestConstants.ALL])\n                        .subscribe(\n                            (node) => {\n                                this.localEvents.nodesChanged.emit([node.node]);\n                                this.workspace.nodeSidebar = node.node;\n                                this.workspace.nodeSidebarChange.emit(node.node);\n                                this.toast.toast('WORKSPACE.REVERTED_VERSION');\n                            },\n                            (error: any) => this.toast.error(error),\n                        );\n                },\n                (error: any) => this.toast.error(error),\n            );\n    }\n\n    closeSidebar() {\n        this.workspace.nodeSidebar = null;\n        this.workspace.nodeSidebarChange.emit(null);\n    }\n\n    goToNode(node: Node) {\n        if (node.version) {\n            this.router.navigate([UIConstants.ROUTER_PREFIX + 'render', node.ref.id, node.version]);\n        } else {\n            this.router.navigate([UIConstants.ROUTER_PREFIX + 'render', node.ref.id]);\n        }\n    }\n\n    async openMdsEditor(nodes: Node[]): Promise<void> {\n        const dialogRef = await this.dialogs.openMdsEditorDialogForNodes({\n            nodes,\n            bulkBehavior: BulkBehavior.Default,\n        });\n        dialogRef\n            .afterClosed()\n            .subscribe((updatedNodes) => this.closeMdsEditor(nodes, updatedNodes));\n    }\n\n    private closeMdsEditor(originalNodes: Node[], updatedNodes: Node[] = null) {\n        let refresh = !!updatedNodes;\n        if (\n            this.workspace.nodeSidebar &&\n            this.workspace.nodeSidebar.ref.id === originalNodes[0]?.ref.id &&\n            updatedNodes\n        ) {\n            this.workspace.nodeSidebar = updatedNodes[0];\n        }\n        if (refresh) {\n            this.localEvents.nodesChanged.emit(updatedNodes);\n        }\n    }\n}\n","<es-workspace-metadata\n  *ngIf=\"nodeSidebar\"\n  [@fromRight]=\"nodeSidebar\"\n  class=\"metadata-sidebar\"\n  [node]=\"nodeSidebar\"\n  (onRestore)=\"restoreVersion($event)\"\n  (onDisplay)=\"goToNode($event)\"\n  (onEditMetadata)=\"openMdsEditor([$event])\"\n  (onClose)=\"closeSidebar()\"\n></es-workspace-metadata>\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfigService } from 'ngx-edu-sharing-api';\nimport {\n    DurationHelper,\n    FormatDatePipe,\n    InteractionType,\n    ListItem,\n    NodeDataSource,\n    NodeEntriesDisplayType,\n    NodeImageSizePipe,\n    UIConstants,\n    VCard,\n} from 'ngx-edu-sharing-ui';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport {\n    ConfigurationHelper,\n    IamUser,\n    Node,\n    NodePermissions,\n    Permission,\n    RestConstants,\n    RestHelper,\n    RestIamService,\n    RestNodeService,\n    RestSearchService,\n    RestUsageService,\n    Usage,\n    UsageList,\n    Version,\n} from '../../../core-module/core.module';\nimport { NodeHelperService } from '../../../services/node-helper.service';\nimport { UIHelper } from '../../../core-ui-module/ui-helper';\nimport { NodeService, NodeVersionEntries, NodeVersion } from 'ngx-edu-sharing-api';\n\n// Charts.js\ndeclare var Chart: any;\n\ninterface Stats {\n    labels: string[];\n    colors: string[];\n    points: number[];\n    pointsIcons: string[];\n}\n\n@Component({\n    selector: 'es-workspace-metadata',\n    templateUrl: 'metadata.component.html',\n    styleUrls: ['metadata.component.scss'],\n})\nexport class WorkspaceMetadataComponent implements OnInit {\n    private _canvas: ElementRef<HTMLCanvasElement>;\n    @ViewChild('canvas')\n    get canvas(): ElementRef<HTMLCanvasElement> {\n        return this._canvas;\n    }\n    set canvas(value: ElementRef<HTMLCanvasElement>) {\n        this._canvas = value;\n        this.drawBarChart();\n    }\n\n    @Input() isAdmin: boolean;\n    @Input() set node(node: Node) {\n        this.nodeSubject.next(node);\n    }\n\n    @Output() onEditMetadata = new EventEmitter();\n    @Output() onDownload = new EventEmitter();\n    @Output() onDisplay = new EventEmitter();\n    @Output() onClose = new EventEmitter();\n    @Output() onRestore = new EventEmitter();\n\n    readonly NodeEntriesDisplayType = NodeEntriesDisplayType;\n    readonly InteractionType = InteractionType;\n    readonly INFO = 'INFO';\n    readonly PROPERTIES = 'PROPERTIES';\n    readonly VERSIONS = 'VERSIONS';\n    data: any;\n    loading = true;\n    permissions: any;\n    usagesCollection = new NodeDataSource();\n    usagesCollectionData = this.usagesCollection.connect();\n    nodeObject: Node;\n    versions: NodeVersion[];\n    versionsLoading = false;\n    columns: ListItem[] = [];\n    columnsCollections: ListItem[] = [];\n    statsTotalPoints: number;\n    forkedParent: Node;\n    forkedChildren = new NodeDataSource();\n    stats: Stats = {\n        labels: [],\n        points: [],\n        pointsIcons: ['input', 'layers', 'cloud_download', 'remove_red_eye'],\n        colors: [\n            'rgba(230, 178, 71, .8)',\n            'rgba(151, 91, 93, .8)',\n            'rgba(27, 102, 49, .8)',\n            'rgba(102,167,217,.8)',\n        ],\n    };\n\n    private usages: Usage[];\n    private nodeSubject = new BehaviorSubject<Node>(null);\n\n    constructor(\n        private translate: TranslateService,\n        private config: ConfigService,\n        private nodeHelper: NodeHelperService,\n        private router: Router,\n        private iamApi: RestIamService,\n        private nodeApi: RestNodeService,\n        private nodeService: NodeService,\n        private searchApi: RestSearchService,\n        private usageApi: RestUsageService,\n    ) {\n        this.columns.push(new ListItem('NODE', RestConstants.CM_NAME));\n        this.columnsCollections.push(new ListItem('COLLECTION', 'title'));\n        this.columnsCollections.push(new ListItem('COLLECTION', 'info'));\n        this.columnsCollections.push(new ListItem('COLLECTION', 'scope'));\n    }\n\n    ngOnInit(): void {\n        this.nodeSubject\n            .pipe(\n                filter((node) => node !== null),\n                // map((node) => node.ref.id),\n                // TODO: check if distinct still working\n                distinctUntilChanged(),\n            )\n            .subscribe((node) => this.load(node));\n    }\n\n    private async load(node: Node) {\n        this.versions = null;\n        this.versionsLoading = true;\n        this.resetStats();\n        this.loading = true;\n        // use temporary the given data to show headers\n        this.data = this.format(node);\n        this.nodeObject = (\n            await this.nodeApi.getNodeMetadata(node.ref.id, [RestConstants.ALL]).toPromise()\n        ).node;\n        this.loading = false;\n        this.data = this.format(this.nodeObject);\n        const currentNode = this.nodeObject;\n        this.nodeService\n            .getVersionsMetadata(this.nodeObject.ref.repo, this.nodeObject.ref.id)\n            .subscribe((data: NodeVersionEntries) => {\n                if (currentNode !== this.nodeObject) return;\n                this.versions = data.versions.reverse();\n                for (const version of this.versions) {\n                    if (version.comment) {\n                        if (\n                            version.comment === RestConstants.COMMENT_MAIN_FILE_UPLOAD ||\n                            version.comment === RestConstants.COMMENT_METADATA_UPDATE ||\n                            version.comment === RestConstants.COMMENT_CONTRIBUTOR_UPDATE ||\n                            version.comment === RestConstants.COMMENT_CONTENT_UPDATE ||\n                            version.comment === RestConstants.COMMENT_LICENSE_UPDATE ||\n                            version.comment === RestConstants.COMMENT_NODE_PUBLISHED ||\n                            version.comment === RestConstants.COMMENT_PREVIEW_CHANGED ||\n                            version.comment.startsWith(RestConstants.COMMENT_EDITOR_UPLOAD)\n                        ) {\n                            const parameters = version.comment.split(',');\n                            let editor = '';\n                            if (parameters.length > 1)\n                                editor = this.translate.instant(\n                                    'CONNECTOR.' + parameters[1] + '.NAME',\n                                );\n                            version.comment = this.translate.instant(\n                                'WORKSPACE.METADATA.COMMENT.' + parameters[0],\n                                { editor },\n                            );\n                        }\n                    }\n                }\n                let i = 0;\n                for (const version of this.versions) {\n                    if (this.isCurrentVersion(version)) {\n                        this.versions.splice(i, 1);\n                        this.versions.splice(0, 0, version);\n                        break;\n                    }\n                    i++;\n                }\n                this.versionsLoading = false;\n            });\n        this.iamApi.getUser().subscribe((login: IamUser) => {\n            this.nodeApi\n                .getNodePermissions(this.nodeObject.ref.id)\n                .subscribe((data: NodePermissions) => {\n                    this.permissions = this.formatPermissions(login, data);\n                });\n        });\n        this.usages = null;\n        this.forkedParent = null;\n        this.forkedChildren.reset();\n        if (this.nodeObject.properties[RestConstants.CCM_PROP_FORKED_ORIGIN]) {\n            this.nodeApi\n                .getNodeMetadata(\n                    RestHelper.removeSpacesStoreRef(\n                        this.nodeObject.properties[RestConstants.CCM_PROP_FORKED_ORIGIN][0],\n                    ),\n                    [RestConstants.ALL],\n                )\n                .subscribe(\n                    (parent) => {\n                        this.forkedParent = parent.node;\n                    },\n                    (error) => {},\n                );\n        }\n        const request = {\n            propertyFilter: [RestConstants.ALL],\n        };\n        this.nodeService.getForkedChilds(node).subscribe((childs) => {\n            this.forkedChildren.setData(childs.nodes);\n        });\n        this.usageApi.getNodeUsages(this.nodeObject.ref.id).subscribe((usages: UsageList) => {\n            this.usages = usages.usages;\n            this.usageApi\n                .getNodeUsagesCollection(this.nodeObject.ref.id)\n                .subscribe((collection) => {\n                    this.usagesCollection.setData(\n                        collection\n                            .filter((c) => c.collectionUsageType === 'ACTIVE')\n                            .map((c) => c.collection),\n                    );\n                    this.getStats();\n                });\n        });\n    }\n\n    isCurrentVersion(version: NodeVersion): boolean {\n        if (!this.nodeObject) return false;\n        const prop = this.nodeObject.properties[RestConstants.LOM_PROP_LIFECYCLE_VERSION];\n        if (!prop) return false;\n\n        return prop[0] == version.version.major + '.' + version.version.minor;\n    }\n\n    display(version: string = null) {\n        this.nodeObject.version = version;\n        this.onDisplay.emit(this.nodeObject);\n    }\n\n    displayNode(node: Node) {\n        this.router.navigate([UIConstants.ROUTER_PREFIX + 'render', node.ref.id]);\n    }\n\n    displayCollection(collection: Node) {\n        UIHelper.goToCollection(this.router, collection);\n    }\n\n    private openPermalink() {\n        this.displayNode(this.nodeObject);\n    }\n\n    displayVersion(version: NodeVersion) {\n        if (this.isCurrentVersion(version)) this.display();\n        else this.display(version.version.major + '.' + version.version.minor);\n    }\n\n    private format(node: Node): any {\n        const data: any = {};\n        data.name = node.name;\n        data.title = node.title;\n        data.isDirectory = node.isDirectory;\n        data.isCollection = node.collection != null;\n        data.description = node.properties[RestConstants.LOM_PROP_GENERAL_DESCRIPTION];\n        data.preview = node.preview.url;\n        data.keywords = node.properties[RestConstants.LOM_PROP_GENERAL_KEYWORD];\n        if (data.keywords && data.keywords.length == 1 && !data.keywords[0]) data.keywords = null;\n        //data[\"creator\"]=node.properties[RestConstants.CM_CREATOR];\n        data.creator = ConfigurationHelper.getPersonWithConfigDisplayName(\n            node.createdBy,\n            this.config,\n        );\n        data.createDate = new FormatDatePipe(this.translate).transform(node.createdAt);\n        data.duration = DurationHelper.getDurationFormatted(\n            node.properties[RestConstants.LOM_PROP_TECHNICAL_DURATION]?.[0],\n        );\n        data.author = this.toVCards(\n            node.properties[RestConstants.CCM_PROP_LIFECYCLECONTRIBUTER_AUTHOR],\n        ).join(', ');\n        data.author_freetext = node.properties[RestConstants.CCM_PROP_AUTHOR_FREETEXT]\n            ? node.properties[RestConstants.CCM_PROP_AUTHOR_FREETEXT][0]\n            : null;\n        data.mediatype = node.mediatype == 'file' ? node.mimetype : node.mediatype;\n        data.mimetype = node.mimetype;\n        data.size = node.size;\n        if (node.properties[RestConstants.EXIF_PROP_DATE_TIME_ORIGINAL]) {\n            data.exifDate = new FormatDatePipe(this.translate).transform(\n                node.properties[RestConstants.EXIF_PROP_DATE_TIME_ORIGINAL][0],\n            );\n        }\n\n        data.dimensions = new NodeImageSizePipe().transform(node);\n\n        data.license = this.nodeHelper.getLicenseIcon(node);\n        data.licenseName = this.nodeHelper.getLicenseName(node);\n\n        data.properties = [];\n        data.aspects = node.aspects.sort();\n\n        for (const k of Object.keys(node.properties).sort()) {\n            data.properties.push([k, node.properties[k].join(', ')]);\n        }\n        return data;\n    }\n\n    close() {\n        this.onClose.emit();\n    }\n\n    edit() {\n        this.onEditMetadata.emit(this.nodeObject);\n    }\n\n    restoreVersion(restore: NodeVersion) {\n        this.onRestore.emit({ version: restore, node: this.nodeObject });\n    }\n\n    canRevert() {\n        return this.nodeObject && this.nodeObject.access.indexOf(RestConstants.ACCESS_WRITE) != -1;\n    }\n\n    isAnimated() {\n        return this.nodeHelper.hasAnimatedPreview(this.nodeObject);\n    }\n\n    private formatPermissions(login: IamUser, permissions: NodePermissions): any {\n        const data: any = {};\n        data.users = [];\n        data.groups = [];\n        if (!permissions.permissions) return data;\n        for (const permission of permissions.permissions.inheritedPermissions) {\n            if (\n                permission.authority.authorityName == login.person.authorityName ||\n                permission.authority.authorityType == RestConstants.AUTHORITY_TYPE_OWNER\n            ) {\n            } else if (permission.authority.authorityType == RestConstants.AUTHORITY_TYPE_USER) {\n                data.users.push(permission);\n            } else {\n                data.groups.push(permission);\n            }\n        }\n        for (const permission of permissions.permissions.localPermissions.permissions) {\n            if (\n                permission.authority.authorityName == login.person.authorityName ||\n                permission.authority.authorityType == RestConstants.AUTHORITY_TYPE_OWNER\n            ) {\n            } else if (permission.authority.authorityType == RestConstants.AUTHORITY_TYPE_USER) {\n                if (!this.containsPermission(data.groups, permission)) data.users.push(permission);\n            } else {\n                if (!this.containsPermission(data.groups, permission)) data.groups.push(permission);\n            }\n        }\n        return data;\n    }\n\n    private toVCards(properties: any[]) {\n        const vcards: string[] = [];\n        if (properties) {\n            for (const p of properties) {\n                vcards.push(new VCard(p).getDisplayName());\n            }\n        }\n        return vcards;\n    }\n\n    private containsPermission(permissions: Permission[], permission: Permission) {\n        for (const perm of permissions) {\n            if (perm.authority.authorityName == permission.authority.authorityName) return true;\n        }\n        return false;\n    }\n\n    resetStats() {\n        this.stats.labels = [];\n        this.stats.points = [];\n        this.statsTotalPoints = null;\n    }\n\n    getStats() {\n        this.resetStats();\n        this.stats.labels.push(this.translate.instant('WORKSPACE.METADATA.USAGE_TYPE.LMS'));\n        this.stats.labels.push(this.translate.instant('WORKSPACE.METADATA.USAGE_TYPE.COLLECTION'));\n        this.stats.labels.push(this.translate.instant('WORKSPACE.METADATA.USAGE_TYPE.DOWNLOAD'));\n        this.stats.labels.push(this.translate.instant('WORKSPACE.METADATA.USAGE_TYPE.VIEW'));\n\n        this.stats.points.push(this.usages.length - this.usagesCollection.getData().length);\n        this.stats.points.push(this.usagesCollection.getData().length);\n        this.stats.points.push(\n            propertyToNumber(this.nodeObject.properties[RestConstants.CCM_PROP_TRACKING_DOWNLOADS]),\n        );\n        this.stats.points.push(\n            propertyToNumber(this.nodeObject.properties[RestConstants.CCM_PROP_TRACKING_VIEWS]),\n        );\n        this.statsTotalPoints = this.stats.points.reduce((a, b) => a + b);\n        this.drawBarChart();\n    }\n\n    private drawBarChart() {\n        const canvas = this.canvas?.nativeElement;\n        if (!canvas) {\n            return;\n        }\n        const ctx = canvas.getContext('2d');\n        // FontFamily\n        Chart.defaults.global.defaultFontFamily = 'open_sansregular';\n        const statsMax = Math.max(...this.stats.points);\n        const myChart = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: this.stats.labels,\n                datasets: [\n                    {\n                        data: this.stats.points,\n                        backgroundColor: this.stats.colors,\n                        borderWidth: 0.2,\n                    },\n                ],\n            },\n            options: {\n                responsive: false,\n                legend: {\n                    display: false,\n                },\n                mode: 'index',\n                layout: {\n                    padding: {\n                        left: 0,\n                        right: 0,\n                        top: 20,\n                        bottom: 0,\n                    },\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            ticks: {\n                                display: false,\n                            },\n                        },\n                    ],\n                    yAxes: [\n                        {\n                            ticks: {\n                                beginAtZero: true,\n                                max: Math.max(Math.round(statsMax * 1.25), 6),\n                            },\n                        },\n                    ],\n                },\n            },\n        });\n    }\n\n    canEdit() {\n        return this.nodeObject && this.nodeObject.access.indexOf(RestConstants.ACCESS_WRITE) !== -1;\n    }\n\n    staticDataSource(node: Node) {\n        return new NodeDataSource([node]);\n    }\n}\n\nfunction propertyToNumber(property: string[]): number {\n    if (property?.length > 0) {\n        return parseInt(property[0]);\n    } else {\n        return 0;\n    }\n}\n","<div *ngIf=\"data\" class=\"main\" data-test=\"workspace-sidebar\">\n  <div class=\"header\">\n    <div class=\"name\" data-test=\"workspace-sidebar-element-name\">{{ data.name }}</div>\n    <div class=\"close\">\n      <button mat-icon-button (click)=\"close()\"><i class=\"material-icons\">close</i></button>\n    </div>\n  </div>\n  <es-spinner *ngIf=\"loading\"></es-spinner>\n  <ng-container *ngIf=\"!loading\">\n    <mat-tab-group *ngIf=\"!data.isDirectory; else standaloneInfoTab\">\n      <mat-tab>\n        <ng-template mat-tab-label><i esIcon=\"info_outline\" [aria]=\"true\"></i></ng-template>\n        <ng-content *ngTemplateOutlet=\"infoTab\"></ng-content>\n      </mat-tab>\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <i esIcon=\"equalizer\"></i>\n          {{ statsTotalPoints }}\n        </ng-template>\n        <ng-content *ngTemplateOutlet=\"usageTab\"></ng-content>\n      </mat-tab>\n      <mat-tab>\n        <ng-template mat-tab-label><i esIcon=\"restore\"></i></ng-template>\n        <ng-content *ngTemplateOutlet=\"versionsTab\"></ng-content>\n      </mat-tab>\n    </mat-tab-group>\n\n    <ng-template #standaloneInfoTab>\n      <div class=\"standalone-container\">\n        <ng-content *ngTemplateOutlet=\"infoTab\"></ng-content>\n      </div>\n    </ng-template>\n\n    <ng-template #infoTab>\n      <es-workspace-metadata-block\n        class=\"content\"\n        [node]=\"nodeObject\"\n        (onDisplay)=\"display()\"\n        (onEditMetadata)=\"edit()\"\n      ></es-workspace-metadata-block>\n    </ng-template>\n\n    <!--Usages Info -->\n    <ng-template #usageTab>\n      <div class=\"content content-properties\">\n        <p class=\"description\">{{ 'WORKSPACE.METADATA.USAGE_COUNT_TITLE' | translate }}</p>\n\n        <canvas #canvas width=\"320\" height=\"200\"></canvas>\n        <ul class=\"statistic-value\">\n          <li *ngFor=\"let point of stats.points; let i = index\" class=\"point\">\n            <i class=\"material-icons\">{{ stats.pointsIcons[i] }}</i> {{ point }}\n          </li>\n        </ul>\n        <p class=\"description usage-count\">\n          {{ 'WORKSPACE.METADATA.USAGE_COUNT' | translate }}\n          <span class=\"usage-counter\">{{ statsTotalPoints }}</span>\n        </p>\n        <p class=\"description collections\" *ngIf=\"!usagesCollection.isEmpty()\">\n          {{\n            'WORKSPACE.METADATA.COLLECTIONS'\n              | translate : { count: (usagesCollectionData | async).length }\n          }}\n        </p>\n        <es-node-entries-wrapper\n          *ngIf=\"!usagesCollection.isEmpty()\"\n          [dataSource]=\"usagesCollection\"\n          [columns]=\"columnsCollections\"\n          [displayType]=\"NodeEntriesDisplayType.SmallGrid\"\n          [elementInteractionType]=\"InteractionType.DefaultActionLink\"\n        ></es-node-entries-wrapper>\n        <div class=\"description forkedParend\" *ngIf=\"forkedParent\">\n          {{ 'WORKSPACE.METADATA.FORKED_PARENT' | translate }}\n        </div>\n        <es-node-entries-wrapper\n          *ngIf=\"forkedParent\"\n          [dataSource]=\"staticDataSource(forkedParent)\"\n          [columns]=\"columns\"\n          [checkbox]=\"false\"\n          [displayType]=\"NodeEntriesDisplayType.Table\"\n          [elementInteractionType]=\"InteractionType.DefaultActionLink\"\n        ></es-node-entries-wrapper>\n        <div class=\"description forkedParend\" *ngIf=\"!forkedChildren.isEmpty()\">\n          {{\n            'WORKSPACE.METADATA.FORKED_CHILDS'\n              | translate : { count: forkedChildren.getData().length }\n          }}\n        </div>\n        <es-node-entries-wrapper\n          *ngIf=\"!forkedChildren.isEmpty()\"\n          [dataSource]=\"forkedChildren\"\n          [columns]=\"columns\"\n          [checkbox]=\"false\"\n          [displayType]=\"NodeEntriesDisplayType.Table\"\n          [elementInteractionType]=\"InteractionType.DefaultActionLink\"\n        ></es-node-entries-wrapper>\n      </div>\n    </ng-template>\n\n    <ng-template #versionsTab>\n      <div class=\"content content-versions\">\n        <div *ngIf=\"versionsLoading\" class=\"center\"><es-spinner></es-spinner></div>\n        <div\n          *ngFor=\"let version of versions\"\n          class=\"version\"\n          [class.versionMain]=\"isCurrentVersion(version)\"\n        >\n          <div class=\"versionTitle\">\n            <span *ngIf=\"isCurrentVersion(version)\">{{\n              'WORKSPACE.METADATA.CURRENT_VERSION' | translate\n            }}</span>\n            <span *ngIf=\"!isCurrentVersion(version)\">{{\n              'WORKSPACE.METADATA.VERSION' | translate\n            }}</span>\n            ({{ version.version.major }}.{{ version.version.minor }})\n          </div>\n          <div class=\"versionAuthor\">\n            {{ version.modifiedBy.firstName }} {{ version.modifiedBy.lastName }}\n          </div>\n          <div class=\"versionDate\">{{ version.modifiedAt | formatDate }}</div>\n          <div class=\"versionComment\">{{ version | versionComment }}</div>\n          <button mat-button (click)=\"displayVersion(version)\">\n            <i [esIcon]=\"'remove_red_eye'\"></i>\n            {{ 'WORKSPACE.METADATA.VIEW_VERSION' | translate }}\n          </button>\n          <button\n            *ngIf=\"!isCurrentVersion(version)\"\n            mat-button\n            [class.disabled]=\"!canRevert()\"\n            (click)=\"restoreVersion(version)\"\n          >\n            <i [esIcon]=\"'restore'\"></i>\n            {{ 'WORKSPACE.METADATA.RESTORE' | translate }}\n          </button>\n        </div>\n      </div>\n    </ng-template>\n  </ng-container>\n</div>\n","import {\n    AfterViewInit,\n    Component,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GenericAuthority } from 'ngx-edu-sharing-api';\nimport {\n    ActionbarComponent,\n    CustomOptions,\n    DefaultGroups,\n    ElementType,\n    FetchEvent,\n    InteractionType,\n    ListItem,\n    ListItemSort,\n    ListSortConfig,\n    NodeClickEvent,\n    NodeDataSource,\n    NodeEntriesDisplayType,\n    NodeEntriesWrapperComponent,\n    OptionItem,\n    Scope,\n} from 'ngx-edu-sharing-ui';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n    ArchiveRestore,\n    Node,\n    RestArchiveService,\n    RestConstants,\n    RestoreResult,\n    TemporaryStorageService,\n} from '../../../core-module/core.module';\nimport { Toast } from '../../../services/toast';\nimport { Closable } from '../../../features/dialogs/card-dialog/card-dialog-config';\nimport {\n    CLOSE,\n    DELETE_OR_CANCEL,\n} from '../../../features/dialogs/dialog-modules/generic-dialog/generic-dialog-data';\nimport { DialogsService } from '../../../features/dialogs/dialogs.service';\nimport { SearchFieldService } from '../../../main/navigation/search-field/search-field.service';\n\ntype RestoreResults = {\n    results: (RestoreResult & { message: string })[];\n} & {\n    hasDuplicateNames: boolean;\n    hasParentFolderMissing: boolean;\n};\n\n@Component({\n    selector: 'es-recycle',\n    templateUrl: 'recycle.component.html',\n    styleUrls: ['recycle.component.scss'],\n})\nexport class RecycleMainComponent implements OnInit, AfterViewInit, OnDestroy {\n    readonly NodeEntriesDisplayType = NodeEntriesDisplayType;\n    readonly InteractionType = InteractionType;\n    readonly Scope = Scope;\n    @ViewChild('list') list: NodeEntriesWrapperComponent<Node>;\n    @ViewChild('confirmDeleteDialog') confirmDeleteDialog: TemplateRef<unknown>;\n    @ViewChild('restoreDialog') restoreDialog: TemplateRef<unknown>;\n    dataSource = new NodeDataSource();\n\n    @Input() actionbar: ActionbarComponent;\n\n    public columns: ListItem[] = [\n        new ListItem('NODE', RestConstants.CM_NAME),\n        new ListItem('NODE', RestConstants.CM_ARCHIVED_DATE),\n    ];\n    public options: CustomOptions = {\n        useDefaultOptions: false,\n        addOptions: [],\n    };\n    sort: ListSortConfig = {\n        columns: [\n            new ListItemSort('NODE', RestConstants.CM_NAME),\n            new ListItemSort('NODE', RestConstants.CM_ARCHIVED_DATE),\n        ],\n        allowed: true,\n        active: RestConstants.CM_ARCHIVED_DATE,\n        direction: 'desc',\n    };\n    searchQuery: string;\n    skipDeleteConfirmation = false;\n    loadData(currentQuery: string, offset: number, sortBy: string, sortAscending: boolean) {\n        return this.archive.search(currentQuery || '*', '', {\n            propertyFilter: [RestConstants.ALL],\n            offset: offset,\n            sortBy: [sortBy],\n            sortAscending: sortAscending,\n        });\n    }\n    private destroyed = new Subject<void>();\n\n    constructor(\n        private archive: RestArchiveService,\n        private toast: Toast,\n        private translate: TranslateService,\n        private service: TemporaryStorageService,\n        private searchField: SearchFieldService,\n        private dialogs: DialogsService,\n    ) {}\n\n    ngOnInit(): void {\n        const restoreOption = new OptionItem(\n            'RECYCLE.OPTION.RESTORE_SINGLE',\n            'undo',\n            (node: Node) => this.restoreSingle(node),\n        );\n        restoreOption.group = DefaultGroups.Primary;\n        const deleteOption = new OptionItem(\n            'RECYCLE.OPTION.DELETE_SINGLE',\n            'delete',\n            (node: Node) => this.deleteSingle(node),\n        );\n        deleteOption.group = DefaultGroups.Primary;\n        this.options.addOptions.push(restoreOption);\n        this.options.addOptions.push(deleteOption);\n        this.options.addOptions.forEach((o) => {\n            o.elementType = [ElementType.Node, ElementType.NodePublishedCopy];\n        });\n        this.searchField\n            .getCurrentInstance()\n            .onSearchTriggered()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(({ searchString }) => {\n                this.searchQuery = searchString;\n                this.refresh();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.refresh();\n        this.list.initOptionsGenerator({\n            actionbar: this.actionbar,\n            customOptions: this.options,\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    private async openConfirmDeleteDialog(nodes: Node[]): Promise<void> {\n        this.skipDeleteConfirmation = false; // reset\n        const dialogRef = await this.dialogs.openGenericDialog({\n            title: 'RECYCLE.DELETE.CONFIRM_TITLE',\n            buttons: DELETE_OR_CANCEL,\n            closable: Closable.Standard,\n            contentTemplate: this.confirmDeleteDialog,\n            nodes,\n        });\n        dialogRef.afterClosed().subscribe((response) => {\n            if (response === 'YES_DELETE') {\n                if (this.skipDeleteConfirmation) {\n                    this.service.set('recycleSkipDeleteConfirmation', true);\n                }\n                this.deleteNodesWithoutConfirmation(nodes);\n            }\n        });\n    }\n\n    private restoreFinished(list: Node[], restoreResult: any) {\n        this.toast.closeProgressSpinner();\n\n        this.prepareResults(restoreResult);\n        if (restoreResult.hasDuplicateNames || restoreResult.hasParentFolderMissing) {\n            this.openRestoreDialog(restoreResult);\n        }\n        if (list.length == 1) {\n            this.toast.toast('RECYCLE.TOAST.RESTORE_FINISHED_SINGLE');\n        } else {\n            this.toast.toast('RECYCLE.TOAST.RESTORE_FINISHED');\n        }\n        this.refresh();\n    }\n\n    private openRestoreDialog(restoreResults: RestoreResults): void {\n        void this.dialogs.openGenericDialog({\n            title: 'RECYCLE.RESTORE.NEW_LOCATION_TITLE',\n            subtitle: 'RECYCLE.RESTORE.NEW_LOCATION_SUBTITLE',\n            avatar: { kind: 'icon', icon: 'undo' },\n            buttons: CLOSE,\n            closable: Closable.Standard,\n            contentTemplate: this.restoreDialog,\n            context: { $implicit: restoreResults },\n        });\n    }\n\n    private delete(): void {\n        this.deleteNodes(this.list.getSelection().selected);\n    }\n\n    private deleteSingle(node: Node): void {\n        if (node == null) {\n            this.delete();\n            return;\n        }\n        this.deleteNodes([node]);\n    }\n\n    private deleteNodesWithoutConfirmation(nodes: Node[]) {\n        this.toast.showProgressSpinner();\n        this.archive.delete(nodes).subscribe(\n            () => this.deleteFinished(),\n            (error) => this.handleErrors(error),\n        );\n    }\n\n    private deleteFinished() {\n        this.toast.closeProgressSpinner();\n        this.toast.toast('RECYCLE.TOAST.DELETE_FINISHED');\n        this.list.getSelection().clear();\n        this.refresh();\n    }\n    private deleteNodes(list: Node[]) {\n        if (this.service.get('recycleSkipDeleteConfirmation', false)) {\n            this.deleteNodesWithoutConfirmation(list);\n            return;\n        }\n\n        void this.openConfirmDeleteDialog([...list]);\n    }\n\n    public restoreNodes(list: Node[], toPath = '') {\n        // archiveRestore list\n        this.toast.showProgressSpinner();\n        this.archive.restore(list, toPath).subscribe(\n            (result: ArchiveRestore) => this.restoreFinished(list, result),\n            (error: any) => this.handleErrors(error),\n        );\n    }\n    private handleErrors(error: any) {\n        this.toast.error(error);\n        this.toast.closeProgressSpinner();\n    }\n\n    private restoreSingle(node: Node): void {\n        if (node == null) {\n            this.restore();\n            return;\n        }\n\n        this.restoreNodes([node]);\n    }\n    private restore(): void {\n        this.restoreNodes(this.list.getSelection().selected);\n    }\n\n    async refresh(event?: FetchEvent) {\n        this.dataSource.isLoading = true;\n        if (event == null) {\n            this.dataSource.reset();\n            this.list?.getSelection().clear();\n        }\n        const result = await this.loadData(\n            this.searchQuery,\n            event ? event?.offset || this.dataSource.getData().length : 0,\n            this.sort.active,\n            this.sort.direction === 'asc',\n        ).toPromise();\n        if (event == null) {\n            this.dataSource.setData(result.nodes, result.pagination);\n        } else {\n            this.dataSource.appendData(result.nodes);\n            this.dataSource.setPagination(result.pagination);\n        }\n        this.dataSource.isLoading = false;\n    }\n\n    click(event: NodeClickEvent<Node | GenericAuthority>) {\n        this.list.getSelection().toggle(event.element as Node);\n    }\n\n    updateSort(sort: ListSortConfig) {\n        this.sort = sort;\n        this.refresh();\n    }\n\n    private prepareResults(results: RestoreResults) {\n        for (const result of results.results) {\n            if (result.restoreStatus === 'FINE') {\n                continue;\n            }\n            this.translate\n                .get('RECYCLE.RESTORE.' + result.restoreStatus)\n                .subscribe((text) => (result.message = text));\n            if (result.restoreStatus === 'DUPLICATENAME') {\n                results.hasDuplicateNames = true;\n            }\n            if (\n                result.restoreStatus === 'FALLBACK_PARENT_NOT_EXISTS' ||\n                result.restoreStatus === 'FALLBACK_PARENT_NO_PERMISSION'\n            ) {\n                results.hasParentFolderMissing = true;\n            }\n        }\n    }\n}\n","<es-node-entries-wrapper\n  #list\n  [columns]=\"columns\"\n  [checkbox]=\"true\"\n  [displayType]=\"NodeEntriesDisplayType.Table\"\n  [scope]=\"Scope.WorkspaceList\"\n  [elementInteractionType]=\"InteractionType.Emitter\"\n  [sort]=\"sort\"\n  [dataSource]=\"dataSource\"\n  (sortChange)=\"updateSort($event)\"\n  (clickItem)=\"click($event)\"\n  (fetchData)=\"refresh($event)\"\n>\n  <ng-template #empty>\n    <h3 *ngIf=\"!!searchQuery\" class=\"empty mat-heading-3\">\n      {{ 'RECYCLE.NO_RESULTS_MESSAGE' | translate }}\n    </h3>\n    <h3 *ngIf=\"!searchQuery\" class=\"empty mat-heading-3\">\n      {{ 'RECYCLE.ARCHIVE_EMPTY' | translate }}\n    </h3>\n  </ng-template>\n</es-node-entries-wrapper>\n\n<ng-template #confirmDeleteDialog>\n  <p>{{ 'RECYCLE.DELETE.CONFIRM_MESSAGE' | translate }}</p>\n  <form>\n    <div class=\"checkbox\">\n      <mat-checkbox name=\"skipDeleteConfirmation\" [(ngModel)]=\"skipDeleteConfirmation\">{{\n        'RECYCLE.DELETE.NOT_ASK_AGAIN' | translate\n      }}</mat-checkbox>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template #restoreDialog let-restoreResult>\n  <div *ngIf=\"restoreResult.hasDuplicateNames\">\n    <p>{{ 'RECYCLE.RESTORE.LIST_DUPLICATE_NAMES' | translate }}</p>\n    <div *ngFor=\"let result of restoreResult.results\">\n      <div *ngIf=\"result.restoreStatus === 'DUPLICATENAME'\">\n        {{ result.name }} <span class=\"restore-message\">({{ result.message }})</span>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"restoreResult.hasParentFolderMissing\">\n    <hr *ngIf=\"restoreResult.hasDuplicateNames\" />\n    <p>{{ 'RECYCLE.RESTORE.LIST_PARENT_FOLDER_MISSING' | translate }}</p>\n    <div *ngFor=\"let result of restoreResult.results\">\n      <div\n        *ngIf=\"\n          result.restoreStatus === 'FALLBACK_PARENT_NOT_EXISTS' ||\n          result.restoreStatus === 'FALLBACK_PARENT_NO_PERMISSION'\n        \"\n      >\n        {{ result.name }} <span class=\"restore-message\">({{ result.message }})</span>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { trigger } from '@angular/animations';\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport * as rxjs from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n    DragData,\n    DropdownComponent,\n    DropSource,\n    LocalEventsService,\n    OptionItem,\n    OptionsHelperDataService,\n    Scope,\n    UIAnimation,\n} from 'ngx-edu-sharing-ui';\nimport {\n    Node,\n    NodeList,\n    RestConstants,\n    RestNodeService,\n    UIService,\n} from '../../../core-module/core.module';\nimport { Helper } from '../../../core-module/rest/helper';\nimport { canDropOnNode } from '../workspace-utils';\n\n@Component({\n    selector: 'es-workspace-sub-tree',\n    templateUrl: 'sub-tree.component.html',\n    styleUrls: ['sub-tree.component.scss'],\n    animations: [\n        trigger('openOverlay', UIAnimation.openOverlay(UIAnimation.ANIMATION_TIME_FAST)),\n        trigger('open', UIAnimation.openOverlay()),\n    ],\n    providers: [OptionsHelperDataService],\n})\nexport class WorkspaceSubTreeComponent implements OnInit, OnDestroy {\n    private static MAX_FOLDER_COUNT = 100;\n\n    @ViewChild('dropdown') dropdown: DropdownComponent;\n    @ViewChild('dropdownTrigger') dropdownTrigger: MatMenuTrigger;\n    dropdownLeft: string;\n    dropdownTop: string;\n\n    private _currentPath: string[] = [];\n    /** Parent hierarchy of the currently selected node. */\n    @Input()\n    get currentPath(): string[] {\n        return this._currentPath;\n    }\n    set currentPath(value: string[]) {\n        this._currentPath = value;\n        this.expandCurrentPath();\n    }\n    @Input() depth = 0;\n    /** The node rendered by this sub tree. */\n    @Input() set node(node: string) {\n        this._node = node;\n        if (node == null) {\n            return;\n        }\n        this.refresh();\n    }\n\n    @Output() onClick = new EventEmitter<Node>();\n    @Output() onLoading = new EventEmitter();\n    @Output() onDrop = new EventEmitter<{ target: Node; source: DropSource<Node> }>();\n    @Output() hasChildren = new EventEmitter<boolean>();\n    @Output() onUpdateOptions = new EventEmitter();\n\n    _node: string;\n    loading = true;\n    _nodes: Node[];\n    _hasChildren: { [nodeId: string]: boolean } = {};\n    moreItems: number;\n    loadingMore: boolean;\n    loadingStates: boolean[] = [];\n\n    /** IDs of child nodes of the node rendered by this sub tree, that should be expanded. */\n    private expandedNodes: string[] = [];\n    private destroyed = new Subject<void>();\n\n    constructor(\n        private nodeApi: RestNodeService,\n        private optionsService: OptionsHelperDataService,\n        private localEvents: LocalEventsService,\n        public ui: UIService,\n    ) {}\n\n    ngOnInit(): void {\n        rxjs.merge(this.localEvents.nodesChanged, this.localEvents.nodesDeleted)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((nodes) => {\n                const nodeIds = this._nodes.map((node) => node.ref.id);\n                if (nodes.some((node) => nodeIds.includes(node.ref.id))) {\n                    this.refresh();\n                }\n            });\n    }\n\n    /**\n     * Resets expanded nodes to the parent hierarchy of the currently selected node.\n     */\n    private expandCurrentPath() {\n        const currentChildNode = this._nodes?.find(\n            (node) => node.ref.id === this.currentPath[this.depth],\n        );\n        if (currentChildNode) {\n            this.expandedNodes = [currentChildNode.ref.id];\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    setLoadingState(state: boolean, pos: number) {\n        this.loadingStates[pos] = state;\n    }\n\n    optionIsShown(optionItem: OptionItem, node: Node) {\n        if (optionItem.showCallback) {\n            return optionItem.showCallback(node);\n        }\n        return true;\n    }\n\n    loadAll() {\n        this.loadingMore = true;\n        this.nodeApi\n            .getChildren(this._node, [RestConstants.FILTER_FOLDERS], {\n                offset: this._nodes.length,\n                count: RestConstants.COUNT_UNLIMITED,\n            })\n            .subscribe((data: NodeList) => {\n                this.loadingMore = false;\n                this._nodes = this._nodes.concat(data.nodes);\n                this.moreItems = 0;\n            });\n    }\n\n    contextMenu(event: any, node: Node) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.showDropdown(event, node);\n    }\n\n    updateOptions(event: Node) {\n        this.onUpdateOptions.emit(event);\n    }\n\n    private showDropdown(event: any, node: Node) {\n        //if(this._options==null || this._options.length<1)\n        //  return;\n        this.dropdownLeft = event.clientX + 'px';\n        this.dropdownTop = event.clientY + 'px';\n        this.optionsService.setData({\n            activeObjects: [node],\n            scope: Scope.WorkspaceTree,\n        });\n        this.optionsService.initComponents(null, null, this.dropdown);\n        this.optionsService.refreshComponents();\n        this.dropdownTrigger.openMenu();\n    }\n\n    dropToParent(event: any) {\n        this.onDrop.emit(event);\n    }\n\n    isSelected(node: Node): boolean {\n        return this.currentPath[this.currentPath.length - 1] === node.ref.id;\n    }\n\n    openPathEvent(node: Node): void {\n        this.onClick.emit(node);\n    }\n\n    isOpen(node: Node): boolean {\n        return this.expandedNodes.includes(node.ref.id);\n    }\n\n    openOrCloseNode(node: Node): void {\n        this.onClick.emit(node);\n    }\n\n    toggleNodeExpansion(event: MouseEvent, node: Node): void {\n        if (this._hasChildren[node.ref.id] === false) {\n            return;\n        }\n        event.stopPropagation();\n        const index = this.expandedNodes.indexOf(node.ref.id);\n        if (index < 0) {\n            this.expandedNodes.push(node.ref.id);\n        } else {\n            this.expandedNodes.splice(index, 1);\n        }\n    }\n\n    refresh() {\n        if (!this._node) return;\n        this.nodeApi\n            .getChildren(this._node, [RestConstants.FILTER_FOLDERS], {\n                count: WorkspaceSubTreeComponent.MAX_FOLDER_COUNT,\n            })\n            .subscribe((data: NodeList) => {\n                this._nodes = data.nodes;\n                this.moreItems = data.pagination.total - data.pagination.count;\n                this.loadingStates = Helper.initArray(this._nodes.length, true);\n                this.hasChildren.emit(this._nodes?.length > 0);\n                this.onLoading.emit(false);\n                this.loading = false;\n                this.expandCurrentPath();\n            });\n    }\n\n    canDropOnNode = canDropOnNode;\n    onDropped(dragData: DragData<Node>) {\n        this.onDrop.emit({\n            target: dragData.target,\n            source: {\n                element: dragData.draggedNodes,\n                mode: dragData.action,\n            },\n        });\n    }\n}\n","<div class=\"sub-tree-wrapper\">\n  <es-dropdown #dropdown></es-dropdown>\n  <button\n    #dropdownTrigger=\"matMenuTrigger\"\n    mat-button\n    class=\"dropdown-dummy\"\n    [style.left]=\"dropdownLeft\"\n    [style.top]=\"dropdownTop\"\n    tabindex=\"-1\"\n    aria-hidden=\"true\"\n    [matMenuTriggerFor]=\"dropdown.menu\"\n  ></button>\n\n  <div *ngIf=\"_nodes && _nodes.length\" [@open]=\"_nodes && _nodes.length\">\n    <div *ngFor=\"let node of _nodes; let i = index\" (contextmenu)=\"contextMenu($event, node)\">\n      <div\n        class=\"sub-tree-element\"\n        cdkDrag\n        [cdkDragDisabled]=\"ui.isTouchSubject | async\"\n        [cdkDragData]=\"[node]\"\n        esNodesDrag\n        [esNodesDropTarget]=\"node\"\n        [canDropNodes]=\"canDropOnNode\"\n        (nodeDropped)=\"onDropped($event)\"\n        [style.paddingLeft.px]=\"(depth + 1) * 20\"\n        [class.sub-tree-element-selected]=\"isSelected(node)\"\n        (click)=\"openOrCloseNode(node)\"\n      >\n        <button\n          class=\"expand-toggle\"\n          (click)=\"toggleNodeExpansion($event, node)\"\n          [class.opacity-invisible]=\"_hasChildren[node.ref.id] === false\"\n        >\n          <i *ngIf=\"!isOpen(node)\" esIcon=\"keyboard_arrow_right\"></i>\n          <i *ngIf=\"isOpen(node)\" esIcon=\"keyboard_arrow_down\"></i>\n        </button>\n        <img class=\"node-icon\" src=\"{{ node | esNodeIcon | async }}\" alt=\"{{ node.name }}\" />\n        <span class=\"name\">{{ node.name }}</span>\n      </div>\n      <es-workspace-sub-tree\n        class=\"sub-tree\"\n        *ngIf=\"isOpen(node)\"\n        [node]=\"node.ref.id\"\n        [currentPath]=\"currentPath\"\n        (onLoading)=\"setLoadingState($event, i)\"\n        (onUpdateOptions)=\"updateOptions($event)\"\n        (hasChildren)=\"_hasChildren[node.ref.id] = $event\"\n        (onClick)=\"openPathEvent($event)\"\n        (onDrop)=\"dropToParent($event)\"\n        [depth]=\"depth + 1\"\n      ></es-workspace-sub-tree>\n    </div>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      class=\"more-items\"\n      (click)=\"loadAll()\"\n      *ngIf=\"moreItems > 0 && !loadingMore\"\n      [style.marginLeft.px]=\"50 + depth * 20\"\n    >\n      {{ 'WORKSPACE.TREE_MORE_ITEMS' | translate : { count: moreItems } }}\n    </button>\n    <es-spinner\n      class=\"more-items-loading\"\n      *ngIf=\"loadingMore\"\n      [style.marginLeft.px]=\"50 + depth * 20\"\n    ></es-spinner>\n  </div>\n  <div class=\"spinner\" *ngIf=\"loading\">\n    <es-spinner-small></es-spinner-small>\n  </div>\n</div>\n<!--\n<div [style.paddingLeft.px]=\"depth*20\" *ngIf=\"!loading && (!_nodes || !_nodes.length)\" class=\"empty\">\n  {{ 'WORKSPACE.NO_SUB_NODES' | translate }}\n</div>\n-->\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Node } from '../../../core-module/core.module';\nimport { CanDrop, DragData, DropSource, NodeRoot, OptionItem } from 'ngx-edu-sharing-ui';\nimport { WorkspacePageComponent } from '../workspace-page.component';\nimport { WorkspaceSubTreeComponent } from '../sub-tree/sub-tree.component';\n\n@Component({\n    selector: 'es-workspace-tree',\n    templateUrl: 'tree.component.html',\n    styleUrls: ['tree.component.scss'],\n})\nexport class WorkspaceTreeComponent {\n    @Input() root: NodeRoot;\n    @Input() workspace: WorkspacePageComponent;\n    @Input() isSafe: boolean;\n    @Input() selectedNode: string;\n    @Input() set path(path: Node[]) {\n        const pathIds = path.map((node) => node.ref.id);\n        this.currentPath = pathIds;\n    }\n    @Input() options: OptionItem[] = [];\n\n    @Output() onOpenNode = new EventEmitter();\n    @Output() onUpdateOptions = new EventEmitter();\n    @Output() onSetRoot = new EventEmitter();\n    @Output() onDrop = new EventEmitter<{ target: Node; source: DropSource<Node> }>();\n    @Output() onDeleteNodes = new EventEmitter();\n\n    @ViewChild(WorkspaceSubTreeComponent) subTree: WorkspaceSubTreeComponent;\n\n    readonly MY_FILES = 'MY_FILES';\n    readonly SHARED_FILES = 'SHARED_FILES';\n    readonly MY_SHARED_FILES = 'MY_SHARED_FILES';\n    readonly TO_ME_SHARED_FILES = 'TO_ME_SHARED_FILES';\n    readonly WORKFLOW_RECEIVE = 'WORKFLOW_RECEIVE';\n    readonly RECYCLE: 'RECYCLE' = 'RECYCLE';\n\n    currentPath: string[] = [];\n\n    constructor() {}\n\n    canDropOnRecycle = (dragData: DragData<'RECYCLE'>): CanDrop => {\n        return { accept: dragData.action === 'move' };\n    };\n\n    setRoot(root: string) {\n        this.onSetRoot.emit(root);\n        this.currentPath = [];\n    }\n\n    onNodesDrop(dragData: DragData<'RECYCLE'>) {\n        if (dragData.target === this.RECYCLE && dragData.action === 'move') {\n            this.onDeleteNodes.emit(dragData.draggedNodes);\n        }\n    }\n\n    drop(event: any) {\n        this.onDrop.emit(event);\n    }\n\n    updateOptions(event: Node) {\n        this.onUpdateOptions.emit(event);\n    }\n\n    openNode(event: Node) {\n        this.onOpenNode.emit(event);\n    }\n\n    public refresh() {\n        this.subTree?.refresh();\n    }\n}\n","<div class=\"rootNode\" [class.rootNodeSelected]=\"root == MY_FILES\" (click)=\"setRoot(MY_FILES)\">\n  <i class=\"material-icons typeIcon\">person</i>{{ 'WORKSPACE.MY_FILES' | translate }}\n  <i class=\"material-icons\" *ngIf=\"root == MY_FILES\">keyboard_arrow_down</i>\n  <i class=\"arrow\" class=\"material-icons\" *ngIf=\"root != MY_FILES\">keyboard_arrow_right</i>\n</div>\n<div class=\"tree\" *ngIf=\"root == MY_FILES\">\n  <es-workspace-sub-tree\n    [node]=\"'-userhome-'\"\n    [currentPath]=\"currentPath\"\n    (onUpdateOptions)=\"updateOptions($event)\"\n    (onDrop)=\"drop($event)\"\n    (onClick)=\"openNode($event)\"\n  ></es-workspace-sub-tree>\n</div>\n<div\n  class=\"rootNode\"\n  [class.rootNodeSelected]=\"root == SHARED_FILES\"\n  (click)=\"setRoot(SHARED_FILES)\"\n>\n  <i class=\"material-icons typeIcon\">group</i>{{ 'WORKSPACE.SHARED_FILES' | translate }}\n  <i class=\"material-icons\" *ngIf=\"root == SHARED_FILES\">keyboard_arrow_down</i>\n  <i class=\"arrow\" class=\"material-icons\" *ngIf=\"root != SHARED_FILES\">keyboard_arrow_right</i>\n</div>\n<div class=\"tree\" *ngIf=\"root == SHARED_FILES\">\n  <es-workspace-sub-tree\n    [node]=\"'-shared_files-'\"\n    [currentPath]=\"currentPath\"\n    (onUpdateOptions)=\"updateOptions($event)\"\n    (onDrop)=\"drop($event)\"\n    (onClick)=\"openNode($event)\"\n  ></es-workspace-sub-tree>\n</div>\n<div\n  class=\"rootNode\"\n  [class.rootNodeSelected]=\"root == MY_SHARED_FILES\"\n  (click)=\"setRoot(MY_SHARED_FILES)\"\n>\n  <i class=\"material-icons typeIcon\">share</i>{{ 'WORKSPACE.MY_SHARED_FILES' | translate }}\n  <i class=\"material-icons\" *ngIf=\"root == MY_SHARED_FILES\">keyboard_arrow_down</i>\n  <i class=\"arrow\" class=\"material-icons\" *ngIf=\"root != MY_SHARED_FILES\">keyboard_arrow_right</i>\n</div>\n<div class=\"tree\" *ngIf=\"root == MY_SHARED_FILES\">\n  <es-workspace-sub-tree\n    [node]=\"'-my_shared_files-'\"\n    [currentPath]=\"currentPath\"\n    (onUpdateOptions)=\"updateOptions($event)\"\n    (onDrop)=\"drop($event)\"\n    (onClick)=\"openNode($event)\"\n  ></es-workspace-sub-tree>\n</div>\n<div\n  class=\"rootNode\"\n  [class.rootNodeSelected]=\"root == TO_ME_SHARED_FILES\"\n  (click)=\"setRoot(TO_ME_SHARED_FILES)\"\n>\n  <i class=\"material-icons typeIcon\">send</i>{{ 'WORKSPACE.TO_ME_SHARED_FILES' | translate }}\n  <i class=\"material-icons\" *ngIf=\"root == TO_ME_SHARED_FILES\">keyboard_arrow_down</i>\n  <i class=\"arrow\" class=\"material-icons\" *ngIf=\"root != TO_ME_SHARED_FILES\"\n    >keyboard_arrow_right</i\n  >\n</div>\n<div class=\"tree\" *ngIf=\"root == TO_ME_SHARED_FILES\">\n  <es-workspace-sub-tree\n    [node]=\"workspace.getRootFolderInternalId()\"\n    [currentPath]=\"currentPath\"\n    (onUpdateOptions)=\"updateOptions($event)\"\n    (onDrop)=\"drop($event)\"\n    (onClick)=\"openNode($event)\"\n  ></es-workspace-sub-tree>\n</div>\n<div\n  class=\"rootNode\"\n  [class.rootNodeSelected]=\"root == WORKFLOW_RECEIVE\"\n  (click)=\"setRoot(WORKFLOW_RECEIVE)\"\n>\n  <i class=\"material-icons typeIcon\">inbox</i>{{ 'WORKSPACE.WORKFLOW_RECEIVE' | translate }}\n</div>\n<div class=\"tree\" *ngIf=\"root == WORKFLOW_RECEIVE\">\n  <es-workspace-sub-tree\n    [node]=\"'-workflow_receive-'\"\n    [currentPath]=\"currentPath\"\n    (onUpdateOptions)=\"updateOptions($event)\"\n    (onDrop)=\"drop($event)\"\n    (onClick)=\"openNode($event)\"\n  ></es-workspace-sub-tree>\n</div>\n<div\n  class=\"rootNode\"\n  [class.rootNodeSelected]=\"root == RECYCLE\"\n  (click)=\"setRoot(RECYCLE)\"\n  [esNodesDropTarget]=\"RECYCLE\"\n  [canDropNodes]=\"canDropOnRecycle\"\n  (nodeDropped)=\"onNodesDrop($event)\"\n>\n  <i class=\"material-icons typeIcon\">delete</i>{{ 'WORKSPACE.RECYCLE' | translate }}\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WorkspacePageComponent } from './workspace-page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: WorkspacePageComponent,\n    },\n    {\n        path: ':mode',\n        component: WorkspacePageComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class WorkspacePageRoutingModule {}\n","import { trigger } from '@angular/animations';\nimport { Component, HostListener, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserService } from 'ngx-edu-sharing-api';\nimport {\n    ActionbarComponent,\n    AppContainerService,\n    CanDrop,\n    ClipboardObject,\n    CustomOptions,\n    DefaultGroups,\n    DragData,\n    DropSource,\n    DropTarget,\n    ElementType,\n    LocalEventsService,\n    NodeDataSource,\n    NodeEntriesDisplayType,\n    NodeRoot,\n    OptionItem,\n    TemporaryStorageService,\n    TranslationsService,\n    UIAnimation,\n    UIConstants,\n} from 'ngx-edu-sharing-ui';\nimport * as rxjs from 'rxjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { delay, first, map, takeUntil } from 'rxjs/operators';\nimport {\n    ConfigurationService,\n    Connector,\n    EventListener,\n    Filetype,\n    FrameEventsService,\n    IamUser,\n    Node,\n    NodeList,\n    NodeWrapper,\n    RestConnectorService,\n    RestConnectorsService,\n    RestConstants,\n    RestHelper,\n    RestIamService,\n    RestMdsService,\n    RestNodeService,\n    RestToolService,\n    SessionStorageService,\n    UIService,\n} from '../../core-module/core.module';\nimport { Helper } from '../../core-module/rest/helper';\nimport { mapVCard } from '../../core-module/rest/services/rest-iam.service';\nimport { UIHelper } from '../../core-ui-module/ui-helper';\nimport { Closable } from '../../features/dialogs/card-dialog/card-dialog-config';\nimport { OK } from '../../features/dialogs/dialog-modules/generic-dialog/generic-dialog-data';\nimport { DialogsService } from '../../features/dialogs/dialogs.service';\nimport { LoadingScreenService } from '../../main/loading-screen/loading-screen.service';\nimport { MainNavService } from '../../main/navigation/main-nav.service';\nimport {\n    SearchEvent,\n    SearchFieldService,\n} from '../../main/navigation/search-field/search-field.service';\nimport { CardService } from '../../services/card.service';\nimport { NodeHelperService } from '../../services/node-helper.service';\nimport { Toast } from '../../services/toast';\nimport { BreadcrumbsService } from '../../shared/components/breadcrumbs/breadcrumbs.service';\nimport { WorkspaceExplorerComponent } from './explorer/explorer.component';\nimport { WorkspaceTreeComponent } from './tree/tree.component';\nimport { canDragDrop, canDropOnNode } from './workspace-utils';\nimport { WorkspaceService } from './workspace.service';\n\n@Component({\n    selector: 'es-workspace-page',\n    templateUrl: 'workspace-page.component.html',\n    styleUrls: ['workspace-page.component.scss'],\n    animations: [\n        trigger('fade', UIAnimation.fade()),\n        trigger('fadeFast', UIAnimation.fade(UIAnimation.ANIMATION_TIME_FAST)),\n        trigger('overlay', UIAnimation.openOverlay(UIAnimation.ANIMATION_TIME_FAST)),\n        trigger('fromLeft', UIAnimation.fromLeft()),\n        trigger('fromRight', UIAnimation.fromRight()),\n    ],\n})\nexport class WorkspacePageComponent implements EventListener, OnInit, OnDestroy {\n    private static VALID_ROOTS = [\n        'MY_FILES',\n        'SHARED_FILES',\n        'MY_SHARED_FILES',\n        'TO_ME_SHARED_FILES',\n        'WORKFLOW_RECEIVE',\n        'RECYCLE',\n    ];\n    private static VALID_ROOTS_NODES = [\n        RestConstants.USERHOME,\n        '-shared_files-',\n        '-my_shared_files-',\n        '-to_me_shared_files_personal-',\n        '-to_me_shared_files-',\n        '-workflow_receive-',\n    ];\n\n    @ViewChild('explorer') explorer: WorkspaceExplorerComponent;\n\n    @ViewChild(WorkspaceTreeComponent) treeComponent: WorkspaceTreeComponent;\n    @ViewChild('actionbar') actionbarRef: ActionbarComponent;\n\n    cardHasOpenModals$: Observable<boolean>;\n    private isRootFolder: boolean;\n    private sharedFolders: Node[] = [];\n    path: Node[] = [];\n    private parameterNode: Node;\n    root: NodeRoot = 'MY_FILES';\n\n    showSelectRoot = false;\n\n    private allowBinarySubject = new BehaviorSubject(true);\n    get allowBinary() {\n        return this.allowBinarySubject.value;\n    }\n    set allowBinary(value) {\n        this.allowBinarySubject.next(value);\n    }\n    private createAllowedSubject = new BehaviorSubject<boolean | 'EMIT_EVENT'>(null);\n    get createAllowed(): boolean | 'EMIT_EVENT' {\n        return this.createAllowedSubject.value;\n    }\n    set createAllowed(value: boolean | 'EMIT_EVENT') {\n        this.createAllowedSubject.next(value);\n    }\n    private currentFolderSubject = new BehaviorSubject<Node>(null);\n    get currentFolder(): Node {\n        return this.currentFolderSubject.value;\n    }\n    set currentFolder(value: Node) {\n        this.currentFolderSubject.next(value);\n    }\n    private searchQuerySubject = new BehaviorSubject<{ node: Node; query: string }>(null);\n    get searchQuery(): { node: Node; query: string } {\n        return this.searchQuerySubject.value;\n    }\n    set searchQuery(value: { node: Node; query: string }) {\n        this.searchQuerySubject.next(value);\n    }\n\n    globalProgress = false;\n    editNodeDeleteOnCancel = false;\n    notAllowedReason: string;\n    user: IamUser;\n    isSafe = false;\n    isLoggedIn = false;\n    addNodesToCollection: Node[];\n    addNodesStream: Node[];\n    variantNode: Node;\n    mainnav = true;\n    isBlocked = false;\n\n    customOptions: CustomOptions = {\n        useDefaultOptions: true,\n    };\n\n    toMeSharedToggle: boolean;\n\n    readonly dataSource = new NodeDataSource<Node>();\n    private reurl: string;\n    showLtiTools = false;\n    private oldParams: Params;\n    selectedNodeTree: string;\n    contributorNode: Node;\n    shareLinkNode: Node;\n    displayType: NodeEntriesDisplayType = null;\n    reorderDialog: boolean;\n    private readonly destroyed$ = new Subject<void>();\n    private loadingTask = this.loadingScreen.addLoadingTask({ until: this.destroyed$ });\n\n    constructor(\n        private appContainer: AppContainerService,\n        private breadcrumbsService: BreadcrumbsService,\n        private card: CardService,\n        private config: ConfigurationService,\n        private connector: RestConnectorService,\n        private connectors: RestConnectorsService,\n        private dialogs: DialogsService,\n        private event: FrameEventsService,\n        private iam: RestIamService,\n        private loadingScreen: LoadingScreenService,\n        private localEvents: LocalEventsService,\n        private mainNavService: MainNavService,\n        private mds: RestMdsService,\n        private ngZone: NgZone,\n        private node: RestNodeService,\n        private nodeHelper: NodeHelperService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private searchField: SearchFieldService,\n        private session: SessionStorageService,\n        private storage: TemporaryStorageService,\n        private userService: UserService,\n        private toast: Toast,\n        private toolService: RestToolService,\n        private translate: TranslateService,\n        private translations: TranslationsService,\n        private ui: UIService,\n        private workspace: WorkspaceService,\n    ) {\n        this.event.addListener(this, this.destroyed$);\n        this.connector.setRoute(this.route, this.router);\n        this.globalProgress = true;\n        this.translations.waitForInit().subscribe(() => {\n            void this.initialize();\n            this.cardHasOpenModals$ = this.card.hasOpenModals.pipe(delay(0));\n        });\n    }\n\n    ngOnInit(): void {\n        this.registerScroll();\n        this.registerUpdateMainNav();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n        this.storage.remove('workspace_clipboard');\n        if (this.currentFolder) {\n            this.storage.set(this.getLastLocationStorageId(), this.currentFolder.ref.id);\n        }\n    }\n\n    @HostListener('window:beforeunload', ['$event'])\n    beforeunloadHandler(event: any) {\n        if (this.isSafe) {\n            // not necessary anymore, stay in session on reload\n            // low session times for safe in backend to provide session hijacking\n            // this.connector.logout().toPromise();\n        }\n    }\n\n    private handleScroll(event: Event) {\n        const scroll = this.appContainer.getScrollContainer().scrollTop;\n        if (scroll > 0) {\n            this.storage.set('workspace_scroll', scroll);\n        }\n    }\n\n    onEvent(event: string, data: any): void {\n        if (event === FrameEventsService.EVENT_REFRESH) {\n            this.refresh();\n        }\n    }\n\n    /**\n     * Needs the following member variables to be initialized:\n     * - isSafe\n     * - isBlocked\n     * - mainnav\n     */\n    private initMainNav(): void {\n        this.mainNavService.setMainNavConfig({\n            title: this.isSafe ? 'WORKSPACE.TITLE_SAFE' : 'WORKSPACE.TITLE',\n            currentScope: this.isSafe ? 'safe' : 'workspace',\n            create: {\n                allowed: this.createAllowed,\n                allowBinary: this.allowBinary,\n                parent: this.currentFolder,\n                folder: true,\n            },\n            onCreate: (nodes) => this.explorer.nodeEntries.addVirtualNodes(nodes),\n            onCreateNotAllowed: () => this.createNotAllowed(),\n            canOpen: this.mainnav,\n        });\n        if (!this.isBlocked) {\n            const searchFieldInstance = this.searchField.enable(\n                {\n                    placeholder: this.isSafe ? 'WORKSPACE.SAFE_SEARCH' : 'WORKSPACE.SEARCH',\n                },\n                this.destroyed$,\n            );\n            searchFieldInstance.onSearchTriggered().subscribe((event) => this.doSearch(event));\n            this.searchQuerySubject.subscribe((searchQuery) =>\n                searchFieldInstance.setSearchString(searchQuery?.query),\n            );\n        } else {\n            this.searchField.disable();\n        }\n    }\n\n    private registerUpdateMainNav(): void {\n        rxjs.combineLatest([\n            this.createAllowedSubject,\n            this.allowBinarySubject,\n            this.currentFolderSubject,\n        ]).subscribe(([createAllowed, allowBinary, currentFolder]) =>\n            this.mainNavService.patchMainNavConfig({\n                create: {\n                    allowed: createAllowed,\n                    allowBinary: allowBinary,\n                    parent: currentFolder,\n                    folder: true,\n                },\n            }),\n        );\n    }\n\n    private registerScroll(): void {\n        this.appContainer.registerScrollEvents(\n            (event) => this.handleScroll(event),\n            this.destroyed$,\n        );\n    }\n\n    private editConnector(\n        node: Node = null,\n        type: Filetype = null,\n        win: any = null,\n        connectorType: Connector = null,\n    ) {\n        UIHelper.openConnector(\n            this.connectors,\n            this.iam,\n            this.event,\n            this.toast,\n            this.getNodeList(node)[0],\n            type,\n            win,\n            connectorType,\n        );\n    }\n\n    handleDrop(event: { target: DropTarget; source: DropSource<Node> }) {\n        if (event.source.mode === 'copy') {\n            this.copyNode(event.target, event.source.element);\n        } else {\n            this.moveNode(event.target, event.source.element);\n        }\n        /*\n        this.dialogTitle=\"WORKSPACE.DRAG_DROP_TITLE\";\n        this.dialogCancelable=true;\n        this.dialogMessage=\"WORKSPACE.DRAG_DROP_MESSAGE\";\n        this.dialogMessageParameters={source:event.source.name,target:event.target.name};\n        this.dialogButtons=[\n          new DialogButton(\"WORKSPACE.DRAG_DROP_COPY\",{ color: 'primary' },()=>this.copyNode(event.target,event.source)),\n          new DialogButton(\"WORKSPACE.DRAG_DROP_MOVE\",{ color: 'primary' },()=>this.moveNode(event.target,event.source)),\n        ]\n        */\n    }\n\n    handleDropOnBreadcrumb(event: { target: Node | 'HOME'; source: DropSource<Node> }) {\n        if (event.target === 'HOME') {\n            this.handleDrop({ target: this.root, source: event.source });\n        } else {\n            this.handleDrop(event as { target: Node; source: DropSource<Node> });\n        }\n    }\n\n    canDropOnBreadcrumb = (dragData: DragData<'HOME' | Node>): CanDrop => {\n        if (dragData.target === 'HOME') {\n            if (this.root === 'MY_FILES') {\n                return canDragDrop(dragData);\n            } else {\n                return { accept: false, denyExplicit: false };\n            }\n        } else {\n            return canDropOnNode(dragData as DragData<Node>);\n        }\n    };\n\n    private moveNode(target: DropTarget, source: Node[], position = 0) {\n        this.globalProgress = true;\n        if (position >= source.length) {\n            this.finishMoveCopy(target, source, false);\n            this.globalProgress = false;\n            return;\n        }\n        this.node\n            .moveNode((target as Node).ref?.id || RestConstants.USERHOME, source[position].ref.id)\n            .subscribe(\n                (data: NodeWrapper) => {\n                    this.moveNode(target, source, position + 1);\n                },\n                (error: any) => {\n                    this.nodeHelper.handleNodeError(source[position].name, error);\n                    source.splice(position, 1);\n                    this.moveNode(target, source, position + 1);\n                },\n            );\n    }\n\n    private copyNode(target: DropTarget, source: Node[], position = 0) {\n        this.globalProgress = true;\n        if (position >= source.length) {\n            this.finishMoveCopy(target, source, true);\n            this.globalProgress = false;\n            return;\n        }\n        this.node\n            .copyNode((target as Node).ref?.id || RestConstants.USERHOME, source[position].ref.id)\n            .subscribe(\n                (data: NodeWrapper) => {\n                    this.copyNode(target, source, position + 1);\n                },\n                (error: any) => {\n                    this.nodeHelper.handleNodeError(source[position].name, error);\n                    source.splice(position, 1);\n                    this.copyNode(target, source, position + 1);\n                },\n            );\n    }\n\n    private finishMoveCopy(target: DropTarget, source: Node[], copy: boolean) {\n        this.toast.closeProgressSpinner();\n        const info: any = {\n            to: (target as Node).name || this.translate.instant('WORKSPACE.MY_FILES'),\n            count: source.length,\n            mode: this.translate.instant('WORKSPACE.' + (copy ? 'PASTE_COPY' : 'PASTE_MOVE')),\n        };\n        if (source.length) {\n            this.toast.toast('WORKSPACE.TOAST.PASTE_DRAG', info);\n        }\n        this.globalProgress = false;\n        this.refresh();\n    }\n\n    private async initialize() {\n        this.route.params\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((routeParams: Params) => this.handleParamsUpdate(routeParams));\n        this.route.queryParams\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((params: Params) => this.handleQueryParamsUpdate(params));\n    }\n\n    private async initUser() {\n        try {\n            // wait until a valid user is present (issues after app login otherwise)\n            this.user = await this.userService\n                .observeCurrentUser()\n                .pipe(first(notNull), map(mapVCard))\n                .toPromise();\n        } catch (e) {\n            this.toast.error(e);\n            return;\n        }\n    }\n\n    private async handleParamsUpdate(routeParams: Params) {\n        this.isSafe = routeParams.mode === 'safe';\n        const login = await this.connector.isLoggedIn().toPromise();\n        if (login.statusCode !== RestConstants.STATUS_CODE_OK) {\n            RestHelper.goToLogin(this.router, this.config);\n            return;\n        }\n        let valid = true;\n        if (!login.isValidLogin || login.isGuest) {\n            valid = false;\n        }\n        this.isBlocked = !this.connector.hasToolPermissionInstant(\n            RestConstants.TOOLPERMISSION_WORKSPACE,\n        );\n        if (this.isSafe && login.currentScope !== RestConstants.SAFE_SCOPE) {\n            valid = false;\n        }\n        if (!this.isSafe && login.currentScope != null) {\n            this.connector.logout().subscribe(\n                () => {\n                    this.goToLogin();\n                },\n                (error: any) => {\n                    this.toast.error(error);\n                    this.goToLogin();\n                },\n            );\n            return;\n        }\n        if (!valid) {\n            this.goToLogin();\n            return;\n        }\n        await this.prepareActionbar();\n        await this.initUser();\n        this.loadFolders(this.user);\n\n        this.connector.scope = this.isSafe ? RestConstants.SAFE_SCOPE : null;\n        this.isLoggedIn = true;\n        this.globalProgress = false;\n    }\n\n    private handleQueryParamsUpdate(params: Params) {\n        let needsUpdate = false;\n        if (this.oldParams) {\n            for (const key of Object.keys(this.oldParams).concat(Object.keys(params))) {\n                if (params[key] === this.oldParams[key]) {\n                    continue;\n                }\n                if (key === UIConstants.QUERY_PARAM_LIST_VIEW_TYPE) {\n                    continue;\n                } else if (['page', 'pageSize'].includes(key)) {\n                    // Handled by `NodeEntriesComponent`.\n                    continue;\n                }\n                needsUpdate = true;\n            }\n        } else {\n            needsUpdate = true;\n        }\n        if (params.displayType != null) {\n            this.setDisplayType(\n                parseInt(params[UIConstants.QUERY_PARAM_LIST_VIEW_TYPE], 10),\n                false,\n            );\n        } else {\n            this.setDisplayType(\n                this.config.instant(\n                    'workspaceViewType',\n                    NodeEntriesDisplayType.Table,\n                ) as NodeEntriesDisplayType,\n                false,\n            );\n        }\n        if (params.root && WorkspacePageComponent.VALID_ROOTS.indexOf(params.root) !== -1) {\n            this.root = params.root;\n        } else {\n            this.root = 'MY_FILES';\n        }\n        if (params.reurl) {\n            this.reurl = params.reurl;\n        }\n        this.mainnav = params.mainnav === 'false' ? false : true;\n\n        this.initMainNav();\n\n        if (params.file && params.file !== this.oldParams?.file) {\n            void this.showNodeInCurrentFolder(params.file);\n        }\n\n        if (!needsUpdate) {\n            return;\n        }\n        this.createAllowed = this.root === 'MY_FILES';\n        let lastLocation = this.storage.pop(this.getLastLocationStorageId(), null);\n        if (this.isSafe) {\n            // clear lastLocation, this is another folder than the safe\n            lastLocation = null;\n        }\n        if (!params.id && !params.query && lastLocation) {\n            this.openDirectory(lastLocation, { replaceUrl: true });\n        } else {\n            this.openDirectoryFromRoute(params);\n        }\n        if (params.showAlpha) {\n            this.showAlpha();\n        }\n        this.oldParams = params;\n    }\n\n    private async showNodeInCurrentFolder(id: string) {\n        // TODO: Consider moving this to `NodeDataSource`.\n        const visibleNodes = await this.explorer.dataSource\n            .connect()\n            .pipe(first((data) => data?.length > 1))\n            .toPromise();\n        let node = visibleNodes.find((node) => node.ref.id === id);\n        if (!node) {\n            ({ node } = await this.node.getNodeMetadata(id, [RestConstants.ALL]).toPromise());\n            if (node.parent?.id === this.currentFolder?.ref.id) {\n                this.explorer.dataSource.appendData([node], 'before');\n                // FIXME: The appended node will show up a second time when loading more data.\n            } else {\n                this.toast.error(null, 'WORKSPACE.TOAST.ELEMENT_NOT_IN_FOLDER');\n                return;\n            }\n        }\n        this.setSelection([node]);\n        this.parameterNode = node;\n        this.workspace.nodeSidebar = node;\n    }\n\n    resetWorkspace() {\n        if (this.workspace.nodeSidebar && this.parameterNode) {\n            this.setSelection([this.parameterNode]);\n        }\n    }\n\n    doSearch(event: SearchEvent) {\n        const id = this.currentFolder\n            ? this.currentFolder.ref.id\n            : this.searchQuery && this.searchQuery.node\n            ? this.searchQuery.node.ref.id\n            : null;\n        void this.routeTo(this.root, id, event.searchString);\n        if (!event.cleared) {\n            this.ui.hideKeyboardIfMobile();\n        }\n    }\n\n    private doSearchFromRoute(params: any, node: Node | any) {\n        node = this.isRootFolder ? null : node;\n        this.searchQuery = {\n            query: params.query,\n            node,\n        };\n        if (node == null && this.root !== 'RECYCLE') {\n            this.root = 'ALL_FILES';\n        }\n        this.createAllowed = 'EMIT_EVENT';\n        this.notAllowedReason = 'WORKSPACE.CREATE_REASON.SEARCH';\n        this.path = [];\n        this.breadcrumbsService.setNodePath(this.path);\n        this.setSelection([]);\n    }\n\n    private displayNode(event: Node) {\n        const list = this.getNodeList(event);\n        if (list[0].isDirectory || list[0].type === RestConstants.SYS_TYPE_CONTAINER) {\n            if (list[0].collection) {\n                UIHelper.goToCollection(this.router, list[0]);\n            } else {\n                this.openDirectory(list[0].ref.id);\n            }\n        } else {\n            /*\n            this.nodeDisplayed = event;\n            this.nodeDisplayedVersion = event.version;\n            */\n            this.storage.set(\n                TemporaryStorageService.NODE_RENDER_PARAMETER_DATA_SOURCE,\n                this.dataSource,\n            );\n            this.router.navigate(\n                [\n                    UIConstants.ROUTER_PREFIX + 'render',\n                    list[0].ref.id,\n                    list[0].version ? list[0].version : '',\n                ],\n                {\n                    state: {\n                        scope: 'workspace',\n                    },\n                },\n            );\n        }\n    }\n\n    // returns either the passed node as list, or the current selection if the passed node is invalid (actionbar)\n    private getNodeList(node: Node): Node[] {\n        if (Array.isArray(node)) {\n            return node;\n        }\n        let nodes = [node];\n        if (node == null) {\n            nodes = this.explorer.nodeEntries.getSelection().selected;\n        }\n        return nodes;\n    }\n\n    private loadFolders(user: IamUser) {\n        for (const folder of user.person.sharedFolders) {\n            this.node\n                .getNodeMetadata(folder.id)\n                .subscribe((node: NodeWrapper) => this.sharedFolders.push(node.node));\n        }\n    }\n\n    setRoot(root: NodeRoot) {\n        this.root = root;\n        this.searchQuery = null;\n        this.routeTo(root, null, null);\n        this.actionbarRef.invalidate();\n    }\n\n    setSelection(nodes: Node[]) {\n        this.explorer.nodeEntries.getSelection().clear();\n        this.explorer.nodeEntries.getSelection().select(...nodes);\n        this.setFixMobileNav();\n    }\n\n    private setFixMobileNav() {\n        this.mainNavService\n            .getMainNav()\n            .setFixMobileElements(this.explorer.nodeEntries.getSelection().selected?.length > 0);\n    }\n\n    private closeMetadata() {\n        this.workspace.nodeSidebar = null;\n        this.workspace.nodeSidebarChange.emit(null);\n    }\n\n    private openDirectory(id: string, { replaceUrl = false } = {}) {\n        this.routeTo(this.root, id, null, { replaceUrl });\n    }\n\n    searchGlobal(query: string) {\n        this.routeTo(this.root, null, query);\n    }\n\n    private openDirectoryFromRoute(params: any = null) {\n        let id = params?.id;\n        this.closeMetadata();\n        if (!id) {\n            this.path = [];\n            this.breadcrumbsService.setNodePath(this.path);\n            id = this.getRootFolderInternalId();\n            if (this.root === 'RECYCLE') {\n                this.createAllowed = false;\n                // GlobalContainerComponent.finishPreloading();\n                // return;\n            }\n        } else {\n            this.selectedNodeTree = id;\n            if (id === RestConstants.USERHOME) {\n                this.selectedNodeTree = null;\n                this.path = [];\n            } else {\n                this.node.getNodeParents(id, false, [RestConstants.ALL]).subscribe(\n                    (data: NodeList) => {\n                        if (this.root === 'RECYCLE') {\n                            this.path = [];\n                            this.breadcrumbsService.setNodePath(this.path);\n                            this.createAllowed = false;\n                        } else {\n                            this.path = data.nodes.reverse();\n                            this.breadcrumbsService.setNodePath(this.path);\n                        }\n                        this.selectedNodeTree = null;\n                    },\n                    (error: any) => {\n                        this.selectedNodeTree = null;\n                        this.path = [];\n                        this.breadcrumbsService.setNodePath(this.path);\n                    },\n                );\n            }\n        }\n        if (this.currentFolder?.ref.id !== id) {\n            this.currentFolder = null;\n        }\n        this.allowBinary = true;\n        const root = !id || WorkspacePageComponent.VALID_ROOTS_NODES.indexOf(id) !== -1;\n        if (!root) {\n            this.isRootFolder = false;\n            this.node.getNodeMetadata(id).subscribe(\n                (data: NodeWrapper) => {\n                    this.mds\n                        .getSet(\n                            data.node.metadataset ? data.node.metadataset : RestConstants.DEFAULT,\n                        )\n                        .subscribe((mds: any) => {\n                            if (mds.create) {\n                                this.allowBinary = !mds.create.onlyMetadata;\n                                if (!this.allowBinary) {\n                                }\n                            }\n                        });\n                    this.updateNodeByParams(params, data.node);\n                    this.createAllowed =\n                        !this.searchQuery &&\n                        this.nodeHelper.getNodesRight(\n                            [data.node],\n                            RestConstants.ACCESS_ADD_CHILDREN,\n                        )\n                            ? true\n                            : 'EMIT_EVENT';\n                    this.notAllowedReason = 'WORKSPACE.CREATE_REASON.PERMISSIONS';\n                    this.recoverScrollposition();\n                },\n                (error: any) => {\n                    this.updateNodeByParams(params, { ref: { id } });\n                },\n            );\n        } else {\n            this.isRootFolder = true;\n            if (\n                id === '-my_shared_files-' ||\n                id === '-to_me_shared_files_personal-' ||\n                id === '-to_me_shared_files-'\n            ) {\n                this.isRootFolder = false;\n            }\n            if (id === RestConstants.USERHOME) {\n                this.createAllowed = true;\n            } else if (this.root === 'RECYCLE') {\n                this.createAllowed = false;\n            } else {\n                this.createAllowed = 'EMIT_EVENT';\n                this.notAllowedReason = 'WORKSPACE.CREATE_REASON.VIRTUAL';\n            }\n            const node: Node | any = {\n                ref: {\n                    id,\n                },\n                name: this.translate.instant('WORKSPACE.' + this.root),\n            };\n            if (this.root === 'MY_FILES') {\n                node.access = [RestConstants.ACCESS_ADD_CHILDREN];\n            }\n            this.updateNodeByParams(params, node);\n        }\n    }\n\n    openNode(node: Node, useConnector = true) {\n        if (this.nodeHelper.isSavedSearchObject(node)) {\n            UIHelper.routeToSearchNode(this.router, null, node);\n        } else if (RestToolService.isLtiObject(node)) {\n            this.toolService.openLtiObject(node);\n        } else if (useConnector && this.connectors.connectorSupportsEdit(node)) {\n            this.editConnector(node);\n        } else {\n            this.displayNode(node);\n        }\n    }\n\n    openBreadcrumb(position: number) {\n        this.searchQuery = null;\n        if (position > 0) {\n            // handled automatically via routing\n        } else {\n            // TODO: handle with homeRouterLink if possible.\n            if (\n                UIService.evaluateMediaQuery(\n                    UIConstants.MEDIA_QUERY_MAX_WIDTH,\n                    UIConstants.MOBILE_TAB_SWITCH_WIDTH,\n                )\n            ) {\n                this.showSelectRoot = true;\n            } else {\n                this.routeTo(this.root);\n            }\n        }\n    }\n\n    private refresh(refreshPath = true, nodes: Node[] = null) {\n        // only refresh properties in this case\n        if (nodes && nodes.length) {\n            this.updateNodes(nodes);\n            return;\n        }\n        const search = this.searchQuery;\n        const folder = this.currentFolder;\n        this.currentFolder = null;\n        this.searchQuery = null;\n        const path = this.path;\n        if (refreshPath) {\n            this.path = [];\n            this.breadcrumbsService.setNodePath(this.path);\n        }\n        setTimeout(() => {\n            this.path = path;\n            this.breadcrumbsService.setNodePath(this.path);\n            this.currentFolder = folder;\n            this.searchQuery = search;\n        });\n    }\n\n    private async routeTo(\n        root: string,\n        node: string = null,\n        search: string = null,\n        { replaceUrl = false } = {},\n    ) {\n        const params = await UIHelper.getCommonParameters(this.route).toPromise();\n        params.root = root;\n        params.id = node;\n        params.query = search;\n        params.mainnav = this.mainnav;\n        // tslint:disable-next-line:triple-equals\n        if (this.displayType !== null) {\n            params.displayType = this.displayType;\n        }\n        void this.router\n            .navigate(['./'], { queryParams: params, relativeTo: this.route, replaceUrl })\n            .then((result: boolean) => {\n                if (!result) {\n                    this.refresh(false);\n                }\n            });\n    }\n\n    private showAlpha() {\n        void this.dialogs.openGenericDialog({\n            title: 'WORKSPACE.ALPHA_TITLE',\n            message: 'WORKSPACE.ALPHA_MESSAGE',\n            buttons: OK,\n            closable: Closable.Disabled,\n        });\n    }\n\n    private addToCollection(node: Node) {\n        const nodes = this.getNodeList(node);\n        this.addNodesToCollection = nodes;\n    }\n    private addToStream(node: Node) {\n        const nodes = this.getNodeList(node);\n        this.addNodesStream = nodes;\n    }\n    private createVariant(node: Node) {\n        const nodes = this.getNodeList(node);\n        this.variantNode = nodes[0];\n    }\n\n    private goToLogin() {\n        RestHelper.goToLogin(this.router, this.config, this.isSafe ? RestConstants.SAFE_SCOPE : '');\n    }\n\n    getRootFolderId() {\n        if (this.root === 'MY_FILES') {\n            return RestConstants.USERHOME;\n        }\n        if (this.root === 'SHARED_FILES') {\n            return RestConstants.SHARED_FILES;\n        }\n        if (this.root === 'MY_SHARED_FILES') {\n            return RestConstants.MY_SHARED_FILES;\n        }\n        if (this.root === 'TO_ME_SHARED_FILES') {\n            return RestConstants.TO_ME_SHARED_FILES;\n        }\n        if (this.root === 'WORKFLOW_RECEIVE') {\n            return RestConstants.WORKFLOW_RECEIVE;\n        }\n        return '';\n    }\n\n    getRootFolderInternalId() {\n        if (this.root === 'TO_ME_SHARED_FILES') {\n            if (this.toMeSharedToggle) {\n                return RestConstants.TO_ME_SHARED_FILES;\n            } else {\n                return RestConstants.TO_ME_SHARED_FILES_PERSONAL;\n            }\n        }\n        return this.getRootFolderId();\n    }\n\n    listLTI() {\n        this.showLtiTools = true;\n    }\n\n    private recoverScrollposition() {\n        window.scrollTo(0, this.storage.get('workspace_scroll', 0));\n    }\n\n    private applyNode(node: Node, force = false) {\n        /*if(node.isDirectory && !force){\n            this.dialogTitle='WORKSPACE.APPLY_NODE.DIRECTORY_TITLE';\n            this.dialogCancelable=true;\n            this.dialogMessage='WORKSPACE.APPLY_NODE.DIRECTORY_MESSAGE';\n            this.dialogMessageParameters={name:node.name};\n            this.dialogButtons=DialogButton.getYesNo(()=>{\n                this.dialogTitle=null;\n            },()=>{\n                this.dialogTitle=null;\n                this.applyNode(node,true);\n            });\n            return;\n        }*/\n        this.nodeHelper.addNodeToLms(node, this.reurl);\n    }\n\n    private updateNodeByParams(params: any, node: Node | any) {\n        if (!this.loadingTask.isDone) {\n            this.loadingTask.done();\n        }\n        if (params?.query) {\n            this.doSearchFromRoute(params, node);\n        } else {\n            this.searchQuery = null;\n            this.currentFolder = node;\n            this.event.broadcastEvent(\n                FrameEventsService.EVENT_NODE_FOLDER_OPENED,\n                this.currentFolder,\n            );\n        }\n    }\n\n    private canPasteInCurrentLocation() {\n        const clip = this.storage.get('workspace_clipboard') as ClipboardObject;\n        return (\n            this.currentFolder &&\n            !this.searchQuery &&\n            clip &&\n            (!clip.sourceNode ||\n                clip.sourceNode.ref.id !== this.currentFolder.ref.id ||\n                clip.copy) &&\n            this.createAllowed\n        );\n    }\n\n    private updateNodes(nodes: Node[]) {\n        for (let node of this.dataSource.getData()) {\n            const hit = nodes.filter((n) => n.ref.id === node.ref.id);\n            if (hit && hit.length === 1) {\n                Helper.copyObjectProperties(node, hit[0]);\n            }\n        }\n    }\n\n    async prepareActionbar() {\n        this.toMeSharedToggle = await this.session\n            .get('toMeSharedGroup', this.config.instant('workspaceSharedToMeDefaultAll', false))\n            .toPromise();\n        const toggle = new OptionItem(\n            'OPTIONS.TOGGLE_SHARED_TO_ME',\n            this.toMeSharedToggle ? 'edu-content_shared_me_all' : 'edu-content_shared_me_private',\n            () => {\n                this.toMeSharedToggle = !this.toMeSharedToggle;\n                toggle.icon = this.toMeSharedToggle\n                    ? 'edu-content_shared_me_all'\n                    : 'edu-content_shared_me_private';\n                this.session.set('toMeSharedGroup', this.toMeSharedToggle);\n                this.openDirectoryFromRoute();\n                //this.treeComponent.reload = Boolean(true);\n                this.toast.toast(\n                    'WORKSPACE.TOAST.TO_ME_SHARED_' + (this.toMeSharedToggle ? 'ALL' : 'PERSONAL'),\n                );\n            },\n        );\n        toggle.isToggle = true;\n        toggle.group = DefaultGroups.Toggles;\n        toggle.elementType = [ElementType.Unknown];\n        toggle.priority = 5;\n        toggle.customShowCallback = async () => {\n            return this.root === 'TO_ME_SHARED_FILES';\n        };\n        this.customOptions.addOptions = [toggle];\n    }\n\n    private getLastLocationStorageId() {\n        return (\n            TemporaryStorageService.WORKSPACE_LAST_LOCATION +\n            (this.isSafe ? RestConstants.SAFE_SCOPE : '')\n        );\n    }\n\n    setDisplayType(displayType: NodeEntriesDisplayType, refreshRoute = true) {\n        if (this.displayType === displayType) {\n            return;\n        }\n        this.displayType = displayType;\n        if (refreshRoute) {\n            void this.router.navigate(['./'], {\n                relativeTo: this.route,\n                replaceUrl: true,\n                queryParamsHandling: 'merge',\n                queryParams: {\n                    [UIConstants.QUERY_PARAM_LIST_VIEW_TYPE]: displayType,\n                },\n            });\n        }\n    }\n\n    async createNotAllowed() {\n        const dialogRef = await this.dialogs.openGenericDialog({\n            title: 'WORKSPACE.CREATE_REASON.TITLE',\n            message:\n                (await this.translate.get(this.notAllowedReason).toPromise()) +\n                '\\n' +\n                (await this.translate.get('WORKSPACE.CREATE_REASON.GENERAL').toPromise()),\n            buttons: [\n                {\n                    label: 'WORKSPACE.GO_TO_HOME',\n                    config: { color: 'primary', position: 'opposite' },\n                },\n                { label: 'CLOSE', config: { color: 'standard' } },\n            ],\n        });\n        dialogRef.afterClosed().subscribe((response) => {\n            if (response === 'WORKSPACE.GO_TO_HOME') {\n                this.openDirectory(RestConstants.USERHOME);\n            }\n        });\n    }\n\n    onDeleteNodes(nodes: Node[]): void {\n        this.dialogs.openDeleteNodesDialog({ nodes });\n        // this.mainNavService.getDialogs().nodeDelete = nodes;\n    }\n}\n\nfunction notNull<T>(value?: T): boolean {\n    return value !== undefined && value !== null;\n}\n","<div class=\"frame\" cdkDropList [cdkDropListSortingDisabled]=\"true\">\n  <div class=\"topbarFrame\">\n    <div class=\"mobile-move-top\">\n      <es-breadcrumbs\n        *ngIf=\"isLoggedIn\"\n        [searchQuery]=\"searchQuery?.query\"\n        [home]=\"'WORKSPACE.' + root\"\n        [canDropNodes]=\"canDropOnBreadcrumb\"\n        (onDrop)=\"handleDropOnBreadcrumb($event)\"\n        (onClick)=\"openBreadcrumb($event)\"\n      ></es-breadcrumbs>\n      <es-actionbar #actionbar></es-actionbar>\n    </div>\n  </div>\n  <div *ngIf=\"isBlocked\" class=\"workspace-container isBlocked\">\n    {{ 'NO_PERMISSIONS_FOR_SCOPE' | translate }}\n  </div>\n  <div *ngIf=\"!isBlocked\" class=\"workspace-container\" [class.hide]=\"globalProgress\">\n    <div class=\"dialog\" *ngIf=\"showSelectRoot\" (click)=\"showSelectRoot = false\"></div>\n    <div class=\"selectRootMenu collection\" [@overlay]=\"showSelectRoot\" *ngIf=\"showSelectRoot\">\n      <a\n        class=\"collection-item\"\n        [class.rootSelected]=\"root === 'MY_FILES'\"\n        (click)=\"showSelectRoot = false; setRoot('MY_FILES')\"\n        ><i esIcon=\"person\"></i> {{ 'WORKSPACE.MY_FILES' | translate }}</a\n      >\n      <a\n        class=\"collection-item\"\n        [class.rootSelected]=\"root === 'SHARED_FILES'\"\n        (click)=\"showSelectRoot = false; setRoot('SHARED_FILES')\"\n        ><i esIcon=\"group\"></i> {{ 'WORKSPACE.SHARED_FILES' | translate }}</a\n      >\n      <a\n        class=\"collection-item\"\n        [class.rootSelected]=\"root === 'MY_SHARED_FILES'\"\n        (click)=\"showSelectRoot = false; setRoot('MY_SHARED_FILES')\"\n        ><i esIcon=\"share\"></i> {{ 'WORKSPACE.MY_SHARED_FILES' | translate }}</a\n      >\n      <a\n        class=\"collection-item\"\n        [class.rootSelected]=\"root === 'TO_ME_SHARED_FILES'\"\n        (click)=\"showSelectRoot = false; setRoot('TO_ME_SHARED_FILES')\"\n        ><i esIcon=\"send\"></i> {{ 'WORKSPACE.TO_ME_SHARED_FILES' | translate }}</a\n      >\n      <a\n        class=\"collection-item\"\n        [class.rootSelected]=\"root === 'WORKFLOW_RECEIVE'\"\n        (click)=\"showSelectRoot = false; setRoot('WORKFLOW_RECEIVE')\"\n        ><i esIcon=\"inbox\"></i> {{ 'WORKSPACE.WORKFLOW_RECEIVE' | translate }}</a\n      >\n      <a\n        class=\"collection-item\"\n        [class.rootSelected]=\"root === 'RECYCLE'\"\n        (click)=\"showSelectRoot = false; setRoot('RECYCLE')\"\n        ><i esIcon=\"delete\"></i> {{ 'WORKSPACE.RECYCLE' | translate }}</a\n      >\n    </div>\n    <div class=\"tree\" *ngIf=\"isLoggedIn\">\n      <es-workspace-tree\n        [class.tree-quota]=\"user.person.quota.enabled\"\n        [path]=\"path\"\n        [selectedNode]=\"selectedNodeTree\"\n        [root]=\"root\"\n        [workspace]=\"this\"\n        [isSafe]=\"isSafe\"\n        (onDrop)=\"handleDrop($event)\"\n        (onSetRoot)=\"setRoot($event)\"\n        (onOpenNode)=\"openNode($event)\"\n        (onDeleteNodes)=\"onDeleteNodes($event)\"\n      ></es-workspace-tree>\n      <es-user-quota *ngIf=\"user.person.quota.enabled\" [quota]=\"user.person.quota\"></es-user-quota>\n    </div>\n    <es-recycle *ngIf=\"root === 'RECYCLE'\" class=\"explorer\" [actionbar]=\"actionbar\"></es-recycle>\n    <h1 esTitle class=\"cdk-visually-hidden\">{{ 'WORKSPACE.TITLE' | translate }}</h1>\n    <es-workspace-explorer\n      class=\"explorer\"\n      #explorer\n      role=\"main\"\n      esSkipTarget=\"MAIN_CONTENT\"\n      appCreateContextMenu\n      *ngIf=\"root !== 'RECYCLE'\"\n      [current]=\"currentFolder\"\n      [root]=\"root\"\n      (refreshTree)=\"treeComponent?.refresh()\"\n      [searchQuery]=\"searchQuery\"\n      [customOptions]=\"customOptions\"\n      [displayType]=\"displayType\"\n      (displayTypeChange)=\"setDisplayType($event)\"\n      [(reorderDialog)]=\"reorderDialog\"\n      [preventKeyevents]=\"cardHasOpenModals$ | async\"\n      [dataSource]=\"dataSource\"\n      [actionbar]=\"actionbar\"\n      (onSearchGlobal)=\"searchGlobal($event)\"\n      (onDrop)=\"handleDrop($event)\"\n      (onViewNode)=\"openNode($any($event), false)\"\n      (onOpenNode)=\"openNode($any($event), false)\"\n      (onReset)=\"resetWorkspace()\"\n    ></es-workspace-explorer>\n  </div>\n  <es-global-progress *ngIf=\"globalProgress\"></es-global-progress>\n</div>\n\n<es-metadata-sidebar></es-metadata-sidebar>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { WorkspaceExplorerComponent } from './explorer/explorer.component';\nimport { WorkspaceMetadataBlockComponent } from './metadata/metadata-block.component';\nimport { MetadataSidebarComponent } from './metadata/metadata-sidebar.component';\nimport { WorkspaceMetadataComponent } from './metadata/metadata.component';\nimport { RecycleMainComponent } from './recycle/recycle.component';\nimport { WorkspaceSubTreeComponent } from './sub-tree/sub-tree.component';\nimport { WorkspaceTreeComponent } from './tree/tree.component';\nimport { WorkspacePageRoutingModule } from './workspace-page-routing.module';\nimport { WorkspacePageComponent } from './workspace-page.component';\n\n@NgModule({\n    declarations: [\n        MetadataSidebarComponent,\n        RecycleMainComponent,\n        WorkspaceExplorerComponent,\n        WorkspaceMetadataBlockComponent,\n        WorkspaceMetadataComponent,\n        WorkspacePageComponent,\n        WorkspaceSubTreeComponent,\n        WorkspaceTreeComponent,\n    ],\n    imports: [SharedModule, WorkspacePageRoutingModule],\n})\nexport class WorkspacePageModule {}\n"],"names":["EventEmitter","ConfigurationHelper","RestConstants","DurationHelper","FormatDatePipe","NodeImageSizePipe","VCard","i0","ɵɵelementStart","ɵɵlistener","WorkspaceMetadataBlockComponent_ng_container_0_button_5_Template_button_click_0_listener","ɵɵrestoreView","_r31","ctx_r30","ɵɵnextContext","ɵɵresetView","onEditMetadata","emit","_node","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r3","data","title","ɵɵtextInterpolate1","keyword_r33","ɵɵtemplate","WorkspaceMetadataBlockComponent_ng_container_0_div_15_div_1_Template","ɵɵproperty","ctx_r5","keywords","ctx_r7","description","ctx_r9","author_freetext","ctx_r11","author","ctx_r12","mediatype","ctx_r16","mimetype","ctx_r18","exifDate","ctx_r20","dimensions","ctx_r22","duration","ctx_r24","size","authority_r39","WorkspaceMetadataBlockComponent_ng_container_0_div_47_div_2_div_1_Template","ctx_r35","permissions","users","authority_r41","WorkspaceMetadataBlockComponent_ng_container_0_div_47_div_4_div_1_Template","ctx_r37","groups","WorkspaceMetadataBlockComponent_ng_container_0_div_47_div_1_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_47_div_2_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_47_div_3_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_47_div_4_Template","ctx_r26","length","ɵɵelement","license_r42","ɵɵsanitizeUrl","ctx_r28","licenseName","aspect_r45","property_r46","WorkspaceMetadataBlockComponent_ng_container_0_div_51_div_4_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_51_div_5_Template","ctx_r29","aspects","properties","ɵɵelementContainerStart","WorkspaceMetadataBlockComponent_ng_container_0_Template_img_click_1_listener","_r48","ctx_r47","onDisplay","WorkspaceMetadataBlockComponent_ng_container_0_button_5_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_12_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_13_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_14_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_15_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_16_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_17_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_18_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_19_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_20_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_21_Template","WorkspaceMetadataBlockComponent_ng_container_0_span_33_Template","WorkspaceMetadataBlockComponent_ng_container_0_span_34_Template","WorkspaceMetadataBlockComponent_ng_container_0_span_35_Template","WorkspaceMetadataBlockComponent_ng_container_0_span_36_Template","WorkspaceMetadataBlockComponent_ng_container_0_span_37_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_38_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_39_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_40_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_41_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_42_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_43_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_44_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_45_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_46_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_47_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_48_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_49_Template","WorkspaceMetadataBlockComponent_ng_container_0_div_51_Template","ɵɵelementContainerEnd","ɵɵpipeBind2","ctx_r0","isAnimated","ɵɵpureFunction0","_c0","_c1","canEdit","name","creator","createDate","isDirectory","isCollection","license","tmp_35_0","connector","getCurrentLogin","isAdmin","WorkspaceMetadataBlockComponent","node","load","_this","_asyncToGenerator","format","nodeApi","getNodePermissions","ref","id","subscribe","formatPermissions","collection","LOM_PROP_GENERAL_DESCRIPTION","preview","url","LOM_PROP_GENERAL_KEYWORD","getPersonWithConfigDisplayName","createdBy","configService","translate","transform","createdAt","getDurationFormatted","LOM_PROP_TECHNICAL_DURATION","toVCards","CCM_PROP_LIFECYCLECONTRIBUTER_AUTHOR","join","CCM_PROP_AUTHOR_FREETEXT","EXIF_PROP_DATE_TIME_ORIGINAL","nodeHelper","getLicenseIcon","getLicenseName","sort","k","Object","keys","push","constructor","hasAnimatedPreview","currentAuth","authorityName","permission","inheritedPermissions","authority","authorityType","AUTHORITY_TYPE_OWNER","AUTHORITY_TYPE_USER","localPermissions","containsPermission","vcards","p","getDisplayName","perm","access","indexOf","ACCESS_WRITE","_","ɵɵdirectiveInject","i1","RestConnectorService","RestNodeService","i2","TranslateService","i3","ConfigService","i4","NodeHelperService","_2","selectors","inputs","outputs","decls","vars","consts","template","WorkspaceMetadataBlockComponent_Template","rf","ctx","WorkspaceMetadataBlockComponent_ng_container_0_Template","trigger","UIAnimation","UIConstants","YES_OR_NO","BulkBehavior","MetadataSidebarComponent_es_workspace_metadata_0_Template_es_workspace_metadata_onRestore_0_listener","$event","_r2","ctx_r1","restoreVersion","MetadataSidebarComponent_es_workspace_metadata_0_Template_es_workspace_metadata_onDisplay_0_listener","goToNode","MetadataSidebarComponent_es_workspace_metadata_0_Template_es_workspace_metadata_onEditMetadata_0_listener","ctx_r4","openMdsEditor","MetadataSidebarComponent_es_workspace_metadata_0_Template_es_workspace_metadata_onClose_0_listener","closeSidebar","nodeSidebar","MetadataSidebarComponent","workspace","dialogs","localEvents","router","toast","handleKeyboardEvent","event","key","preventDefault","stopPropagation","restore","dialogRef","openGenericDialog","message","buttons","nodes","afterClosed","response","doRestoreVersion","version","showProgressSpinner","revertNodeToVersion","major","minor","closeProgressSpinner","getNodeMetadata","ALL","nodesChanged","nodeSidebarChange","error","navigate","ROUTER_PREFIX","_this2","openMdsEditorDialogForNodes","bulkBehavior","Default","updatedNodes","closeMdsEditor","originalNodes","refresh","DialogsService","LocalEventsService","Router","i5","Toast","i6","WorkspaceService","hostBindings","MetadataSidebarComponent_HostBindings","ɵɵresolveDocument","MetadataSidebarComponent_es_workspace_metadata_0_Template","fromRight","InteractionType","ListItem","NodeDataSource","NodeEntriesDisplayType","BehaviorSubject","distinctUntilChanged","filter","RestHelper","UIHelper","ɵɵprojection","ctx_r14","statsTotalPoints","WorkspaceMetadataComponent_div_0_ng_container_9_mat_tab_group_1_ng_template_2_Template","WorkspaceMetadataComponent_div_0_ng_container_9_mat_tab_group_1_ng_content_3_Template","WorkspaceMetadataComponent_div_0_ng_container_9_mat_tab_group_1_ng_template_5_Template","WorkspaceMetadataComponent_div_0_ng_container_9_mat_tab_group_1_ng_content_6_Template","WorkspaceMetadataComponent_div_0_ng_container_9_mat_tab_group_1_ng_template_8_Template","WorkspaceMetadataComponent_div_0_ng_container_9_mat_tab_group_1_ng_content_9_Template","_r6","_r8","_r10","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_2_ng_content_1_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_4_Template_es_workspace_metadata_block_onDisplay_0_listener","_r20","ctx_r19","display","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_4_Template_es_workspace_metadata_block_onEditMetadata_0_listener","ctx_r21","edit","nodeObject","ctx_r23","stats","pointsIcons","i_r31","point_r30","ɵɵpureFunction1","usagesCollectionData","ctx_r25","usagesCollection","columnsCollections","SmallGrid","DefaultActionLink","ctx_r27","staticDataSource","forkedParent","columns","Table","forkedChildren","getData","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_6_li_7_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_6_p_13_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_6_es_node_entries_wrapper_14_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_6_div_15_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_6_es_node_entries_wrapper_16_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_6_div_17_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_6_es_node_entries_wrapper_18_Template","points","isEmpty","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_8_div_2_button_17_Template_button_click_0_listener","_r40","version_r34","$implicit","ctx_r38","ɵɵclassProp","canRevert","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_8_div_2_span_2_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_8_div_2_span_3_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_8_div_2_Template_button_click_13_listener","restoredCtx","_r42","ctx_r41","displayVersion","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_8_div_2_button_17_Template","ctx_r33","isCurrentVersion","ɵɵtextInterpolate2","modifiedBy","firstName","lastName","modifiedAt","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_8_div_1_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_8_div_2_Template","versionsLoading","versions","WorkspaceMetadataComponent_div_0_ng_container_9_mat_tab_group_1_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_2_Template","ɵɵtemplateRefExtractor","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_4_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_6_Template","WorkspaceMetadataComponent_div_0_ng_container_9_ng_template_8_Template","ctx_r2","_r4","WorkspaceMetadataComponent_div_0_Template_button_click_5_listener","_r44","ctx_r43","close","WorkspaceMetadataComponent_div_0_es_spinner_8_Template","WorkspaceMetadataComponent_div_0_ng_container_9_Template","loading","WorkspaceMetadataComponent","canvas","_canvas","value","drawBarChart","nodeSubject","next","config","iamApi","nodeService","searchApi","usageApi","onDownload","onClose","onRestore","INFO","PROPERTIES","VERSIONS","connect","labels","colors","CM_NAME","ngOnInit","pipe","resetStats","toPromise","currentNode","getVersionsMetadata","repo","reverse","comment","COMMENT_MAIN_FILE_UPLOAD","COMMENT_METADATA_UPDATE","COMMENT_CONTRIBUTOR_UPDATE","COMMENT_CONTENT_UPDATE","COMMENT_LICENSE_UPDATE","COMMENT_NODE_PUBLISHED","COMMENT_PREVIEW_CHANGED","startsWith","COMMENT_EDITOR_UPLOAD","parameters","split","editor","instant","i","splice","getUser","login","usages","reset","CCM_PROP_FORKED_ORIGIN","removeSpacesStoreRef","parent","request","propertyFilter","getForkedChilds","childs","setData","getNodeUsages","getNodeUsagesCollection","c","collectionUsageType","map","getStats","prop","LOM_PROP_LIFECYCLE_VERSION","displayNode","displayCollection","goToCollection","openPermalink","person","propertyToNumber","CCM_PROP_TRACKING_DOWNLOADS","CCM_PROP_TRACKING_VIEWS","reduce","a","b","nativeElement","getContext","Chart","defaults","global","defaultFontFamily","statsMax","Math","max","myChart","type","datasets","backgroundColor","borderWidth","options","responsive","legend","mode","layout","padding","left","right","top","bottom","scales","xAxes","ticks","yAxes","beginAtZero","round","RestIamService","NodeService","RestSearchService","RestUsageService","viewQuery","WorkspaceMetadataComponent_Query","WorkspaceMetadataComponent_div_0_Template","property","parseInt","DefaultGroups","ElementType","ListItemSort","OptionItem","Scope","Subject","takeUntil","Closable","CLOSE","DELETE_OR_CANCEL","RecycleMainComponent_ng_template_2_h3_0_Template","RecycleMainComponent_ng_template_2_h3_1_Template","searchQuery","RecycleMainComponent_ng_template_4_Template_mat_checkbox_ngModelChange_5_listener","skipDeleteConfirmation","result_r15","RecycleMainComponent_ng_template_6_div_0_div_4_div_1_Template","restoreStatus","RecycleMainComponent_ng_template_6_div_0_div_4_Template","restoreResult_r11","results","result_r21","RecycleMainComponent_ng_template_6_div_1_div_5_div_1_Template","RecycleMainComponent_ng_template_6_div_1_hr_1_Template","RecycleMainComponent_ng_template_6_div_1_div_5_Template","hasDuplicateNames","RecycleMainComponent_ng_template_6_div_0_Template","RecycleMainComponent_ng_template_6_div_1_Template","hasParentFolderMissing","RecycleMainComponent","loadData","currentQuery","offset","sortBy","sortAscending","archive","search","service","searchField","dataSource","CM_ARCHIVED_DATE","useDefaultOptions","addOptions","allowed","active","direction","destroyed","restoreOption","restoreSingle","group","Primary","deleteOption","deleteSingle","forEach","o","elementType","Node","NodePublishedCopy","getCurrentInstance","onSearchTriggered","searchString","ngAfterViewInit","list","initOptionsGenerator","actionbar","customOptions","ngOnDestroy","complete","openConfirmDeleteDialog","closable","Standard","contentTemplate","confirmDeleteDialog","set","deleteNodesWithoutConfirmation","restoreFinished","restoreResult","prepareResults","openRestoreDialog","restoreResults","subtitle","avatar","kind","icon","restoreDialog","context","delete","deleteNodes","getSelection","selected","deleteFinished","handleErrors","clear","get","restoreNodes","toPath","result","isLoading","pagination","appendData","setPagination","click","toggle","element","updateSort","text","RestArchiveService","TemporaryStorageService","SearchFieldService","RecycleMainComponent_Query","RecycleMainComponent_Template_es_node_entries_wrapper_sortChange_0_listener","RecycleMainComponent_Template_es_node_entries_wrapper_clickItem_0_listener","RecycleMainComponent_Template_es_node_entries_wrapper_fetchData_0_listener","RecycleMainComponent_ng_template_2_Template","RecycleMainComponent_ng_template_4_Template","RecycleMainComponent_ng_template_6_Template","WorkspaceList","Emitter","rxjs","OptionsHelperDataService","Helper","canDropOnNode","WorkspaceSubTreeComponent_div_5_div_1_es_workspace_sub_tree_11_Template_es_workspace_sub_tree_onLoading_0_listener","_r14","i_r8","index","setLoadingState","WorkspaceSubTreeComponent_div_5_div_1_es_workspace_sub_tree_11_Template_es_workspace_sub_tree_onUpdateOptions_0_listener","ctx_r15","updateOptions","WorkspaceSubTreeComponent_div_5_div_1_es_workspace_sub_tree_11_Template_es_workspace_sub_tree_hasChildren_0_listener","node_r7","_hasChildren","WorkspaceSubTreeComponent_div_5_div_1_es_workspace_sub_tree_11_Template_es_workspace_sub_tree_onClick_0_listener","openPathEvent","WorkspaceSubTreeComponent_div_5_div_1_es_workspace_sub_tree_11_Template_es_workspace_sub_tree_onDrop_0_listener","dropToParent","currentPath","depth","WorkspaceSubTreeComponent_div_5_div_1_Template_div_contextmenu_0_listener","_r22","contextMenu","WorkspaceSubTreeComponent_div_5_div_1_Template_div_nodeDropped_1_listener","onDropped","WorkspaceSubTreeComponent_div_5_div_1_Template_div_click_1_listener","openOrCloseNode","WorkspaceSubTreeComponent_div_5_div_1_Template_button_click_3_listener","toggleNodeExpansion","WorkspaceSubTreeComponent_div_5_div_1_i_4_Template","WorkspaceSubTreeComponent_div_5_div_1_i_5_Template","WorkspaceSubTreeComponent_div_5_div_1_es_workspace_sub_tree_11_Template","ɵɵstyleProp","isSelected","ui","isTouchSubject","_c2","isOpen","ɵɵpropertyInterpolate","WorkspaceSubTreeComponent_div_5_button_2_Template_button_click_0_listener","_r27","loadAll","_c3","moreItems","ctx_r6","WorkspaceSubTreeComponent_div_5_div_1_Template","WorkspaceSubTreeComponent_div_5_button_2_Template","WorkspaceSubTreeComponent_div_5_es_spinner_3_Template","_nodes","loadingMore","WorkspaceSubTreeComponent","MAX_FOLDER_COUNT","_currentPath","expandCurrentPath","optionsService","onClick","onLoading","onDrop","hasChildren","onUpdateOptions","loadingStates","expandedNodes","merge","nodesDeleted","nodeIds","some","includes","currentChildNode","find","state","pos","optionIsShown","optionItem","showCallback","getChildren","FILTER_FOLDERS","count","COUNT_UNLIMITED","concat","showDropdown","dropdownLeft","clientX","dropdownTop","clientY","activeObjects","scope","WorkspaceTree","initComponents","dropdown","refreshComponents","dropdownTrigger","openMenu","total","initArray","dragData","target","source","draggedNodes","action","UIService","_3","WorkspaceSubTreeComponent_Query","WorkspaceSubTreeComponent_Template","WorkspaceSubTreeComponent_div_5_Template","WorkspaceSubTreeComponent_div_6_Template","_r0","menu","AsyncPipe","i8","TranslatePipe","NodeIconPipe","styles","animation","openOverlay","ANIMATION_TIME_FAST","WorkspaceTreeComponent_div_7_Template_es_workspace_sub_tree_onUpdateOptions_1_listener","ctx_r13","WorkspaceTreeComponent_div_7_Template_es_workspace_sub_tree_onDrop_1_listener","drop","WorkspaceTreeComponent_div_7_Template_es_workspace_sub_tree_onClick_1_listener","openNode","WorkspaceTreeComponent_div_15_Template_es_workspace_sub_tree_onUpdateOptions_1_listener","_r18","ctx_r17","WorkspaceTreeComponent_div_15_Template_es_workspace_sub_tree_onDrop_1_listener","WorkspaceTreeComponent_div_15_Template_es_workspace_sub_tree_onClick_1_listener","WorkspaceTreeComponent_div_23_Template_es_workspace_sub_tree_onUpdateOptions_1_listener","WorkspaceTreeComponent_div_23_Template_es_workspace_sub_tree_onDrop_1_listener","WorkspaceTreeComponent_div_23_Template_es_workspace_sub_tree_onClick_1_listener","ctx_r8","WorkspaceTreeComponent_div_31_Template_es_workspace_sub_tree_onUpdateOptions_1_listener","_r26","WorkspaceTreeComponent_div_31_Template_es_workspace_sub_tree_onDrop_1_listener","WorkspaceTreeComponent_div_31_Template_es_workspace_sub_tree_onClick_1_listener","getRootFolderInternalId","WorkspaceTreeComponent_div_37_Template_es_workspace_sub_tree_onUpdateOptions_1_listener","_r30","WorkspaceTreeComponent_div_37_Template_es_workspace_sub_tree_onDrop_1_listener","ctx_r31","WorkspaceTreeComponent_div_37_Template_es_workspace_sub_tree_onClick_1_listener","ctx_r32","WorkspaceTreeComponent","path","pathIds","onOpenNode","onSetRoot","onDeleteNodes","MY_FILES","SHARED_FILES","MY_SHARED_FILES","TO_ME_SHARED_FILES","WORKFLOW_RECEIVE","RECYCLE","canDropOnRecycle","accept","setRoot","root","onNodesDrop","subTree","WorkspaceTreeComponent_Query","WorkspaceTreeComponent_Template_div_click_0_listener","WorkspaceTreeComponent_i_5_Template","WorkspaceTreeComponent_i_6_Template","WorkspaceTreeComponent_div_7_Template","WorkspaceTreeComponent_Template_div_click_8_listener","WorkspaceTreeComponent_i_13_Template","WorkspaceTreeComponent_i_14_Template","WorkspaceTreeComponent_div_15_Template","WorkspaceTreeComponent_Template_div_click_16_listener","WorkspaceTreeComponent_i_21_Template","WorkspaceTreeComponent_i_22_Template","WorkspaceTreeComponent_div_23_Template","WorkspaceTreeComponent_Template_div_click_24_listener","WorkspaceTreeComponent_i_29_Template","WorkspaceTreeComponent_i_30_Template","WorkspaceTreeComponent_div_31_Template","WorkspaceTreeComponent_Template_div_click_32_listener","WorkspaceTreeComponent_div_37_Template","WorkspaceTreeComponent_Template_div_click_38_listener","WorkspaceTreeComponent_Template_div_nodeDropped_38_listener","RouterModule","WorkspacePageComponent","routes","component","WorkspacePageRoutingModule","forChild","imports","exports","delay","first","FrameEventsService","RestToolService","mapVCard","OK","canDragDrop","WorkspacePageComponent_es_breadcrumbs_3_Template_es_breadcrumbs_onDrop_0_listener","handleDropOnBreadcrumb","WorkspacePageComponent_es_breadcrumbs_3_Template_es_breadcrumbs_onClick_0_listener","openBreadcrumb","query","canDropOnBreadcrumb","WorkspacePageComponent_div_7_div_1_Template_div_click_0_listener","showSelectRoot","WorkspacePageComponent_div_7_div_2_Template_a_click_1_listener","_r16","WorkspacePageComponent_div_7_div_2_Template_a_click_5_listener","WorkspacePageComponent_div_7_div_2_Template_a_click_9_listener","WorkspacePageComponent_div_7_div_2_Template_a_click_13_listener","WorkspacePageComponent_div_7_div_2_Template_a_click_17_listener","WorkspacePageComponent_div_7_div_2_Template_a_click_21_listener","user","quota","WorkspacePageComponent_div_7_div_3_Template_es_workspace_tree_onDrop_1_listener","_r24","handleDrop","WorkspacePageComponent_div_7_div_3_Template_es_workspace_tree_onSetRoot_1_listener","WorkspacePageComponent_div_7_div_3_Template_es_workspace_tree_onOpenNode_1_listener","WorkspacePageComponent_div_7_div_3_Template_es_workspace_tree_onDeleteNodes_1_listener","WorkspacePageComponent_div_7_div_3_es_user_quota_2_Template","ctx_r10","enabled","selectedNodeTree","isSafe","_r1","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template_es_workspace_explorer_refreshTree_0_listener","treeComponent","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template_es_workspace_explorer_displayTypeChange_0_listener","setDisplayType","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template_es_workspace_explorer_reorderDialogChange_0_listener","reorderDialog","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template_es_workspace_explorer_onSearchGlobal_0_listener","searchGlobal","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template_es_workspace_explorer_onDrop_0_listener","ctx_r34","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template_es_workspace_explorer_onViewNode_0_listener","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template_es_workspace_explorer_onOpenNode_0_listener","ctx_r36","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template_es_workspace_explorer_onReset_0_listener","resetWorkspace","currentFolder","displayType","cardHasOpenModals$","WorkspacePageComponent_div_7_div_1_Template","WorkspacePageComponent_div_7_div_2_Template","WorkspacePageComponent_div_7_div_3_Template","WorkspacePageComponent_div_7_es_recycle_4_Template","WorkspacePageComponent_div_7_es_workspace_explorer_8_Template","globalProgress","isLoggedIn","VALID_ROOTS","VALID_ROOTS_NODES","USERHOME","allowBinary","allowBinarySubject","createAllowed","createAllowedSubject","currentFolderSubject","searchQuerySubject","appContainer","breadcrumbsService","card","connectors","iam","loadingScreen","mainNavService","mds","ngZone","route","session","storage","userService","toolService","translations","sharedFolders","editNodeDeleteOnCancel","mainnav","isBlocked","showLtiTools","destroyed$","loadingTask","addLoadingTask","until","denyExplicit","addListener","setRoute","waitForInit","initialize","hasOpenModals","registerScroll","registerUpdateMainNav","remove","getLastLocationStorageId","beforeunloadHandler","handleScroll","scroll","getScrollContainer","scrollTop","onEvent","EVENT_REFRESH","initMainNav","setMainNavConfig","currentScope","create","folder","onCreate","explorer","nodeEntries","addVirtualNodes","onCreateNotAllowed","createNotAllowed","canOpen","searchFieldInstance","enable","placeholder","doSearch","setSearchString","disable","combineLatest","patchMainNavConfig","registerScrollEvents","editConnector","win","connectorType","openConnector","getNodeList","copyNode","moveNode","position","finishMoveCopy","handleNodeError","copy","info","to","params","routeParams","handleParamsUpdate","queryParams","handleQueryParamsUpdate","initUser","observeCurrentUser","notNull","e","_this3","statusCode","STATUS_CODE_OK","goToLogin","valid","isValidLogin","isGuest","hasToolPermissionInstant","TOOLPERMISSION_WORKSPACE","SAFE_SCOPE","logout","prepareActionbar","loadFolders","needsUpdate","oldParams","QUERY_PARAM_LIST_VIEW_TYPE","reurl","file","showNodeInCurrentFolder","lastLocation","pop","openDirectory","replaceUrl","openDirectoryFromRoute","showAlpha","_this4","visibleNodes","setSelection","parameterNode","routeTo","cleared","hideKeyboardIfMobile","doSearchFromRoute","isRootFolder","notAllowedReason","setNodePath","SYS_TYPE_CONTAINER","NODE_RENDER_PARAMETER_DATA_SOURCE","Array","isArray","actionbarRef","invalidate","select","setFixMobileNav","getMainNav","setFixMobileElements","closeMetadata","getNodeParents","getSet","metadataset","DEFAULT","onlyMetadata","updateNodeByParams","getNodesRight","ACCESS_ADD_CHILDREN","recoverScrollposition","useConnector","isSavedSearchObject","routeToSearchNode","isLtiObject","openLtiObject","connectorSupportsEdit","evaluateMediaQuery","MEDIA_QUERY_MAX_WIDTH","MOBILE_TAB_SWITCH_WIDTH","refreshPath","updateNodes","setTimeout","_this5","getCommonParameters","relativeTo","then","Disabled","addToCollection","addNodesToCollection","addToStream","addNodesStream","createVariant","variantNode","getRootFolderId","toMeSharedToggle","TO_ME_SHARED_FILES_PERSONAL","listLTI","window","scrollTo","applyNode","force","addNodeToLms","isDone","done","broadcastEvent","EVENT_NODE_FOLDER_OPENED","canPasteInCurrentLocation","clip","sourceNode","hit","n","copyObjectProperties","_this6","isToggle","Toggles","Unknown","priority","customShowCallback","WORKSPACE_LAST_LOCATION","refreshRoute","queryParamsHandling","_this7","label","color","openDeleteNodesDialog","AppContainerService","BreadcrumbsService","CardService","ConfigurationService","RestConnectorsService","LoadingScreenService","i7","MainNavService","RestMdsService","NgZone","i9","ActivatedRoute","i10","SessionStorageService","i11","UserService","i12","i13","TranslationsService","i14","_4","WorkspacePageComponent_Query","ɵɵresolveWindow","WorkspacePageComponent_es_breadcrumbs_3_Template","WorkspacePageComponent_div_6_Template","WorkspacePageComponent_div_7_Template","WorkspacePageComponent_es_global_progress_8_Template","fade","fromLeft","undefined","SharedModule","WorkspaceExplorerComponent","WorkspacePageModule","declarations","BreadcrumbsComponent","NgIf","CdkDropList","ActionbarComponent","IconDirective","GlobalProgressComponent","SkipTargetDirective","TitleDirective","UserQuotaComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}