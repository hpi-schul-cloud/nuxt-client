{"version":3,"file":"src_app_pages_register-page_register-page_module_ts.js","mappings":"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","sources":["./src/app/pages/register-page/register-done/register-done.component.ts","./src/app/pages/register-page/register-done/register-done.component.html","./src/app/pages/register-page/register-form/register-form.component.ts","./src/app/pages/register-page/register-form/register-form.component.html","./src/app/pages/register-page/register-page-routing.module.ts","./src/app/pages/register-page/register-page.component.ts","./src/app/pages/register-page/register-page.component.html","./src/app/pages/register-page/register-page.module.ts","./src/app/pages/register-page/register-request/register-request.component.ts","./src/app/pages/register-page/register-request/register-request.component.html","./src/app/pages/register-page/register-reset-password/register-reset-password.component.ts","./src/app/pages/register-page/register-reset-password/register-reset-password.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    ConfigurationService,\n    RestConnectorService,\n    RestLocatorService,\n    RestRegisterService,\n} from '../../../core-module/core.module';\nimport { Toast } from '../../../services/toast';\nimport { PlatformLocation } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { UIConstants } from 'ngx-edu-sharing-ui';\nimport { UIHelper } from '../../../core-ui-module/ui-helper';\nimport { CordovaService } from '../../../services/cordova.service';\nimport { RegisterService } from 'ngx-edu-sharing-api';\n\n@Component({\n    selector: 'es-register-done',\n    templateUrl: 'register-done.component.html',\n    styleUrls: ['register-done.component.scss'],\n})\nexport class RegisterDoneComponent {\n    @Output() onModify = new EventEmitter<void>();\n    @Output() onStateChanged = new EventEmitter<void>();\n    @Input() inputState: string;\n    loading = false;\n    email = '';\n    keyInput = '';\n    private _keyUrl = '';\n    private static STATUS_INTERVAL = 5000;\n    private activated = false;\n    get keyUrl() {\n        return this._keyUrl;\n    }\n    set keyUrl(keyUrl: string) {\n        this._keyUrl = keyUrl;\n        this.loading = true;\n        this.activate(keyUrl);\n    }\n\n    public editMail() {\n        this.onModify.emit();\n    }\n    public sendMail() {\n        this.loading = true;\n        this.changes.detectChanges();\n        if (this.inputState == 'done') {\n            this.register.resendMail(this.email).subscribe(\n                () => {\n                    this.toast.toast('REGISTER.TOAST');\n                    this.loading = false;\n                    this.changes.detectChanges();\n                },\n                (error) => {\n                    this.loading = false;\n                    this.changes.detectChanges();\n                },\n            );\n        } else {\n            this.register.recoverPassword(this.email).subscribe(\n                () => {\n                    this.loading = false;\n                    this.changes.detectChanges();\n                },\n                (error) => {\n                    this.loading = false;\n                    this.changes.detectChanges();\n                },\n            );\n        }\n    }\n    constructor(\n        private toast: Toast,\n        private register: RegisterService,\n        private platformLocation: PlatformLocation,\n        private config: ConfigurationService,\n        private cordova: CordovaService,\n        private changes: ChangeDetectorRef,\n        private locator: RestLocatorService,\n        private router: Router,\n    ) {\n        setTimeout(() => this.checkStatus(), RegisterDoneComponent.STATUS_INTERVAL);\n    }\n\n    // loop and check if the user has already registered in another tab\n    private checkStatus() {\n        if (this.activated) {\n            return;\n        }\n        if (this.inputState != 'done') {\n            setTimeout(() => this.checkStatus(), RegisterDoneComponent.STATUS_INTERVAL);\n            return;\n        }\n        this.register.mailExists(this.email).subscribe(\n            (status) => {\n                if (status.exists) {\n                    this.router.navigate([UIConstants.ROUTER_PREFIX, 'login'], {\n                        queryParams: { username: this.email },\n                    });\n                    return;\n                }\n                setTimeout(() => this.checkStatus(), RegisterDoneComponent.STATUS_INTERVAL);\n            },\n            (error) => {\n                setTimeout(() => this.checkStatus(), RegisterDoneComponent.STATUS_INTERVAL);\n            },\n        );\n    }\n    public activate(keyUrl: string) {\n        this.loading = true;\n        this.changes.detectChanges();\n        if (this.inputState == 'done') {\n            this.register.activate(keyUrl).subscribe(\n                () => {\n                    this.activated = true;\n                    if (this.cordova.isRunningCordova()) {\n                        this.locator.createOAuthFromSession().subscribe(\n                            () => {\n                                UIHelper.goToDefaultLocation(\n                                    this.router,\n                                    this.platformLocation,\n                                    this.config,\n                                );\n                            },\n                            (error) => {\n                                this.toast.error(error);\n                            },\n                        );\n                    } else {\n                        UIHelper.goToDefaultLocation(\n                            this.router,\n                            this.platformLocation,\n                            this.config,\n                        );\n                    }\n                },\n                (error) => {\n                    if (error?.error?.error.includes('DAOInvalidKeyException')) {\n                        this.toast.error(null, 'REGISTER.TOAST_INVALID_KEY');\n                    } else {\n                        this.toast.error(error);\n                    }\n                    this.loading = false;\n                    this.changes.detectChanges();\n                },\n            );\n        } else {\n            this.router.navigate([\n                UIConstants.ROUTER_PREFIX,\n                'register',\n                'reset-password',\n                this.keyInput,\n            ]);\n        }\n    }\n}\n","<es-spinner *ngIf=\"loading\"></es-spinner>\n<div class=\"done-info\" *ngIf=\"!loading\">\n  <img\n    *ngIf=\"inputState === 'done'\"\n    [src]=\"'assets/images/register/register-confirm.svg' | esAssetsPath\"\n    alt=\"\"\n  />\n  <img\n    *ngIf=\"inputState !== 'done'\"\n    [src]=\"'assets/images/register/register-mail.svg' | esAssetsPath\"\n    alt=\"\"\n  />\n  <h4>{{ 'REGISTER.DONE.TITLE' | translate }}</h4>\n  <p class=\"mail-info\">\n    {{ 'REGISTER.DONE.MAIL_INFO' | translate }}\n    <span (click)=\"editMail()\">{{ email }} <i *ngIf=\"!keyUrl\" class=\"material-icons\">edit</i></span>\n    {{ 'REGISTER.DONE.MAIL_INFO2' | translate }}\n  </p>\n  <p>\n    {{\n      (inputState === 'done-reset' ? 'REGISTER.REQUEST' : 'REGISTER.DONE') + '.MAIL_NOTE'\n        | translate\n    }}\n  </p>\n  <div *ngIf=\"!keyUrl\" class=\"keyForm\">\n    <form (ngSubmit)=\"keyInput.trim() ? activate(keyInput) : null\">\n      <mat-form-field>\n        <mat-label>{{ 'REGISTER.DONE.KEY_PL' | translate }}</mat-label>\n        <input\n          matInput\n          id=\"key\"\n          name=\"key\"\n          [(ngModel)]=\"keyInput\"\n          (ngModelChange)=\"onStateChanged.emit()\"\n        />\n        <mat-hint>{{ 'REGISTER.DONE.ACTIVATE_HINT' | translate }}</mat-hint>\n      </mat-form-field>\n    </form>\n  </div>\n\n  <strong>{{ 'REGISTER.DONE.NO_MAIL' | translate }}</strong>\n  <small>{{ 'REGISTER.DONE.NO_MAIL_INFO' | translate }}</small>\n  <a\n    *ngIf=\"!keyUrl\"\n    class=\"send-mail\"\n    tabindex=\"0\"\n    (click)=\"sendMail()\"\n    (keyup.enter)=\"sendMail()\"\n    >{{ 'REGISTER.DONE.SEND_MAIL' | translate }}</a\n  >\n</div>\n","import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { Toast } from '../../../services/toast';\nimport { Router } from '@angular/router';\nimport { ConfigurationService, RegisterInformation } from '../../../core-module/core.module';\nimport { TranslationsService } from 'ngx-edu-sharing-ui';\nimport { UIHelper } from '../../../core-ui-module/ui-helper';\nimport { PlatformLocation } from '@angular/common';\nimport {\n    UntypedFormBuilder,\n    UntypedFormControl,\n    UntypedFormGroup,\n    Validators,\n} from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { VCard } from 'ngx-edu-sharing-ui';\nimport { RegisterService } from 'ngx-edu-sharing-api';\n\n@Component({\n    selector: 'es-register-form',\n    templateUrl: 'register-form.component.html',\n    styleUrls: ['register-form.component.scss'],\n})\nexport class RegisterFormComponent implements OnDestroy {\n    @Output() onRegisterDone = new EventEmitter();\n    @Output() onStateChanged = new EventEmitter<void>();\n    password: string;\n    registerForm: UntypedFormGroup;\n    private destroyed$: ReplaySubject<void> = new ReplaySubject(1);\n    info: RegisterInformation & { vcard: string };\n    public news = true;\n    public agree = false;\n    public privacyUrl: string;\n    requiredFields: string[] = [];\n\n    public register() {\n        this.toast.showProgressSpinner();\n        const rawData = this.registerForm.getRawValue();\n        this.info = rawData;\n        // wrap additional fields (at the moment only \"title\") into an additional vcard\n        const vcard = new VCard();\n        vcard.title = rawData.title;\n        this.info.vcard = vcard.toVCardString();\n        delete (this.info as any).title;\n\n        delete (this.info as any).agree;\n        this.info.password = this.password;\n        this.registerService.register(this.info).subscribe(\n            () => {\n                this.toast.closeProgressSpinner();\n                this.onRegisterDone.emit();\n                // this.toast.toast(\"REGISTER.TOAST\");\n            },\n            (error) => {\n                if (UIHelper.errorContains(error, 'DuplicateAuthorityException')) {\n                    this.registerForm.setErrors({ incorrect: true });\n                    this.toast.error(null, 'REGISTER.TOAST_DUPLICATE');\n                } else {\n                    this.toast.error(error);\n                }\n                this.toast.closeProgressSpinner();\n            },\n        );\n    }\n\n    public openPrivacy() {\n        window.open(this.privacyUrl);\n    }\n\n    public canRegister() {\n        return (\n            this.registerForm.valid &&\n            this.password &&\n            UIHelper.getPasswordStrengthString(this.password) !== 'weak'\n        );\n    }\n\n    constructor(\n        private toast: Toast,\n        private platformLocation: PlatformLocation,\n        private formBuilder: UntypedFormBuilder,\n        private router: Router,\n        private registerService: RegisterService,\n        private translations: TranslationsService,\n        private configService: ConfigurationService,\n    ) {\n        this.translations.waitForInit().subscribe(() => {\n            this.privacyUrl = this.configService.instant('privacyInformationUrl');\n            this.requiredFields = this.configService.instant('register.requiredFields', [\n                'firstName',\n            ]);\n\n            this.registerForm = this.formBuilder.group({\n                title: new UntypedFormControl(\n                    '',\n                    this.requiredFields.includes('title') ? [Validators.required] : null,\n                ),\n                firstName: new UntypedFormControl(\n                    '',\n                    this.requiredFields.includes('firstName') ? [Validators.required] : null,\n                ),\n                lastName: new UntypedFormControl(\n                    '',\n                    this.requiredFields.includes('lastName') ? [Validators.required] : null,\n                ),\n                organization: new UntypedFormControl(\n                    '',\n                    this.requiredFields.includes('organization') ? [Validators.required] : null,\n                ),\n                email: new UntypedFormControl('', [Validators.required, Validators.email]),\n                agree: new UntypedFormControl(false, [Validators.requiredTrue]),\n                allowNotifications: new UntypedFormControl(false),\n            });\n            this.registerForm.statusChanges\n                .pipe(takeUntil(this.destroyed$))\n                .subscribe(() => this.onStateChanged.emit());\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n}\n","<form (ngSubmit)=\"register()\" #loginForm *ngIf=\"registerForm\" [formGroup]=\"registerForm\">\n  <div class=\"name-input\">\n    <mat-form-field class=\"title\">\n      <mat-label>{{ 'VCARD.Title' | translate }}</mat-label>\n      <input matInput type=\"text\" formControlName=\"title\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>{{ 'USER.firstName' | translate }}</mat-label>\n      <input matInput type=\"text\" formControlName=\"firstName\" />\n    </mat-form-field>\n    <mat-form-field class=\"last-name\">\n      <mat-label>{{ 'USER.lastName' | translate }}</mat-label>\n      <input matInput type=\"text\" formControlName=\"lastName\" />\n    </mat-form-field>\n  </div>\n\n  <mat-form-field>\n    <mat-label>{{ 'USER.email' | translate }}</mat-label>\n    <input matInput type=\"email\" formControlName=\"email\" />\n  </mat-form-field>\n  <es-input-password\n    label=\"{{ 'USER.password' | translate }}\"\n    hint=\"{{ 'REGISTER.HINT' | translate }}\"\n    [displayStrength]=\"true\"\n    autocomplete=\"new-password\"\n    inputId=\"password\"\n    [required]=\"true\"\n    (keydown.enter)=\"register()\"\n    [(value)]=\"password\"\n    (valueChange)=\"onStateChanged.emit()\"\n  ></es-input-password>\n  <mat-form-field class=\"organization\">\n    <mat-label>{{ 'REGISTER.ORGANIZATION' | translate }}</mat-label>\n    <input matInput type=\"text\" formControlName=\"organization\" />\n  </mat-form-field>\n  <div class=\"accept\">\n    <mat-checkbox formControlName=\"agree\">{{ 'REGISTER.ACCEPT' | translate }}</mat-checkbox>\n    <a class=\"clickable imprint\" *ngIf=\"privacyUrl\" (click)=\"openPrivacy()\">{{\n      'REGISTER.PRIVACY-LINK' | translate\n    }}</a>\n  </div>\n  <mat-checkbox formControlName=\"allowNotifications\">{{\n    'REGISTER.NEWSLETTER' | translate\n  }}</mat-checkbox>\n</form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterPageComponent } from './register-page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RegisterPageComponent,\n    },\n    {\n        path: ':status',\n        component: RegisterPageComponent,\n    },\n    {\n        path: ':status/:key',\n        component: RegisterPageComponent,\n    },\n    {\n        path: ':status/:key/:email',\n        component: RegisterPageComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { PlatformLocation } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Params, Router, UrlSerializer } from '@angular/router';\nimport { TranslationsService, UIConstants } from 'ngx-edu-sharing-ui';\nimport {\n    ConfigurationService,\n    DialogButton,\n    RestConnectorService,\n    RestHelper,\n    UIService,\n} from '../../core-module/core.module';\nimport { Toast } from '../../services/toast';\nimport { UIHelper } from '../../core-ui-module/ui-helper';\nimport { RegisterDoneComponent } from './register-done/register-done.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { RegisterRequestComponent } from './register-request/register-request.component';\nimport { RegisterResetPasswordComponent } from './register-reset-password/register-reset-password.component';\n\n@Component({\n    selector: 'es-register-page',\n    templateUrl: 'register-page.component.html',\n    styleUrls: ['register-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegisterPageComponent implements OnInit {\n    @ViewChild('registerForm') registerForm: RegisterFormComponent;\n    @ViewChild('registerDone') registerDone: RegisterDoneComponent;\n    @ViewChild('request') request: RegisterRequestComponent;\n    @ViewChild('resetPassword') resetPassword: RegisterResetPasswordComponent;\n    public isLoading = true;\n    state: 'register' | 'request' | 'reset-password' | 'done' | 'done-reset' = 'register';\n    buttons: DialogButton[];\n    params: Params;\n\n    public cancel() {\n        RestHelper.goToLogin(this.router, this.configService, null, null);\n    }\n\n    public requestDone(email: string) {\n        this.request.submit();\n    }\n    public linkRegister() {\n        this.router.navigate([UIConstants.ROUTER_PREFIX + 'register']);\n    }\n    public newPassword() {\n        this.resetPassword.newPassword();\n    }\n\n    constructor(\n        private connector: RestConnectorService,\n        private toast: Toast,\n        private platformLocation: PlatformLocation,\n        private router: Router,\n        private translations: TranslationsService,\n        private uiService: UIService,\n        private configService: ConfigurationService,\n        private changes: ChangeDetectorRef,\n        private route: ActivatedRoute,\n    ) {}\n\n    ngOnInit() {\n        this.updateButtons();\n        this.route.params.subscribe((params) => {\n            this.params = params;\n            if (params.status) {\n                if (\n                    params.status === 'done' ||\n                    params.status === 'done-reset' ||\n                    params.status === 'request' ||\n                    params.status === 'reset-password'\n                ) {\n                    this.state = params.status;\n                    this.changes.detectChanges();\n                } else {\n                    this.router.navigate([UIConstants.ROUTER_PREFIX, 'register']);\n                }\n            }\n        });\n\n        this.translations.waitForInit().subscribe(() => {\n            this.isLoading = false;\n            if (['request', 'reset-password', 'done-reset'].indexOf(this.params.status) !== -1) {\n                if (\n                    this.configService.instant('register.local', true as boolean) === false &&\n                    this.configService.instant('register.recoverPassword', false) === false\n                ) {\n                    RestHelper.goToLogin(this.router, this.configService, null, null);\n                }\n            } else if (!this.configService.instant('register.local', true)) {\n                RestHelper.goToLogin(this.router, this.configService, null, null);\n            }\n            setTimeout(() => this.setParams());\n            this.connector.isLoggedIn().subscribe((data) => {\n                if (data.statusCode === 'OK') {\n                    UIHelper.goToDefaultLocation(\n                        this.router,\n                        this.platformLocation,\n                        this.configService,\n                    );\n                }\n            });\n        });\n    }\n\n    onRegisterDone() {\n        const email = this.registerForm.info.email;\n        this.state = 'done';\n        this.changes.detectChanges();\n        this.updateButtons();\n        // will lose state when going back to register form\n        // this.router.navigate([UIConstants.ROUTER_PREFIX,\"register\",\"done\",\"-\",email]);\n        this.uiService.waitForComponent(this, 'registerDone').subscribe(() => {\n            this.registerDone.email = email;\n            this.changes.detectChanges();\n            this.updateButtons();\n        });\n        this.toast.toast('REGISTER.TOAST');\n    }\n\n    private setParams() {\n        this.route.params.subscribe((params) => {\n            this.params = params;\n            if (params.email) {\n                this.registerDone.email = params.email;\n            }\n            if (params.key) {\n                if (this.registerDone) {\n                    this.registerDone.keyUrl = params.key;\n                }\n            }\n        });\n    }\n\n    modifyData() {\n        if (this.state === 'done') {\n            this.state = 'register';\n        } else {\n            this.state = 'request';\n        }\n        this.updateButtons();\n    }\n\n    onPasswordRequested() {\n        const email = this.request.emailFormControl.value;\n        this.state = 'done-reset';\n        setTimeout(() => (this.registerDone.email = email));\n    }\n\n    updateButtons() {\n        const primaryButton = this.getPrimaryButton();\n        const cancelButton = new DialogButton('CANCEL', { color: 'standard' }, () => this.cancel());\n        this.buttons = [cancelButton];\n        if (primaryButton) {\n            this.buttons.push(primaryButton);\n        }\n        return this.buttons;\n    }\n\n    private getPrimaryButton(): DialogButton {\n        let btn: DialogButton;\n        if (this.state === 'register') {\n            btn = new DialogButton('REGISTER.BUTTON', { color: 'primary' }, () =>\n                this.registerForm.register(),\n            );\n            btn.disabled = !this.registerForm || !this.registerForm.canRegister();\n        }\n        if (this.state === 'request') {\n            btn = new DialogButton('REGISTER.REQUEST.BUTTON', { color: 'primary' }, () => {\n                this.requestDone(this.request.emailFormControl.value);\n            });\n            btn.disabled = !this.request || !this.request.emailFormControl.valid;\n        }\n        if (this.state === 'reset-password') {\n            btn = new DialogButton('REGISTER.RESET.BUTTON', { color: 'primary' }, () =>\n                this.newPassword(),\n            );\n            btn.disabled = !this.resetPassword || !this.resetPassword.buttonCheck();\n        }\n        if ((this.state === 'done' || this.state === 'done-reset') && this.registerDone) {\n            btn = new DialogButton(\n                this.state === 'done' ? 'REGISTER.DONE.ACTIVATE' : 'NEXT',\n                { color: 'primary' },\n                () => this.registerDone.activate(this.registerDone.keyInput),\n            );\n            btn.disabled = !this.registerDone || !this.registerDone.keyInput.trim();\n        }\n        return btn;\n    }\n\n    canRegister() {\n        return this.configService.instant('register.local', true);\n    }\n}\n","<es-global-progress *ngIf=\"isLoading\"></es-global-progress>\n<es-card\n  *ngIf=\"!isLoading\"\n  role=\"main\"\n  esSkipTarget=\"MAIN_CONTENT\"\n  avatar=\"assets/images/app-icon.svg\"\n  [buttons]=\"buttons\"\n  title=\"{{\n    (state === 'request' || state === 'done-reset'\n      ? 'REGISTER.REQUEST.TITLE'\n      : state === 'reset-password'\n      ? 'REGISTER.RESET.TITLE'\n      : 'REGISTER.TITLE'\n    ) | translate\n  }}\"\n  subtitle=\"{{ 'REGISTER.ORGANIZATION_TITLE' | translate }}\"\n  width=\"normal\"\n  height=\"large\"\n  (onCancel)=\"cancel()\"\n  [isCancelable]=\"false\"\n>\n  <div class=\"register-content card-content-padding\">\n    <h1 esTitle class=\"cdk-visually-hidden\">{{ 'REGISTER.TITLE' | translate }}</h1>\n    <es-register-form\n      [class.display-none]=\"!(state === 'register')\"\n      (onStateChanged)=\"updateButtons()\"\n      (onRegisterDone)=\"onRegisterDone()\"\n      #registerForm\n    ></es-register-form>\n    <es-register-done\n      *ngIf=\"state === 'done' || state === 'done-reset'\"\n      (onStateChanged)=\"updateButtons()\"\n      (onModify)=\"modifyData()\"\n      [inputState]=\"state\"\n      #registerDone\n    ></es-register-done>\n    <es-register-request\n      *ngIf=\"state === 'request'\"\n      (onStateChanged)=\"updateButtons()\"\n      (onDone)=\"onPasswordRequested()\"\n      #request\n    ></es-register-request>\n    <es-register-reset-password\n      *ngIf=\"state === 'reset-password'\"\n      (onStateChanged)=\"updateButtons()\"\n      #resetPassword\n      [params]=\"params\"\n    ></es-register-reset-password>\n    <div\n      *ngIf=\"\n        state !== 'register' &&\n        state !== 'done' &&\n        state !== 'done-reset' &&\n        state !== 'request' &&\n        canRegister()\n      \"\n      class=\"register\"\n    >\n      {{ 'LOGIN.REGISTER_TEXT' | translate }}\n      <button mat-button color=\"primary\" (click)=\"linkRegister()\">\n        {{ 'LOGIN.REGISTER_LINK' | translate }} <i esIcon=\"arrow_forward\"></i>\n      </button>\n    </div>\n  </div>\n</es-card>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { RegisterDoneComponent } from './register-done/register-done.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { RegisterPageRoutingModule } from './register-page-routing.module';\nimport { RegisterPageComponent } from './register-page.component';\nimport { RegisterRequestComponent } from './register-request/register-request.component';\nimport { RegisterResetPasswordComponent } from './register-reset-password/register-reset-password.component';\n\n@NgModule({\n    declarations: [\n        RegisterPageComponent,\n        RegisterFormComponent,\n        RegisterDoneComponent,\n        RegisterRequestComponent,\n        RegisterResetPasswordComponent,\n    ],\n    imports: [SharedModule, RegisterPageRoutingModule],\n})\nexport class RegisterPageModule {}\n","import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestConnectorService, RestRegisterService } from '../../../core-module/core.module';\nimport { Toast } from '../../../services/toast';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { RegisterService } from 'ngx-edu-sharing-api';\n\n@Component({\n    selector: 'es-register-request',\n    templateUrl: 'register-request.component.html',\n    styleUrls: ['register-request.component.scss'],\n})\nexport class RegisterRequestComponent implements OnDestroy {\n    @Output() onDone = new EventEmitter();\n    @Output() onStateChanged = new EventEmitter<void>();\n    private destroyed$: ReplaySubject<void> = new ReplaySubject(1);\n    emailFormControl = new UntypedFormControl('', [\n        Validators.required,\n        // Validators.email, // also local accounts are allowed for restore\n    ]);\n    constructor(private toast: Toast, private register: RegisterService) {\n        this.emailFormControl.statusChanges\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(() => this.onStateChanged.emit());\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    submit() {\n        if (!this.emailFormControl.valid) return;\n        this.toast.showProgressSpinner();\n        this.register.recoverPassword(this.emailFormControl.value).subscribe(\n            () => {\n                this.toast.closeProgressSpinner();\n                this.toast.toast('REGISTER.TOAST');\n                this.onDone.emit();\n            },\n            (error) => {\n                this.toast.closeProgressSpinner();\n                console.log(error);\n                if (error?.error?.error?.includes('DAOInvalidKeyException')) {\n                    this.toast.error(null, 'REGISTER.TOAST_INVALID_MAIL');\n                } else {\n                    this.toast.error(error);\n                }\n            },\n        );\n\n        // this.toast.error(null, \"\");\n    }\n}\n","<div class=\"header\">\n  <img [src]=\"'assets/images/register/register-password.svg' | esAssetsPath\" alt=\"\" />\n  <h4 class=\"headline\">{{ 'REGISTER.REQUEST.HEADLINE' | translate }}</h4>\n</div>\n<div>\n  <p class=\"info\">{{ 'REGISTER.REQUEST.INFO' | translate }}</p>\n  <form (ngSubmit)=\"submit()\">\n    <mat-form-field>\n      <mat-label>{{ 'REGISTER.REQUEST.EMAIL_ACCOUNT_NAME' | translate }}</mat-label>\n      <input matInput type=\"email\" name=\"email\" id=\"email\" [formControl]=\"emailFormControl\" />\n    </mat-form-field>\n  </form>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Toast } from '../../../services/toast';\nimport { Params, Router } from '@angular/router';\nimport { UIHelper } from '../../../core-ui-module/ui-helper';\nimport { UIConstants } from 'ngx-edu-sharing-ui';\nimport { RegisterService } from 'ngx-edu-sharing-api';\n\n@Component({\n    selector: 'es-register-reset-password',\n    templateUrl: 'register-reset-password.component.html',\n    styleUrls: ['register-reset-password.component.scss'],\n})\nexport class RegisterResetPasswordComponent {\n    @Output() onStateChanged = new EventEmitter<void>();\n    public new_password = '';\n    @Input() params: Params;\n    public buttonCheck() {\n        if (\n            UIHelper.getPasswordStrengthString(this.new_password) != 'weak' &&\n            this.new_password.trim()\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public newPassword() {\n        this.toast.showProgressSpinner();\n        this.register.resetPassword(this.params.key, this.new_password).subscribe(\n            () => {\n                this.toast.closeProgressSpinner();\n                this.toast.toast('REGISTER.RESET.TOAST');\n                this.router.navigate([UIConstants.ROUTER_PREFIX, 'login']);\n            },\n            (error) => {\n                console.log('error', error);\n                this.toast.closeProgressSpinner();\n                if (error?.error?.error?.includes('DAOInvalidKeyException')) {\n                    this.toast.error(null, 'REGISTER.TOAST_INVALID_RESET_KEY');\n                    this.router.navigate([UIConstants.ROUTER_PREFIX, 'register', 'request']);\n                } else {\n                    this.toast.error(error);\n                }\n            },\n        );\n    }\n    constructor(private toast: Toast, private register: RegisterService, private router: Router) {}\n}\n","<div class=\"reset-info\">\n  <img [src]=\"'assets/images/register/register-password.svg' | esAssetsPath\" />\n  <h5>{{ 'REGISTER.RESET.REST_INFO' | translate }}</h5>\n</div>\n\n<div>\n  <label for=\"password_new\"></label>\n  <es-input-password\n    hint=\"{{ 'REGISTER.HINT' | translate }}\"\n    [displayStrength]=\"true\"\n    inputId=\"password_new\"\n    [required]=\"true\"\n    (keydown.enter)=\"newPassword()\"\n    [(value)]=\"new_password\"\n    label=\"{{ 'USER.password' | translate }}\"\n    (valueChange)=\"onStateChanged.emit()\"\n  ></es-input-password>\n</div>\n"],"names":["EventEmitter","UIConstants","UIHelper","i0","ɵɵelement","ɵɵproperty","ɵɵpipeBind1","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterDoneComponent_div_1_div_17_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","keyInput","trim","activate","RegisterDoneComponent_div_1_div_17_Template_input_ngModelChange_6_listener","$event","ctx_r9","ctx_r10","onStateChanged","emit","ɵɵadvance","ɵɵtextInterpolate","ctx_r5","RegisterDoneComponent_div_1_a_24_Template_a_click_0_listener","_r12","ctx_r11","sendMail","RegisterDoneComponent_div_1_a_24_Template_a_keyup_enter_0_listener","ctx_r13","ɵɵtemplate","RegisterDoneComponent_div_1_img_1_Template","RegisterDoneComponent_div_1_img_2_Template","RegisterDoneComponent_div_1_Template_span_click_9_listener","_r15","ctx_r14","editMail","RegisterDoneComponent_div_1_i_11_Template","RegisterDoneComponent_div_1_div_17_Template","RegisterDoneComponent_div_1_a_24_Template","ctx_r1","inputState","ɵɵtextInterpolate1","email","keyUrl","RegisterDoneComponent","_","STATUS_INTERVAL","_keyUrl","loading","onModify","changes","detectChanges","register","resendMail","subscribe","toast","error","recoverPassword","constructor","platformLocation","config","cordova","locator","router","activated","setTimeout","checkStatus","mailExists","status","exists","navigate","ROUTER_PREFIX","queryParams","username","isRunningCordova","createOAuthFromSession","goToDefaultLocation","includes","_2","ɵɵdirectiveInject","i1","Toast","i2","RegisterService","i3","PlatformLocation","i4","ConfigurationService","i5","CordovaService","ChangeDetectorRef","RestLocatorService","i6","Router","_3","selectors","inputs","outputs","decls","vars","consts","template","RegisterDoneComponent_Template","rf","ctx","RegisterDoneComponent_es_spinner_0_Template","RegisterDoneComponent_div_1_Template","UntypedFormControl","Validators","ReplaySubject","takeUntil","VCard","RegisterFormComponent_form_0_a_35_Template_a_click_0_listener","_r4","ctx_r3","openPrivacy","RegisterFormComponent_form_0_Template_form_ngSubmit_0_listener","_r6","RegisterFormComponent_form_0_Template_es_input_password_keydown_enter_23_listener","RegisterFormComponent_form_0_Template_es_input_password_valueChange_23_listener","ctx_r8","password","RegisterFormComponent_form_0_a_35_Template","ctx_r0","registerForm","ɵɵpropertyInterpolate","privacyUrl","RegisterFormComponent","showProgressSpinner","rawData","getRawValue","info","vcard","title","toVCardString","agree","registerService","closeProgressSpinner","onRegisterDone","errorContains","setErrors","incorrect","window","open","canRegister","valid","getPasswordStrengthString","formBuilder","translations","configService","destroyed$","news","requiredFields","waitForInit","instant","group","required","firstName","lastName","organization","requiredTrue","allowNotifications","statusChanges","pipe","ngOnDestroy","next","complete","UntypedFormBuilder","TranslationsService","i7","RegisterFormComponent_Template","RegisterFormComponent_form_0_Template","RouterModule","RegisterPageComponent","routes","path","component","RegisterPageRoutingModule","forChild","imports","exports","DialogButton","RestHelper","RegisterPageComponent_es_card_1_es_register_done_9_Template_es_register_done_onStateChanged_0_listener","_r9","updateButtons","RegisterPageComponent_es_card_1_es_register_done_9_Template_es_register_done_onModify_0_listener","modifyData","state","RegisterPageComponent_es_card_1_es_register_request_10_Template_es_register_request_onStateChanged_0_listener","_r13","ctx_r12","RegisterPageComponent_es_card_1_es_register_request_10_Template_es_register_request_onDone_0_listener","onPasswordRequested","RegisterPageComponent_es_card_1_es_register_reset_password_11_Template_es_register_reset_password_onStateChanged_0_listener","_r17","ctx_r16","params","RegisterPageComponent_es_card_1_div_12_Template_button_click_3_listener","_r19","ctx_r18","linkRegister","RegisterPageComponent_es_card_1_Template_es_card_onCancel_0_listener","_r21","ctx_r20","cancel","RegisterPageComponent_es_card_1_Template_es_register_form_onStateChanged_7_listener","ctx_r22","RegisterPageComponent_es_card_1_Template_es_register_form_onRegisterDone_7_listener","ctx_r23","RegisterPageComponent_es_card_1_es_register_done_9_Template","RegisterPageComponent_es_card_1_es_register_request_10_Template","RegisterPageComponent_es_card_1_es_register_reset_password_11_Template","RegisterPageComponent_es_card_1_div_12_Template","buttons","ɵɵclassProp","goToLogin","requestDone","request","submit","newPassword","resetPassword","connector","uiService","route","isLoading","ngOnInit","indexOf","setParams","isLoggedIn","data","statusCode","waitForComponent","registerDone","key","emailFormControl","value","primaryButton","getPrimaryButton","cancelButton","color","push","btn","disabled","buttonCheck","RestConnectorService","UIService","ActivatedRoute","viewQuery","RegisterPageComponent_Query","RegisterPageComponent_es_global_progress_0_Template","RegisterPageComponent_es_card_1_Template","SharedModule","RegisterRequestComponent","RegisterResetPasswordComponent","RegisterPageModule","declarations","onDone","console","log","RegisterRequestComponent_Template","RegisterRequestComponent_Template_form_ngSubmit_10_listener","new_password","RegisterResetPasswordComponent_Template","RegisterResetPasswordComponent_Template_es_input_password_keydown_enter_8_listener","RegisterResetPasswordComponent_Template_es_input_password_valueChange_8_listener"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}